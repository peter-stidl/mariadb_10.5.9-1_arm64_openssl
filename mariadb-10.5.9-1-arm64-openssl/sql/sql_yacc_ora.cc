/* A Bison parser, made by GNU Bison 3.0.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2013 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         ORAparse
#define yylex           ORAlex
#define yyerror         ORAerror
#define yydebug         ORAdebug
#define yynerrs         ORAnerrs


/* Copy the first part of user declarations.  */
#line 25 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:339  */

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"
#include "sql_type_json.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                          \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(thd);  \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


static Item* escape(THD *thd)
{
  thd->lex->escape_used= false;
  const char *esc= thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES ? "" : "\\";
  return new (thd->mem_root) Item_string_ascii(thd, esc, MY_TEST(esc[0]));
}


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static void yyerror(THD *thd, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}


#ifndef DBUG_OFF
#define __CONCAT_UNDERSCORED(x,y)  x ## _ ## y
#define _CONCAT_UNDERSCORED(x,y)   __CONCAT_UNDERSCORED(x,y)
void _CONCAT_UNDERSCORED(turn_parser_debug_on,yyparse)()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug-dbug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug-dbug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

#ifndef _AIX
  extern int yydebug;
#else
  static int yydebug;
#endif
  yydebug= 1;
}
#endif


#define bincmp_collation(X,Y)           \
  do                                    \
  {                                     \
     if (unlikely(Lex->set_bincmp(X,Y))) \
       MYSQL_YYABORT;                   \
  } while(0)


#line 247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc_ora.hh".  */
#ifndef YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED
# define YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int ORAdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    IMPOSSIBLE_ACTION = 259,
    END_OF_INPUT = 260,
    COLON_ORACLE_SYM = 261,
    PARAM_MARKER = 262,
    FOR_SYSTEM_TIME_SYM = 263,
    LEFT_PAREN_ALT = 264,
    LEFT_PAREN_WITH = 265,
    LEFT_PAREN_LIKE = 266,
    ORACLE_CONCAT_SYM = 267,
    PERCENT_ORACLE_SYM = 268,
    WITH_CUBE_SYM = 269,
    WITH_ROLLUP_SYM = 270,
    WITH_SYSTEM_SYM = 271,
    IDENT = 272,
    IDENT_QUOTED = 273,
    LEX_HOSTNAME = 274,
    UNDERSCORE_CHARSET = 275,
    BIN_NUM = 276,
    DECIMAL_NUM = 277,
    FLOAT_NUM = 278,
    HEX_NUM = 279,
    HEX_STRING = 280,
    LONG_NUM = 281,
    NCHAR_STRING = 282,
    NUM = 283,
    TEXT_STRING = 284,
    ULONGLONG_NUM = 285,
    AND_AND_SYM = 286,
    DOT_DOT_SYM = 287,
    EQUAL_SYM = 288,
    GE = 289,
    LE = 290,
    MYSQL_CONCAT_SYM = 291,
    NE = 292,
    NOT2_SYM = 293,
    OR2_SYM = 294,
    SET_VAR = 295,
    SHIFT_LEFT = 296,
    SHIFT_RIGHT = 297,
    ACCESSIBLE_SYM = 298,
    ADD = 299,
    ALL = 300,
    ALTER = 301,
    ANALYZE_SYM = 302,
    AND_SYM = 303,
    ASC = 304,
    ASENSITIVE_SYM = 305,
    AS = 306,
    BEFORE_SYM = 307,
    BETWEEN_SYM = 308,
    BIGINT = 309,
    BINARY = 310,
    BIT_AND = 311,
    BIT_OR = 312,
    BIT_XOR = 313,
    BLOB_MARIADB_SYM = 314,
    BLOB_ORACLE_SYM = 315,
    BODY_ORACLE_SYM = 316,
    BOTH = 317,
    BY = 318,
    CALL_SYM = 319,
    CASCADE = 320,
    CASE_SYM = 321,
    CAST_SYM = 322,
    CHANGE = 323,
    CHAR_SYM = 324,
    CHECK_SYM = 325,
    COLLATE_SYM = 326,
    CONDITION_SYM = 327,
    CONSTRAINT = 328,
    CONTINUE_MARIADB_SYM = 329,
    CONTINUE_ORACLE_SYM = 330,
    CONVERT_SYM = 331,
    COUNT_SYM = 332,
    CREATE = 333,
    CROSS = 334,
    CUME_DIST_SYM = 335,
    CURDATE = 336,
    CURRENT_ROLE = 337,
    CURRENT_USER = 338,
    CURSOR_SYM = 339,
    CURTIME = 340,
    DATABASE = 341,
    DATABASES = 342,
    DATE_ADD_INTERVAL = 343,
    DATE_SUB_INTERVAL = 344,
    DAY_HOUR_SYM = 345,
    DAY_MICROSECOND_SYM = 346,
    DAY_MINUTE_SYM = 347,
    DAY_SECOND_SYM = 348,
    DECIMAL_SYM = 349,
    DECLARE_MARIADB_SYM = 350,
    DECLARE_ORACLE_SYM = 351,
    DEFAULT = 352,
    DELETE_DOMAIN_ID_SYM = 353,
    DELETE_SYM = 354,
    DENSE_RANK_SYM = 355,
    DESCRIBE = 356,
    DESC = 357,
    DETERMINISTIC_SYM = 358,
    DISTINCT = 359,
    DIV_SYM = 360,
    DO_DOMAIN_IDS_SYM = 361,
    DOUBLE_SYM = 362,
    DROP = 363,
    DUAL_SYM = 364,
    EACH_SYM = 365,
    ELSEIF_MARIADB_SYM = 366,
    ELSE = 367,
    ELSIF_ORACLE_SYM = 368,
    ENCLOSED = 369,
    ESCAPED = 370,
    EXCEPT_SYM = 371,
    EXISTS = 372,
    EXTRACT_SYM = 373,
    FALSE_SYM = 374,
    FETCH_SYM = 375,
    FIRST_VALUE_SYM = 376,
    FLOAT_SYM = 377,
    FOREIGN = 378,
    FOR_SYM = 379,
    FROM = 380,
    FULLTEXT_SYM = 381,
    GOTO_ORACLE_SYM = 382,
    GRANT = 383,
    GROUP_CONCAT_SYM = 384,
    JSON_ARRAYAGG_SYM = 385,
    JSON_OBJECTAGG_SYM = 386,
    GROUP_SYM = 387,
    HAVING = 388,
    HOUR_MICROSECOND_SYM = 389,
    HOUR_MINUTE_SYM = 390,
    HOUR_SECOND_SYM = 391,
    IF_SYM = 392,
    IGNORE_DOMAIN_IDS_SYM = 393,
    IGNORE_SYM = 394,
    INDEX_SYM = 395,
    INFILE = 396,
    INNER_SYM = 397,
    INOUT_SYM = 398,
    INSENSITIVE_SYM = 399,
    INSERT = 400,
    IN_SYM = 401,
    INTERSECT_SYM = 402,
    INTERVAL_SYM = 403,
    INTO = 404,
    INT_SYM = 405,
    IS = 406,
    ITERATE_SYM = 407,
    JOIN_SYM = 408,
    KEYS = 409,
    KEY_SYM = 410,
    KILL_SYM = 411,
    LAG_SYM = 412,
    LEADING = 413,
    LEAD_SYM = 414,
    LEAVE_SYM = 415,
    LEFT = 416,
    LIKE = 417,
    LIMIT = 418,
    LINEAR_SYM = 419,
    LINES = 420,
    LOAD = 421,
    LOCATOR_SYM = 422,
    LOCK_SYM = 423,
    LONGBLOB = 424,
    LONG_SYM = 425,
    LONGTEXT = 426,
    LOOP_SYM = 427,
    LOW_PRIORITY = 428,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 429,
    MATCH = 430,
    MAX_SYM = 431,
    MAXVALUE_SYM = 432,
    MEDIAN_SYM = 433,
    MEDIUMBLOB = 434,
    MEDIUMINT = 435,
    MEDIUMTEXT = 436,
    MIN_SYM = 437,
    MINUTE_MICROSECOND_SYM = 438,
    MINUTE_SECOND_SYM = 439,
    MODIFIES_SYM = 440,
    MOD_SYM = 441,
    NATURAL = 442,
    NEG = 443,
    NOT_SYM = 444,
    NO_WRITE_TO_BINLOG = 445,
    NOW_SYM = 446,
    NTH_VALUE_SYM = 447,
    NTILE_SYM = 448,
    NULL_SYM = 449,
    NUMERIC_SYM = 450,
    ON = 451,
    OPTIMIZE = 452,
    OPTIONALLY = 453,
    ORDER_SYM = 454,
    OR_SYM = 455,
    OTHERS_ORACLE_SYM = 456,
    OUTER = 457,
    OUTFILE = 458,
    OUT_SYM = 459,
    OVER_SYM = 460,
    PACKAGE_ORACLE_SYM = 461,
    PAGE_CHECKSUM_SYM = 462,
    PARSE_VCOL_EXPR_SYM = 463,
    PARTITION_SYM = 464,
    PERCENTILE_CONT_SYM = 465,
    PERCENTILE_DISC_SYM = 466,
    PERCENT_RANK_SYM = 467,
    PORTION_SYM = 468,
    POSITION_SYM = 469,
    PRECISION = 470,
    PRIMARY_SYM = 471,
    PROCEDURE_SYM = 472,
    PURGE = 473,
    RAISE_ORACLE_SYM = 474,
    RANGE_SYM = 475,
    RANK_SYM = 476,
    READS_SYM = 477,
    READ_SYM = 478,
    READ_WRITE_SYM = 479,
    REAL = 480,
    RECURSIVE_SYM = 481,
    REFERENCES = 482,
    REF_SYSTEM_ID_SYM = 483,
    REGEXP = 484,
    RELEASE_SYM = 485,
    RENAME = 486,
    REPEAT_SYM = 487,
    REPLACE = 488,
    REQUIRE_SYM = 489,
    RESIGNAL_SYM = 490,
    RESTRICT = 491,
    RETURNING_SYM = 492,
    RETURN_MARIADB_SYM = 493,
    RETURN_ORACLE_SYM = 494,
    REVOKE = 495,
    RIGHT = 496,
    ROW_NUMBER_SYM = 497,
    ROWS_SYM = 498,
    ROWTYPE_ORACLE_SYM = 499,
    SECOND_MICROSECOND_SYM = 500,
    SELECT_SYM = 501,
    SENSITIVE_SYM = 502,
    SEPARATOR_SYM = 503,
    SERVER_OPTIONS = 504,
    SET = 505,
    SHOW = 506,
    SIGNAL_SYM = 507,
    SMALLINT = 508,
    SPATIAL_SYM = 509,
    SPECIFIC_SYM = 510,
    SQL_BIG_RESULT = 511,
    SQLEXCEPTION_SYM = 512,
    SQL_SMALL_RESULT = 513,
    SQLSTATE_SYM = 514,
    SQL_SYM = 515,
    SQLWARNING_SYM = 516,
    SSL_SYM = 517,
    STARTING = 518,
    STATS_AUTO_RECALC_SYM = 519,
    STATS_PERSISTENT_SYM = 520,
    STATS_SAMPLE_PAGES_SYM = 521,
    STDDEV_SAMP_SYM = 522,
    STD_SYM = 523,
    STRAIGHT_JOIN = 524,
    SUBSTRING = 525,
    SUM_SYM = 526,
    SYSDATE = 527,
    TABLE_REF_PRIORITY = 528,
    TABLE_SYM = 529,
    TERMINATED = 530,
    THEN_SYM = 531,
    TINYBLOB = 532,
    TINYINT = 533,
    TINYTEXT = 534,
    TO_SYM = 535,
    TRAILING = 536,
    TRIGGER_SYM = 537,
    TRIM = 538,
    TRUE_SYM = 539,
    UNDO_SYM = 540,
    UNION_SYM = 541,
    UNIQUE_SYM = 542,
    UNLOCK_SYM = 543,
    UNSIGNED = 544,
    UPDATE_SYM = 545,
    USAGE = 546,
    USE_SYM = 547,
    USING = 548,
    UTC_DATE_SYM = 549,
    UTC_TIMESTAMP_SYM = 550,
    UTC_TIME_SYM = 551,
    VALUES_IN_SYM = 552,
    VALUES_LESS_SYM = 553,
    VALUES = 554,
    VARBINARY = 555,
    VARCHAR = 556,
    VARIANCE_SYM = 557,
    VAR_SAMP_SYM = 558,
    VARYING = 559,
    WHEN_SYM = 560,
    WHERE = 561,
    WHILE_SYM = 562,
    WITH = 563,
    XOR = 564,
    YEAR_MONTH_SYM = 565,
    ZEROFILL = 566,
    BODY_MARIADB_SYM = 567,
    ELSEIF_ORACLE_SYM = 568,
    ELSIF_MARIADB_SYM = 569,
    EXCEPTION_ORACLE_SYM = 570,
    GOTO_MARIADB_SYM = 571,
    OTHERS_MARIADB_SYM = 572,
    PACKAGE_MARIADB_SYM = 573,
    RAISE_MARIADB_SYM = 574,
    ROWTYPE_MARIADB_SYM = 575,
    ACCOUNT_SYM = 576,
    ACTION = 577,
    ADMIN_SYM = 578,
    ADDDATE_SYM = 579,
    AFTER_SYM = 580,
    AGAINST = 581,
    AGGREGATE_SYM = 582,
    ALGORITHM_SYM = 583,
    ALWAYS_SYM = 584,
    ANY_SYM = 585,
    ASCII_SYM = 586,
    AT_SYM = 587,
    ATOMIC_SYM = 588,
    AUTHORS_SYM = 589,
    AUTOEXTEND_SIZE_SYM = 590,
    AUTO_INC = 591,
    AUTO_SYM = 592,
    AVG_ROW_LENGTH = 593,
    AVG_SYM = 594,
    BACKUP_SYM = 595,
    BEGIN_MARIADB_SYM = 596,
    BEGIN_ORACLE_SYM = 597,
    BINLOG_SYM = 598,
    BIT_SYM = 599,
    BLOCK_SYM = 600,
    BOOL_SYM = 601,
    BOOLEAN_SYM = 602,
    BTREE_SYM = 603,
    BYTE_SYM = 604,
    CACHE_SYM = 605,
    CASCADED = 606,
    CATALOG_NAME_SYM = 607,
    CHAIN_SYM = 608,
    CHANGED = 609,
    CHARSET = 610,
    CHECKPOINT_SYM = 611,
    CHECKSUM_SYM = 612,
    CIPHER_SYM = 613,
    CLASS_ORIGIN_SYM = 614,
    CLIENT_SYM = 615,
    CLOB_MARIADB_SYM = 616,
    CLOB_ORACLE_SYM = 617,
    CLOSE_SYM = 618,
    COALESCE = 619,
    CODE_SYM = 620,
    COLLATION_SYM = 621,
    COLUMNS = 622,
    COLUMN_ADD_SYM = 623,
    COLUMN_CHECK_SYM = 624,
    COLUMN_CREATE_SYM = 625,
    COLUMN_DELETE_SYM = 626,
    COLUMN_GET_SYM = 627,
    COLUMN_SYM = 628,
    COLUMN_NAME_SYM = 629,
    COMMENT_SYM = 630,
    COMMITTED_SYM = 631,
    COMMIT_SYM = 632,
    COMPACT_SYM = 633,
    COMPLETION_SYM = 634,
    COMPRESSED_SYM = 635,
    CONCURRENT = 636,
    CONNECTION_SYM = 637,
    CONSISTENT_SYM = 638,
    CONSTRAINT_CATALOG_SYM = 639,
    CONSTRAINT_NAME_SYM = 640,
    CONSTRAINT_SCHEMA_SYM = 641,
    CONTAINS_SYM = 642,
    CONTEXT_SYM = 643,
    CONTRIBUTORS_SYM = 644,
    CPU_SYM = 645,
    CUBE_SYM = 646,
    CURRENT_SYM = 647,
    CURRENT_POS_SYM = 648,
    CURSOR_NAME_SYM = 649,
    CYCLE_SYM = 650,
    DATAFILE_SYM = 651,
    DATA_SYM = 652,
    DATETIME = 653,
    DATE_FORMAT_SYM = 654,
    DATE_SYM = 655,
    DAY_SYM = 656,
    DEALLOCATE_SYM = 657,
    DECODE_MARIADB_SYM = 658,
    DECODE_ORACLE_SYM = 659,
    DEFINER_SYM = 660,
    DELAYED_SYM = 661,
    DELAY_KEY_WRITE_SYM = 662,
    DES_KEY_FILE = 663,
    DIAGNOSTICS_SYM = 664,
    DIRECTORY_SYM = 665,
    DISABLE_SYM = 666,
    DISCARD = 667,
    DISK_SYM = 668,
    DO_SYM = 669,
    DUMPFILE = 670,
    DUPLICATE_SYM = 671,
    DYNAMIC_SYM = 672,
    ENABLE_SYM = 673,
    END = 674,
    ENDS_SYM = 675,
    ENGINES_SYM = 676,
    ENGINE_SYM = 677,
    ENUM = 678,
    ERROR_SYM = 679,
    ERRORS = 680,
    ESCAPE_SYM = 681,
    EVENTS_SYM = 682,
    EVENT_SYM = 683,
    EVERY_SYM = 684,
    EXCHANGE_SYM = 685,
    EXAMINED_SYM = 686,
    EXCLUDE_SYM = 687,
    EXECUTE_SYM = 688,
    EXCEPTION_MARIADB_SYM = 689,
    EXIT_MARIADB_SYM = 690,
    EXIT_ORACLE_SYM = 691,
    EXPANSION_SYM = 692,
    EXPIRE_SYM = 693,
    EXPORT_SYM = 694,
    EXTENDED_SYM = 695,
    EXTENT_SIZE_SYM = 696,
    FAST_SYM = 697,
    FAULTS_SYM = 698,
    FEDERATED_SYM = 699,
    FILE_SYM = 700,
    FIRST_SYM = 701,
    FIXED_SYM = 702,
    FLUSH_SYM = 703,
    FOLLOWS_SYM = 704,
    FOLLOWING_SYM = 705,
    FORCE_SYM = 706,
    FORMAT_SYM = 707,
    FOUND_SYM = 708,
    FULL = 709,
    FUNCTION_SYM = 710,
    GENERAL = 711,
    GENERATED_SYM = 712,
    GET_FORMAT = 713,
    GET_SYM = 714,
    GLOBAL_SYM = 715,
    GRANTS = 716,
    HANDLER_SYM = 717,
    HARD_SYM = 718,
    HASH_SYM = 719,
    HELP_SYM = 720,
    HIGH_PRIORITY = 721,
    HISTORY_SYM = 722,
    HOST_SYM = 723,
    HOSTS_SYM = 724,
    HOUR_SYM = 725,
    ID_SYM = 726,
    IDENTIFIED_SYM = 727,
    IGNORE_SERVER_IDS_SYM = 728,
    IMMEDIATE_SYM = 729,
    IMPORT = 730,
    INCREMENT_SYM = 731,
    INDEXES = 732,
    INITIAL_SIZE_SYM = 733,
    INSERT_METHOD = 734,
    INSTALL_SYM = 735,
    INVOKER_SYM = 736,
    IO_SYM = 737,
    IPC_SYM = 738,
    ISOLATION = 739,
    ISOPEN_SYM = 740,
    ISSUER_SYM = 741,
    INVISIBLE_SYM = 742,
    JSON_SYM = 743,
    KEY_BLOCK_SIZE = 744,
    LANGUAGE_SYM = 745,
    LAST_SYM = 746,
    LAST_VALUE = 747,
    LASTVAL_SYM = 748,
    LEAVES = 749,
    LESS_SYM = 750,
    LEVEL_SYM = 751,
    LIST_SYM = 752,
    LOCAL_SYM = 753,
    LOCKS_SYM = 754,
    LOGFILE_SYM = 755,
    LOGS_SYM = 756,
    MASTER_CONNECT_RETRY_SYM = 757,
    MASTER_DELAY_SYM = 758,
    MASTER_GTID_POS_SYM = 759,
    MASTER_HOST_SYM = 760,
    MASTER_LOG_FILE_SYM = 761,
    MASTER_LOG_POS_SYM = 762,
    MASTER_PASSWORD_SYM = 763,
    MASTER_PORT_SYM = 764,
    MASTER_SERVER_ID_SYM = 765,
    MASTER_SSL_CAPATH_SYM = 766,
    MASTER_SSL_CA_SYM = 767,
    MASTER_SSL_CERT_SYM = 768,
    MASTER_SSL_CIPHER_SYM = 769,
    MASTER_SSL_CRL_SYM = 770,
    MASTER_SSL_CRLPATH_SYM = 771,
    MASTER_SSL_KEY_SYM = 772,
    MASTER_SSL_SYM = 773,
    MASTER_SYM = 774,
    MASTER_USER_SYM = 775,
    MASTER_USE_GTID_SYM = 776,
    MASTER_HEARTBEAT_PERIOD_SYM = 777,
    MAX_CONNECTIONS_PER_HOUR = 778,
    MAX_QUERIES_PER_HOUR = 779,
    MAX_ROWS = 780,
    MAX_SIZE_SYM = 781,
    MAX_UPDATES_PER_HOUR = 782,
    MAX_STATEMENT_TIME_SYM = 783,
    MAX_USER_CONNECTIONS_SYM = 784,
    MEDIUM_SYM = 785,
    MEMORY_SYM = 786,
    MERGE_SYM = 787,
    MESSAGE_TEXT_SYM = 788,
    MICROSECOND_SYM = 789,
    MIGRATE_SYM = 790,
    MINUTE_SYM = 791,
    MINVALUE_SYM = 792,
    MIN_ROWS = 793,
    MODE_SYM = 794,
    MODIFY_SYM = 795,
    MONITOR_SYM = 796,
    MONTH_SYM = 797,
    MUTEX_SYM = 798,
    MYSQL_SYM = 799,
    MYSQL_ERRNO_SYM = 800,
    NAMES_SYM = 801,
    NAME_SYM = 802,
    NATIONAL_SYM = 803,
    NCHAR_SYM = 804,
    NEVER_SYM = 805,
    NEW_SYM = 806,
    NEXT_SYM = 807,
    NEXTVAL_SYM = 808,
    NOCACHE_SYM = 809,
    NOCYCLE_SYM = 810,
    NODEGROUP_SYM = 811,
    NONE_SYM = 812,
    NOTFOUND_SYM = 813,
    NO_SYM = 814,
    NOMAXVALUE_SYM = 815,
    NOMINVALUE_SYM = 816,
    NO_WAIT_SYM = 817,
    NOWAIT_SYM = 818,
    NUMBER_MARIADB_SYM = 819,
    NUMBER_ORACLE_SYM = 820,
    NVARCHAR_SYM = 821,
    OF_SYM = 822,
    OFFSET_SYM = 823,
    OLD_PASSWORD_SYM = 824,
    ONE_SYM = 825,
    ONLY_SYM = 826,
    ONLINE_SYM = 827,
    OPEN_SYM = 828,
    OPTIONS_SYM = 829,
    OPTION = 830,
    OVERLAPS_SYM = 831,
    OWNER_SYM = 832,
    PACK_KEYS_SYM = 833,
    PAGE_SYM = 834,
    PARSER_SYM = 835,
    PARTIAL = 836,
    PARTITIONS_SYM = 837,
    PARTITIONING_SYM = 838,
    PASSWORD_SYM = 839,
    PERIOD_SYM = 840,
    PERSISTENT_SYM = 841,
    PHASE_SYM = 842,
    PLUGINS_SYM = 843,
    PLUGIN_SYM = 844,
    PORT_SYM = 845,
    PRECEDES_SYM = 846,
    PRECEDING_SYM = 847,
    PREPARE_SYM = 848,
    PRESERVE_SYM = 849,
    PREV_SYM = 850,
    PREVIOUS_SYM = 851,
    PRIVILEGES = 852,
    PROCESS = 853,
    PROCESSLIST_SYM = 854,
    PROFILE_SYM = 855,
    PROFILES_SYM = 856,
    PROXY_SYM = 857,
    QUARTER_SYM = 858,
    QUERY_SYM = 859,
    QUICK = 860,
    RAW_MARIADB_SYM = 861,
    RAW_ORACLE_SYM = 862,
    READ_ONLY_SYM = 863,
    REBUILD_SYM = 864,
    RECOVER_SYM = 865,
    REDOFILE_SYM = 866,
    REDO_BUFFER_SIZE_SYM = 867,
    REDUNDANT_SYM = 868,
    RELAY = 869,
    RELAYLOG_SYM = 870,
    RELAY_LOG_FILE_SYM = 871,
    RELAY_LOG_POS_SYM = 872,
    RELAY_THREAD = 873,
    RELOAD = 874,
    REMOVE_SYM = 875,
    REORGANIZE_SYM = 876,
    REPAIR = 877,
    REPEATABLE_SYM = 878,
    REPLAY_SYM = 879,
    REPLICATION = 880,
    RESET_SYM = 881,
    RESTART_SYM = 882,
    RESOURCES = 883,
    RESTORE_SYM = 884,
    RESUME_SYM = 885,
    RETURNED_SQLSTATE_SYM = 886,
    RETURNS_SYM = 887,
    REUSE_SYM = 888,
    REVERSE_SYM = 889,
    ROLE_SYM = 890,
    ROLLBACK_SYM = 891,
    ROLLUP_SYM = 892,
    ROUTINE_SYM = 893,
    ROWCOUNT_SYM = 894,
    ROW_SYM = 895,
    ROW_COUNT_SYM = 896,
    ROW_FORMAT_SYM = 897,
    RTREE_SYM = 898,
    SAVEPOINT_SYM = 899,
    SCHEDULE_SYM = 900,
    SCHEMA_NAME_SYM = 901,
    SECOND_SYM = 902,
    SECURITY_SYM = 903,
    SEQUENCE_SYM = 904,
    SERIALIZABLE_SYM = 905,
    SERIAL_SYM = 906,
    SESSION_SYM = 907,
    SERVER_SYM = 908,
    SETVAL_SYM = 909,
    SHARE_SYM = 910,
    SHUTDOWN = 911,
    SIGNED_SYM = 912,
    SIMPLE_SYM = 913,
    SLAVE = 914,
    SLAVES = 915,
    SLAVE_POS_SYM = 916,
    SLOW = 917,
    SNAPSHOT_SYM = 918,
    SOCKET_SYM = 919,
    SOFT_SYM = 920,
    SONAME_SYM = 921,
    SOUNDS_SYM = 922,
    SOURCE_SYM = 923,
    SQL_BUFFER_RESULT = 924,
    SQL_CACHE_SYM = 925,
    SQL_CALC_FOUND_ROWS = 926,
    SQL_NO_CACHE_SYM = 927,
    SQL_THREAD = 928,
    STAGE_SYM = 929,
    STARTS_SYM = 930,
    START_SYM = 931,
    STATEMENT_SYM = 932,
    STATUS_SYM = 933,
    STOP_SYM = 934,
    STORAGE_SYM = 935,
    STORED_SYM = 936,
    STRING_SYM = 937,
    SUBCLASS_ORIGIN_SYM = 938,
    SUBDATE_SYM = 939,
    SUBJECT_SYM = 940,
    SUBPARTITIONS_SYM = 941,
    SUBPARTITION_SYM = 942,
    SUPER_SYM = 943,
    SUSPEND_SYM = 944,
    SWAPS_SYM = 945,
    SWITCHES_SYM = 946,
    SYSTEM = 947,
    SYSTEM_TIME_SYM = 948,
    TABLES = 949,
    TABLESPACE = 950,
    TABLE_CHECKSUM_SYM = 951,
    TABLE_NAME_SYM = 952,
    TEMPORARY = 953,
    TEMPTABLE_SYM = 954,
    TEXT_SYM = 955,
    THAN_SYM = 956,
    TIES_SYM = 957,
    TIMESTAMP = 958,
    TIMESTAMP_ADD = 959,
    TIMESTAMP_DIFF = 960,
    TIME_SYM = 961,
    TRANSACTION_SYM = 962,
    TRANSACTIONAL_SYM = 963,
    THREADS_SYM = 964,
    TRIGGERS_SYM = 965,
    TRIM_ORACLE = 966,
    TRUNCATE_SYM = 967,
    TYPES_SYM = 968,
    TYPE_SYM = 969,
    UDF_RETURNS_SYM = 970,
    UNBOUNDED_SYM = 971,
    UNCOMMITTED_SYM = 972,
    UNDEFINED_SYM = 973,
    UNDOFILE_SYM = 974,
    UNDO_BUFFER_SIZE_SYM = 975,
    UNICODE_SYM = 976,
    UNINSTALL_SYM = 977,
    UNKNOWN_SYM = 978,
    UNTIL_SYM = 979,
    UPGRADE_SYM = 980,
    USER_SYM = 981,
    USE_FRM = 982,
    VALUE_SYM = 983,
    VARCHAR2_MARIADB_SYM = 984,
    VARCHAR2_ORACLE_SYM = 985,
    VARIABLES = 986,
    VERSIONING_SYM = 987,
    VIA_SYM = 988,
    VIEW_SYM = 989,
    VISIBLE_SYM = 990,
    VIRTUAL_SYM = 991,
    WAIT_SYM = 992,
    WARNINGS = 993,
    WEEK_SYM = 994,
    WEIGHT_STRING_SYM = 995,
    WINDOW_SYM = 996,
    WITHIN = 997,
    WITHOUT = 998,
    WORK_SYM = 999,
    WRAPPER_SYM = 1000,
    WRITE_SYM = 1001,
    X509_SYM = 1002,
    XA_SYM = 1003,
    XML_SYM = 1004,
    YEAR_SYM = 1005,
    CONDITIONLESS_JOIN = 1006,
    ON_SYM = 1007,
    PREC_BELOW_NOT = 1008,
    SUBQUERY_AS_EXPR = 1009,
    PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 1010,
    USER = 1011,
    PREC_BELOW_CONTRACTION_TOKEN2 = 1012,
    EMPTY_FROM_CLAUSE = 1013
  };
#endif

/* Value type.  */
#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE YYSTYPE;
union YYSTYPE
{
#line 199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:355  */

  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  uint sp_instr_addr;

  /* structs */
  LEX_CSTRING lex_str;
  Lex_ident_cli_st kwd;
  Lex_ident_cli_st ident_cli;
  Lex_ident_sys_st ident_sys;
  Lex_column_list_privilege_st column_list_privilege;
  Lex_string_with_metadata_st lex_string_with_metadata;
  Lex_spblock_st spblock;
  Lex_spblock_handlers_st spblock_handlers;
  Lex_length_and_dec_st Lex_length_and_dec;
  Lex_cast_type_st Lex_cast_type;
  Lex_field_type_st Lex_field_type;
  Lex_dyncol_type_st Lex_dyncol_type;
  Lex_for_loop_st for_loop;
  Lex_for_loop_bounds_st for_loop_bounds;
  Lex_trim_st trim;
  vers_history_point_t vers_history_point;
  struct
  {
    enum sub_select_type unit_type;
    bool distinct;
  } unit_operation;
  struct
  {
    SELECT_LEX *first;
    SELECT_LEX *prev_last;
  } select_list;
  SQL_I_List<ORDER> *select_order;
  Lex_select_lock select_lock;
  Lex_select_limit select_limit;
  Lex_order_limit_lock *order_limit_lock;

  /* pointers */
  Lex_ident_sys *ident_sys_ptr;
  Create_field *create_field;
  Spvar_definition *spvar_definition;
  Row_definition_list *spvar_definition_list;
  const Type_handler *type_handler;
  const class Sp_handler *sp_handler;
  CHARSET_INFO *charset;
  Condition_information_item *cond_info_item;
  DYNCALL_CREATE_DEF *dyncol_def;
  Diagnostics_information *diag_info;
  Item *item;
  Item_num *item_num;
  Item_param *item_param;
  Item_basic_constant *item_basic_constant;
  Key_part_spec *key_part;
  LEX *lex;
  sp_expr_lex *expr_lex;
  sp_assignment_lex *assignment_lex;
  class sp_lex_cursor *sp_cursor_stmt;
  LEX_CSTRING *lex_str_ptr;
  LEX_USER *lex_user;
  USER_AUTH *user_auth;
  List<Condition_information_item> *cond_info_list;
  List<DYNCALL_CREATE_DEF> *dyncol_def_list;
  List<Item> *item_list;
  List<sp_assignment_lex> *sp_assignment_lex_list;
  List<Statement_information_item> *stmt_info_list;
  List<String> *string_list;
  List<Lex_ident_sys> *ident_sys_list;
  Statement_information_item *stmt_info_item;
  String *string;
  TABLE_LIST *table_list;
  Table_ident *table;
  Qualified_column_ident *qualified_column_ident;
  char *simple_string;
  const char *const_simple_string;
  chooser_compare_func_creator boolfunc2creator;
  class Lex_grant_privilege *lex_grant;
  class Lex_grant_object_name *lex_grant_ident;
  class my_var *myvar;
  class sp_condition_value *spcondvalue;
  class sp_head *sphead;
  class sp_name *spname;
  class sp_variable *spvar;
  class With_clause *with_clause;
  class Virtual_column_info *virtual_column;

  handlerton *db_type;
  st_select_lex *select_lex;
  st_select_lex_unit *select_lex_unit;
  struct p_elem_val *p_elem_value;
  class Window_frame *window_frame;
  class Window_frame_bound *window_frame_bound;
  udf_func *udf;
  st_trg_execution_order trg_execution_order;

  /* enums */
  enum enum_sp_suid_behaviour sp_suid;
  enum enum_sp_aggregate_type sp_aggregate_type;
  enum enum_view_suid view_suid;
  enum Condition_information_item::Name cond_info_item_name;
  enum enum_diag_condition_item_name diag_condition_item_name;
  enum Diagnostics_information::Which_area diag_area;
  enum enum_fk_option m_fk_option;
  enum Item_udftype udf_type;
  enum Key::Keytype key_type;
  enum Statement_information_item::Name stmt_info_item_name;
  enum enum_filetype filetype;
  enum enum_tx_isolation tx_isolation;
  enum enum_var_type var_type;
  enum enum_yes_no_unknown m_yes_no_unk;
  enum ha_choice choice;
  enum ha_key_alg key_alg;
  enum ha_rkey_function ha_rkey_mode;
  enum index_hint_type index_hint;
  enum interval_type interval, interval_time_st;
  enum row_type row_type;
  enum sp_variable::enum_mode spvar_mode;
  enum thr_lock_type lock_type;
  enum enum_mysql_timestamp_type date_time_type;
  enum Window_frame_bound::Bound_precedence_type bound_precedence_type;
  enum Window_frame::Frame_units frame_units;
  enum Window_frame::Frame_exclusion frame_exclusion;
  enum trigger_order_type trigger_action_order_type;
  DDL_options_st object_ddl_options;
  enum vers_kind_t vers_range_unit;
  enum Column_definition::enum_column_versioning vers_column_versioning;
  enum plsql_cursor_attr_t plsql_cursor_attr;
  privilege_t privilege;

#line 1177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:355  */
};
# define YYSTYPE_IS_TRIVIAL 1
# define YYSTYPE_IS_DECLARED 1
#endif



int ORAparse (THD *thd);

#endif /* !YY_ORA_HOME_BUILDBOT_GIT_MKDIST_SQL_SQL_YACC_ORA_HH_INCLUDED  */

/* Copy the second part of user declarations.  */
#line 330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:358  */

/* avoid unintentional %union size increases, it's what a parser stack made of */
static_assert(sizeof(YYSTYPE) == sizeof(void*)*2+8, "%union size check");
bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 1196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  757
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   102998

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  780
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1311
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3826
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  6444

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1013

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   775,     2,     2,     2,   764,   759,     2,
     771,   772,   762,   761,   774,   760,   779,   763,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,   778,
     757,   755,   756,     2,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   765,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   776,   758,   777,   766,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     4,     5,
       6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   767,
     768,   769,   770,   773
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1845,  1845,  1855,  1854,  1879,  1886,  1888,  1892,  1893,
    1894,  1899,  1900,  1901,  1902,  1903,  1904,  1905,  1906,  1907,
    1908,  1909,  1910,  1911,  1912,  1913,  1914,  1915,  1916,  1917,
    1918,  1919,  1920,  1921,  1922,  1923,  1924,  1925,  1926,  1927,
    1928,  1929,  1930,  1931,  1932,  1933,  1934,  1935,  1936,  1937,
    1938,  1939,  1940,  1941,  1942,  1943,  1944,  1945,  1946,  1947,
    1948,  1949,  1950,  1951,  1952,  1953,  1954,  1955,  1956,  1957,
    1961,  1968,  1969,  1974,  1973,  1984,  1990,  1992,  1989,  2001,
    2003,  2002,  2012,  2017,  2029,  2028,  2045,  2044,  2053,  2054,
    2058,  2062,  2066,  2070,  2074,  2078,  2088,  2093,  2097,  2101,
    2105,  2109,  2113,  2118,  2122,  2127,  2155,  2159,  2163,  2168,
    2171,  2173,  2174,  2178,  2184,  2186,  2187,  2191,  2197,  2199,
    2200,  2204,  2211,  2215,  2230,  2234,  2240,  2246,  2252,  2262,
    2266,  2270,  2284,  2296,  2283,  2319,  2318,  2374,  2381,  2373,
    2393,  2400,  2392,  2413,  2419,  2412,  2431,  2437,  2430,  2449,
    2448,  2464,  2462,  2477,  2475,  2488,  2487,  2498,  2497,  2507,
    2514,  2521,  2525,  2529,  2529,  2532,  2536,  2537,  2541,  2542,
    2546,  2551,  2557,  2563,  2571,  2577,  2583,  2591,  2599,  2607,
    2615,  2623,  2631,  2643,  2660,  2659,  2671,  2672,  2676,  2681,
    2686,  2691,  2696,  2701,  2706,  2714,  2713,  2746,  2745,  2752,
    2759,  2760,  2766,  2772,  2782,  2788,  2794,  2796,  2803,  2804,
    2808,  2818,  2819,  2827,  2827,  2869,  2878,  2879,  2884,  2885,
    2886,  2887,  2892,  2897,  2905,  2906,  2910,  2911,  2916,  2918,
    2920,  2922,  2924,  2926,  2928,  2934,  2935,  2939,  2940,  2945,
    2944,  2953,  2955,  2958,  2960,  2964,  2968,  2977,  2982,  2982,
    2992,  2993,  2997,  3005,  3010,  3015,  3019,  3021,  3025,  3026,
    3030,  3031,  3032,  3037,  3036,  3048,  3052,  3053,  3057,  3058,
    3063,  3069,  3075,  3085,  3093,  3098,  3106,  3110,  3119,  3117,
    3131,  3139,  3144,  3143,  3157,  3159,  3164,  3174,  3173,  3192,
    3193,  3194,  3195,  3200,  3202,  3207,  3222,  3230,  3234,  3254,
    3255,  3259,  3263,  3269,  3275,  3281,  3287,  3297,  3302,  3310,
    3318,  3323,  3329,  3330,  3336,  3339,  3343,  3351,  3368,  3370,
    3388,  3394,  3396,  3398,  3400,  3402,  3404,  3406,  3408,  3410,
    3412,  3414,  3416,  3421,  3429,  3445,  3446,  3451,  3457,  3466,
    3473,  3482,  3491,  3496,  3505,  3507,  3509,  3518,  3523,  3530,
    3539,  3548,  3550,  3552,  3554,  3556,  3558,  3560,  3562,  3564,
    3566,  3568,  3570,  3572,  3577,  3578,  3586,  3598,  3614,  3613,
    3624,  3624,  3646,  3647,  3651,  3658,  3669,  3674,  3679,  3684,
    3692,  3697,  3702,  3707,  3716,  3724,  3732,  3741,  3741,  3763,
    3773,  3772,  3794,  3793,  3814,  3820,  3828,  3829,  3833,  3834,
    3835,  3839,  3847,  3852,  3857,  3865,  3866,  3874,  3892,  3908,
    3928,  3933,  3927,  3945,  3947,  3948,  3949,  3954,  3953,  4024,
    4023,  4030,  4035,  4036,  4040,  4041,  4046,  4045,  4061,  4060,
    4075,  4085,  4089,  4090,  4095,  4096,  4100,  4108,  4113,  4120,
    4129,  4143,  4151,  4160,  4159,  4167,  4166,  4174,  4179,  4186,
    4173,  4196,  4195,  4206,  4205,  4215,  4214,  4224,  4231,  4223,
    4246,  4245,  4257,  4259,  4264,  4266,  4268,  4285,  4290,  4296,
    4303,  4304,  4312,  4318,  4327,  4333,  4339,  4340,  4344,  4344,
    4349,  4350,  4351,  4355,  4356,  4357,  4361,  4365,  4366,  4367,
    4371,  4372,  4373,  4374,  4375,  4376,  4377,  4378,  4382,  4386,
    4387,  4388,  4392,  4393,  4394,  4395,  4396,  4400,  4404,  4405,
    4406,  4410,  4411,  4412,  4413,  4414,  4415,  4416,  4420,  4424,
    4425,  4426,  4430,  4431,  4432,  4437,  4445,  4453,  4461,  4474,
    4487,  4492,  4497,  4505,  4513,  4521,  4529,  4537,  4545,  4553,
    4563,  4573,  4583,  4585,  4589,  4594,  4604,  4605,  4618,  4617,
    4620,  4621,  4635,  4636,  4640,  4641,  4645,  4650,  4661,  4698,
    4699,  4704,  4703,  4719,  4734,  4733,  4755,  4754,  4760,  4768,
    4767,  4770,  4772,  4775,  4774,  4783,  4786,  4785,  4794,  4795,
    4801,  4802,  4819,  4820,  4824,  4825,  4829,  4843,  4853,  4864,
    4873,  4874,  4887,  4889,  4888,  4893,  4891,  4902,  4903,  4907,
    4921,  4933,  4934,  4947,  4956,  4978,  4979,  4984,  4983,  5007,
    5019,  5035,  5034,  5049,  5048,  5062,  5067,  5072,  5092,  5110,
    5114,  5141,  5153,  5154,  5159,  5168,  5158,  5193,  5194,  5198,
    5209,  5228,  5241,  5267,  5268,  5273,  5272,  5309,  5318,  5319,
    5323,  5324,  5328,  5330,  5336,  5342,  5344,  5346,  5348,  5350,
    5352,  5357,  5358,  5365,  5381,  5384,  5395,  5396,  5400,  5401,
    5405,  5406,  5410,  5411,  5412,  5421,  5424,  5432,  5435,  5442,
    5446,  5452,  5454,  5458,  5459,  5463,  5464,  5465,  5469,  5484,
    5489,  5494,  5499,  5504,  5509,  5514,  5529,  5535,  5550,  5555,
    5570,  5576,  5594,  5599,  5604,  5609,  5614,  5619,  5625,  5624,
    5650,  5651,  5652,  5657,  5662,  5667,  5669,  5671,  5673,  5679,
    5684,  5689,  5698,  5707,  5713,  5719,  5724,  5727,  5729,  5733,
    5752,  5760,  5775,  5785,  5796,  5797,  5798,  5799,  5800,  5801,
    5802,  5806,  5807,  5808,  5812,  5813,  5814,  5815,  5820,  5827,
    5834,  5835,  5839,  5840,  5841,  5842,  5843,  5847,  5849,  5860,
    5859,  5867,  5866,  5874,  5873,  5881,  5880,  5890,  5887,  5898,
    5896,  5905,  5904,  5923,  5931,  5939,  5947,  5948,  5952,  5962,
    5963,  5967,  5968,  5972,  5977,  5976,  6015,  6014,  6021,  6020,
    6030,  6031,  6035,  6036,  6040,  6041,  6045,  6046,  6050,  6051,
    6052,  6053,  6055,  6054,  6060,  6065,  6073,  6074,  6079,  6082,
    6086,  6090,  6097,  6098,  6102,  6103,  6107,  6113,  6119,  6120,
    6128,  6127,  6149,  6150,  6160,  6168,  6180,  6180,  6183,  6184,
    6191,  6198,  6202,  6210,  6211,  6212,  6213,  6214,  6215,  6220,
    6225,  6233,  6237,  6238,  6254,  6258,  6262,  6266,  6268,  6275,
    6277,  6282,  6284,  6285,  6286,  6290,  6294,  6299,  6304,  6308,
    6312,  6317,  6322,  6330,  6348,  6349,  6356,  6363,  6371,  6376,
    6381,  6386,  6391,  6396,  6401,  6406,  6408,  6410,  6412,  6414,
    6416,  6418,  6420,  6428,  6430,  6435,  6439,  6440,  6444,  6445,
    6449,  6450,  6451,  6452,  6453,  6457,  6458,  6459,  6460,  6461,
    6465,  6471,  6472,  6477,  6479,  6486,  6487,  6488,  6492,  6496,
    6497,  6498,  6499,  6500,  6501,  6505,  6509,  6510,  6511,  6512,
    6516,  6517,  6521,  6522,  6527,  6528,  6532,  6533,  6534,  6541,
    6542,  6548,  6555,  6559,  6560,  6564,  6565,  6569,  6570,  6574,
    6582,  6590,  6599,  6603,  6609,  6613,  6614,  6623,  6632,  6638,
    6644,  6657,  6663,  6673,  6674,  6678,  6683,  6687,  6688,  6692,
    6693,  6697,  6704,  6708,  6709,  6713,  6721,  6722,  6726,  6727,
    6731,  6732,  6736,  6737,  6738,  6745,  6752,  6753,  6757,  6758,
    6759,  6760,  6761,  6767,  6771,  6772,  6777,  6776,  6789,  6790,
    6794,  6797,  6798,  6799,  6800,  6804,  6812,  6819,  6820,  6824,
    6834,  6835,  6839,  6840,  6843,  6845,  6849,  6861,  6862,  6866,
    6873,  6886,  6887,  6889,  6891,  6897,  6902,  6908,  6914,  6921,
    6931,  6932,  6933,  6934,  6935,  6939,  6940,  6944,  6945,  6949,
    6950,  6954,  6955,  6956,  6960,  6964,  6976,  6977,  6981,  6982,
    6986,  6987,  6991,  6992,  6996,  6997,  7001,  7002,  7006,  7007,
    7012,  7013,  7014,  7018,  7020,  7025,  7030,  7032,  7036,  7044,
    7052,  7058,  7067,  7068,  7072,  7076,  7077,  7087,  7088,  7089,
    7093,  7097,  7104,  7105,  7113,  7119,  7131,  7132,  7136,  7138,
    7148,  7164,  7147,  7187,  7186,  7205,  7204,  7220,  7229,  7228,
    7236,  7235,  7243,  7242,  7256,  7250,  7264,  7263,  7302,  7307,
    7312,  7317,  7323,  7322,  7329,  7336,  7348,  7358,  7335,  7367,
    7371,  7379,  7382,  7386,  7390,  7398,  7400,  7401,  7402,  7403,
    7407,  7408,  7409,  7410,  7414,  7415,  7427,  7428,  7433,  7434,
    7437,  7439,  7447,  7455,  7457,  7459,  7460,  7468,  7469,  7475,
    7484,  7482,  7495,  7508,  7507,  7520,  7518,  7531,  7538,  7548,
    7549,  7558,  7565,  7569,  7575,  7573,  7590,  7592,  7597,  7605,
    7604,  7618,  7622,  7621,  7633,  7634,  7638,  7651,  7652,  7656,
    7660,  7667,  7672,  7676,  7683,  7690,  7694,  7699,  7707,  7715,
    7725,  7736,  7746,  7757,  7767,  7773,  7779,  7786,  7791,  7805,
    7810,  7820,  7834,  7839,  7843,  7848,  7849,  7850,  7855,  7860,
    7864,  7874,  7876,  7877,  7878,  7879,  7883,  7888,  7896,  7901,
    7909,  7910,  7914,  7915,  7919,  7919,  7922,  7924,  7928,  7929,
    7933,  7934,  7942,  7943,  7944,  7948,  7949,  7954,  7963,  7964,
    7965,  7966,  7971,  7970,  7980,  7979,  7987,  7994,  8004,  8021,
    8024,  8031,  8035,  8042,  8046,  8050,  8057,  8057,  8063,  8064,
    8068,  8069,  8070,  8074,  8075,  8084,  8091,  8092,  8097,  8096,
    8108,  8109,  8110,  8114,  8116,  8115,  8122,  8121,  8142,  8143,
    8147,  8148,  8152,  8153,  8154,  8158,  8159,  8164,  8163,  8184,
    8185,  8189,  8194,  8195,  8202,  8204,  8209,  8211,  8210,  8223,
    8225,  8224,  8238,  8239,  8244,  8253,  8254,  8255,  8259,  8266,
    8276,  8284,  8293,  8295,  8294,  8300,  8299,  8322,  8323,  8327,
    8328,  8332,  8333,  8334,  8335,  8336,  8337,  8341,  8342,  8347,
    8346,  8367,  8368,  8369,  8374,  8373,  8384,  8391,  8397,  8406,
    8407,  8411,  8427,  8426,  8439,  8440,  8444,  8445,  8449,  8460,
    8471,  8472,  8477,  8476,  8491,  8492,  8496,  8497,  8501,  8512,
    8524,  8523,  8531,  8531,  8540,  8541,  8546,  8547,  8557,  8556,
    8571,  8570,  8589,  8588,  8605,  8603,  8624,  8625,  8630,  8629,
    8643,  8652,  8642,  8662,  8674,  8738,  8743,  8758,  8759,  8774,
    8773,  8789,  8788,  8801,  8803,  8818,  8826,  8824,  8839,  8857,
    8859,  8869,  8873,  8914,  8923,  8933,  8934,  8938,  8942,  8948,
    8955,  8957,  8966,  8970,  8974,  8981,  8990,  8994,  9001,  9018,
    9021,  9029,  9032,  9039,  9043,  9047,  9051,  9058,  9059,  9063,
    9064,  9073,  9086,  9092,  9103,  9106,  9115,  9118,  9123,  9131,
    9132,  9133,  9147,  9152,  9174,  9180,  9186,  9192,  9193,  9194,
    9195,  9196,  9200,  9201,  9202,  9206,  9207,  9208,  9212,  9213,
    9218,  9269,  9276,  9319,  9325,  9331,  9337,  9343,  9349,  9355,
    9361,  9367,  9373,  9379,  9385,  9391,  9395,  9401,  9410,  9416,
    9424,  9430,  9439,  9445,  9453,  9463,  9469,  9476,  9483,  9491,
    9497,  9506,  9510,  9516,  9522,  9528,  9534,  9541,  9547,  9553,
    9559,  9565,  9572,  9578,  9584,  9590,  9596,  9602,  9608,  9614,
    9620,  9624,  9625,  9629,  9630,  9634,  9635,  9639,  9640,  9644,
    9645,  9646,  9647,  9648,  9649,  9653,  9654,  9659,  9663,  9667,
    9668,  9669,  9673,  9674,  9675,  9676,  9677,  9678,  9682,  9683,
    9684,  9689,  9688,  9694,  9702,  9725,  9732,  9741,  9742,  9743,
    9744,  9748,  9757,  9758,  9759,  9760,  9761,  9762,  9763,  9764,
    9796,  9797,  9798,  9799,  9800,  9801,  9802,  9803,  9804,  9812,
    9820,  9821,  9828,  9834,  9839,  9849,  9855,  9860,  9866,  9872,
    9878,  9889,  9896,  9901,  9906,  9911,  9916,  9921,  9926,  9934,
    9935,  9936,  9937,  9945,  9946,  9954,  9955,  9961,  9965,  9971,
    9977,  9986,  9987,  9996, 10003, 10017, 10023, 10029, 10038, 10047,
   10053, 10059, 10065, 10071, 10086, 10097, 10103, 10109, 10115, 10121,
   10127, 10135, 10142, 10146, 10151, 10159, 10180, 10187, 10193, 10200,
   10207, 10213, 10219, 10225, 10231, 10237, 10243, 10249, 10255, 10262,
   10268, 10275, 10281, 10286, 10291, 10296, 10301, 10319, 10325, 10331,
   10336, 10343, 10350, 10358, 10365, 10372, 10379, 10386, 10403, 10409,
   10415, 10421, 10427, 10434, 10440, 10446, 10455, 10466, 10473, 10479,
   10485, 10492, 10500, 10506, 10512, 10517, 10523, 10531, 10537, 10543,
   10549, 10555, 10563, 10575, 10595, 10594, 10668, 10674, 10680, 10686,
   10694, 10696, 10701, 10702, 10706, 10707, 10711, 10712, 10716, 10723,
   10731, 10758, 10764, 10770, 10776, 10782, 10788, 10797, 10804, 10806,
   10803, 10813, 10824, 10830, 10836, 10842, 10848, 10854, 10860, 10866,
   10872, 10879, 10878, 10901, 10900, 10933, 10932, 10946, 10955, 10973,
   10975, 10980, 10997, 11004, 11011, 11018, 11025, 11032, 11039, 11046,
   11053, 11060, 11071, 11078, 11089, 11100, 11120, 11119, 11125, 11142,
   11148, 11157, 11166, 11176, 11175, 11187, 11197, 11205, 11210, 11218,
   11219, 11224, 11229, 11232, 11234, 11238, 11243, 11251, 11252, 11256,
   11260, 11267, 11274, 11281, 11294, 11293, 11310, 11313, 11312, 11317,
   11316, 11321, 11320, 11324, 11329, 11330, 11331, 11336, 11341, 11349,
   11350, 11351, 11352, 11353, 11354, 11355, 11356, 11360, 11361, 11362,
   11363, 11370, 11371, 11375, 11380, 11388, 11389, 11393, 11400, 11408,
   11417, 11427, 11428, 11437, 11446, 11458, 11459, 11471, 11482, 11483,
   11489, 11494, 11508, 11516, 11514, 11534, 11532, 11545, 11557, 11555,
   11575, 11574, 11586, 11599, 11597, 11618, 11617, 11630, 11644, 11645,
   11646, 11650, 11651, 11659, 11660, 11664, 11673, 11674, 11675, 11680,
   11684, 11685, 11689, 11690, 11694, 11695, 11703, 11711, 11719, 11720,
   11733, 11751, 11760, 11761, 11766, 11769, 11770, 11771, 11775, 11776,
   11781, 11780, 11786, 11785, 11793, 11794, 11797, 11799, 11799, 11803,
   11803, 11808, 11809, 11813, 11815, 11820, 11821, 11825, 11836, 11850,
   11851, 11852, 11853, 11854, 11855, 11856, 11857, 11858, 11859, 11860,
   11861, 11865, 11866, 11867, 11868, 11869, 11870, 11871, 11872, 11873,
   11877, 11878, 11879, 11880, 11883, 11885, 11886, 11890, 11891, 11895,
   11903, 11905, 11909, 11911, 11910, 11924, 11927, 11926, 11944, 11946,
   11950, 11955, 11963, 11964, 11981, 12004, 12005, 12011, 12012, 12016,
   12029, 12028, 12037, 12038, 12047, 12048, 12052, 12053, 12057, 12058,
   12072, 12073, 12077, 12087, 12096, 12103, 12110, 12120, 12121, 12128,
   12138, 12139, 12141, 12143, 12145, 12147, 12156, 12160, 12161, 12165,
   12179, 12180, 12186, 12185, 12196, 12202, 12211, 12212, 12213, 12218,
   12219, 12224, 12231, 12237, 12247, 12256, 12262, 12268, 12277, 12282,
   12287, 12291, 12297, 12303, 12312, 12321, 12325, 12332, 12333, 12337,
   12342, 12347, 12360, 12364, 12368, 12372, 12377, 12380, 12384, 12397,
   12405, 12418, 12420, 12424, 12425, 12429, 12430, 12431, 12432, 12433,
   12434, 12438, 12439, 12440, 12441, 12442, 12446, 12447, 12448, 12449,
   12453, 12454, 12455, 12456, 12457, 12461, 12462, 12463, 12464, 12465,
   12469, 12474, 12475, 12479, 12480, 12484, 12485, 12486, 12491, 12490,
   12522, 12523, 12527, 12528, 12532, 12542, 12542, 12554, 12555, 12558,
   12578, 12582, 12587, 12595, 12601, 12612, 12600, 12614, 12629, 12641,
   12640, 12661, 12660, 12670, 12669, 12692, 12698, 12702, 12707, 12706,
   12715, 12720, 12726, 12731, 12736, 12743, 12741, 12752, 12756, 12757,
   12761, 12773, 12786, 12787, 12791, 12805, 12809, 12818, 12821, 12828,
   12829, 12837, 12842, 12836, 12854, 12859, 12853, 12869, 12877, 12886,
   12894, 12895, 12899, 12900, 12904, 12905, 12913, 12913, 12916, 12916,
   12929, 12930, 12932, 12931, 12944, 12950, 12952, 12956, 12958, 12964,
   12968, 12969, 12973, 12974, 12978, 12988, 12989, 12993, 12994, 12998,
   12999, 13003, 13004, 13009, 13008, 13024, 13023, 13038, 13039, 13043,
   13044, 13048, 13053, 13061, 13069, 13080, 13081, 13087, 13095, 13097,
   13099, 13097, 13109, 13123, 13130, 13140, 13159, 13129, 13166, 13167,
   13171, 13180, 13181, 13185, 13195, 13196, 13203, 13202, 13220, 13223,
   13230, 13231, 13239, 13254, 13262, 13273, 13279, 13272, 13284, 13290,
   13283, 13298, 13302, 13301, 13321, 13322, 13326, 13341, 13359, 13360,
   13364, 13365, 13369, 13370, 13371, 13376, 13387, 13375, 13397, 13399,
   13402, 13404, 13407, 13408, 13411, 13415, 13419, 13423, 13427, 13431,
   13435, 13439, 13443, 13451, 13454, 13464, 13463, 13482, 13489, 13497,
   13505, 13513, 13521, 13529, 13536, 13543, 13549, 13551, 13553, 13562,
   13566, 13571, 13570, 13577, 13576, 13582, 13591, 13598, 13603, 13608,
   13613, 13618, 13623, 13625, 13627, 13629, 13636, 13644, 13646, 13654,
   13661, 13668, 13676, 13682, 13687, 13695, 13703, 13711, 13715, 13719,
   13726, 13735, 13742, 13749, 13756, 13762, 13768, 13774, 13780, 13786,
   13794, 13799, 13806, 13813, 13820, 13827, 13834, 13841, 13846, 13851,
   13856, 13861, 13866, 13873, 13895, 13897, 13899, 13904, 13905, 13908,
   13910, 13914, 13915, 13919, 13920, 13924, 13925, 13929, 13930, 13934,
   13935, 13939, 13940, 13948, 13960, 13959, 13978, 13977, 13987, 13988,
   13989, 13990, 13991, 13992, 13996, 13997, 14001, 14008, 14009, 14011,
   14012, 14016, 14017, 14030, 14031, 14032, 14047, 14046, 14058, 14057,
   14069, 14074, 14075, 14090, 14093, 14092, 14105, 14106, 14111, 14113,
   14115, 14117, 14119, 14121, 14129, 14131, 14133, 14135, 14140, 14142,
   14150, 14152, 14154, 14156, 14158, 14160, 14177, 14178, 14182, 14186,
   14199, 14198, 14213, 14223, 14224, 14227, 14229, 14230, 14234, 14250,
   14251, 14256, 14255, 14265, 14266, 14270, 14270, 14274, 14273, 14279,
   14283, 14284, 14288, 14289, 14296, 14301, 14300, 14315, 14314, 14329,
   14330, 14331, 14335, 14336, 14337, 14346, 14347, 14351, 14355, 14363,
   14363, 14368, 14369, 14378, 14390, 14404, 14415, 14428, 14389, 14439,
   14440, 14444, 14445, 14449, 14450, 14458, 14462, 14463, 14464, 14467,
   14469, 14473, 14474, 14478, 14483, 14490, 14495, 14502, 14504, 14508,
   14509, 14513, 14518, 14526, 14527, 14531, 14533, 14541, 14542, 14546,
   14547, 14548, 14552, 14554, 14559, 14560, 14569, 14570, 14574, 14575,
   14579, 14592, 14597, 14602, 14607, 14615, 14623, 14628, 14636, 14644,
   14659, 14666, 14672, 14682, 14683, 14691, 14692, 14693, 14694, 14708,
   14714, 14720, 14726, 14732, 14738, 14759, 14769, 14779, 14785, 14792,
   14802, 14809, 14816, 14827, 14826, 14849, 14850, 14855, 14856, 14861,
   14884, 14887, 14886, 14902, 14906, 14911, 14915, 14925, 14931, 14940,
   14955, 14956, 14960, 14965, 14973, 14978, 14986, 14991, 14996, 15001,
   15007, 15012, 15020, 15025, 15030, 15035, 15041, 15049, 15050, 15061,
   15069, 15073, 15079, 15085, 15095, 15101, 15110, 15120, 15121, 15125,
   15126, 15127, 15131, 15139, 15147, 15155, 15163, 15164, 15172, 15173,
   15177, 15178, 15183, 15192, 15193, 15201, 15202, 15210, 15211, 15212,
   15216, 15227, 15256, 15265, 15265, 15267, 15277, 15278, 15279, 15280,
   15281, 15282, 15283, 15284, 15285, 15286, 15287, 15292, 15293, 15294,
   15295, 15296, 15297, 15298, 15299, 15300, 15301, 15302, 15303, 15307,
   15308, 15309, 15310, 15311, 15312, 15313, 15314, 15315, 15316, 15317,
   15321, 15322, 15323, 15324, 15325, 15326, 15327, 15328, 15329, 15330,
   15331, 15335, 15336, 15337, 15338, 15339, 15340, 15341, 15354, 15355,
   15356, 15357, 15358, 15359, 15360, 15361, 15362, 15363, 15364, 15365,
   15366, 15367, 15368, 15369, 15370, 15371, 15372, 15373, 15374, 15375,
   15376, 15377, 15378, 15379, 15380, 15381, 15382, 15383, 15384, 15385,
   15386, 15387, 15388, 15389, 15390, 15391, 15392, 15393, 15394, 15395,
   15396, 15397, 15398, 15399, 15400, 15401, 15402, 15403, 15404, 15405,
   15406, 15407, 15448, 15449, 15450, 15451, 15452, 15453, 15464, 15465,
   15466, 15467, 15468, 15469, 15470, 15471, 15472, 15473, 15477, 15478,
   15479, 15483, 15484, 15485, 15494, 15495, 15496, 15497, 15498, 15499,
   15500, 15501, 15502, 15503, 15504, 15505, 15506, 15507, 15508, 15509,
   15510, 15511, 15512, 15513, 15514, 15515, 15516, 15517, 15518, 15519,
   15524, 15532, 15533, 15534, 15535, 15536, 15537, 15538, 15539, 15540,
   15541, 15542, 15543, 15544, 15545, 15546, 15547, 15548, 15549, 15550,
   15551, 15552, 15553, 15554, 15555, 15556, 15557, 15558, 15559, 15560,
   15561, 15562, 15563, 15564, 15565, 15566, 15567, 15568, 15569, 15570,
   15571, 15572, 15573, 15574, 15575, 15576, 15577, 15578, 15583, 15584,
   15585, 15586, 15587, 15588, 15589, 15590, 15591, 15592, 15593, 15594,
   15595, 15596, 15597, 15598, 15599, 15600, 15601, 15602, 15603, 15604,
   15605, 15606, 15607, 15608, 15609, 15610, 15611, 15612, 15613, 15614,
   15615, 15616, 15617, 15618, 15619, 15620, 15621, 15622, 15623, 15624,
   15625, 15626, 15627, 15628, 15629, 15630, 15631, 15632, 15633, 15634,
   15635, 15636, 15637, 15638, 15639, 15640, 15641, 15642, 15643, 15644,
   15645, 15646, 15647, 15648, 15649, 15650, 15651, 15652, 15653, 15654,
   15655, 15656, 15657, 15658, 15659, 15660, 15661, 15662, 15663, 15664,
   15665, 15666, 15667, 15668, 15669, 15670, 15671, 15672, 15673, 15674,
   15675, 15676, 15677, 15678, 15679, 15680, 15681, 15682, 15683, 15684,
   15685, 15686, 15687, 15688, 15689, 15690, 15691, 15692, 15693, 15694,
   15695, 15696, 15697, 15698, 15699, 15700, 15701, 15702, 15703, 15704,
   15705, 15706, 15707, 15708, 15709, 15710, 15711, 15712, 15713, 15714,
   15715, 15716, 15717, 15718, 15719, 15720, 15721, 15722, 15723, 15724,
   15725, 15726, 15727, 15728, 15729, 15730, 15731, 15732, 15733, 15734,
   15735, 15736, 15737, 15738, 15739, 15740, 15741, 15742, 15743, 15744,
   15745, 15746, 15747, 15748, 15749, 15750, 15751, 15752, 15753, 15754,
   15755, 15756, 15757, 15758, 15759, 15760, 15761, 15762, 15763, 15764,
   15765, 15766, 15767, 15768, 15769, 15770, 15771, 15772, 15773, 15774,
   15775, 15776, 15777, 15778, 15779, 15780, 15781, 15782, 15783, 15784,
   15785, 15786, 15787, 15788, 15789, 15790, 15791, 15792, 15793, 15794,
   15795, 15796, 15797, 15798, 15799, 15800, 15801, 15802, 15803, 15804,
   15805, 15806, 15807, 15808, 15809, 15810, 15811, 15812, 15813, 15814,
   15815, 15816, 15817, 15818, 15819, 15820, 15821, 15822, 15823, 15824,
   15825, 15826, 15827, 15828, 15829, 15830, 15831, 15832, 15833, 15834,
   15835, 15836, 15837, 15838, 15839, 15840, 15841, 15842, 15843, 15844,
   15845, 15846, 15847, 15848, 15849, 15850, 15851, 15852, 15853, 15854,
   15855, 15856, 15857, 15862, 15863, 15864, 15865, 15866, 15867, 15868,
   15869, 15870, 15871, 15872, 15873, 15874, 15875, 15876, 15877, 15878,
   15879, 15880, 15881, 15882, 15883, 15884, 15885, 15886, 15887, 15888,
   15889, 15890, 15891, 15892, 15893, 15894, 15895, 15896, 15897, 15898,
   15899, 15900, 15901, 15902, 15903, 15904, 15905, 15906, 15907, 15908,
   15909, 15910, 15911, 15912, 15913, 15914, 15915, 15916, 15917, 15918,
   15919, 15920, 15921, 15922, 15923, 15924, 15925, 15926, 15927, 15928,
   15929, 15930, 15931, 15932, 15933, 15934, 15935, 15936, 15937, 15938,
   15939, 15940, 15941, 15942, 15943, 15944, 15945, 15946, 15947, 15948,
   15949, 15950, 15951, 15952, 15953, 15954, 15955, 15956, 15957, 15958,
   15959, 15960, 15961, 15962, 15963, 15964, 15965, 15966, 15967, 15968,
   15969, 15970, 15971, 15972, 15973, 15974, 15975, 15976, 15977, 15978,
   15979, 15980, 15981, 15982, 15983, 15984, 15985, 15986, 15987, 15988,
   15989, 15990, 15991, 15992, 15993, 15994, 15995, 15996, 15997, 15998,
   15999, 16000, 16001, 16002, 16003, 16004, 16005, 16006, 16007, 16008,
   16009, 16010, 16011, 16012, 16013, 16014, 16015, 16016, 16017, 16018,
   16019, 16020, 16021, 16022, 16023, 16024, 16025, 16026, 16027, 16028,
   16029, 16030, 16031, 16032, 16033, 16034, 16035, 16036, 16037, 16038,
   16039, 16040, 16041, 16042, 16043, 16044, 16045, 16046, 16047, 16048,
   16049, 16050, 16051, 16052, 16053, 16054, 16055, 16056, 16057, 16058,
   16059, 16060, 16061, 16062, 16063, 16064, 16065, 16066, 16067, 16068,
   16069, 16070, 16071, 16072, 16073, 16074, 16075, 16076, 16077, 16078,
   16079, 16080, 16081, 16082, 16083, 16084, 16085, 16086, 16087, 16088,
   16089, 16090, 16091, 16092, 16093, 16094, 16095, 16096, 16097, 16109,
   16108, 16121, 16122, 16124, 16123, 16135, 16134, 16141, 16139, 16159,
   16160, 16165, 16166, 16168, 16167, 16181, 16182, 16188, 16187, 16192,
   16196, 16197, 16198, 16202, 16203, 16204, 16205, 16209, 16210, 16211,
   16212, 16221, 16220, 16234, 16233, 16248, 16247, 16265, 16264, 16278,
   16277, 16291, 16290, 16306, 16305, 16319, 16318, 16332, 16331, 16344,
   16343, 16355, 16354, 16366, 16365, 16377, 16376, 16387, 16405, 16416,
   16438, 16460, 16476, 16488, 16487, 16501, 16500, 16512, 16511, 16525,
   16526, 16527, 16528, 16532, 16551, 16569, 16570, 16574, 16575, 16576,
   16577, 16582, 16587, 16592, 16603, 16604, 16605, 16611, 16617, 16629,
   16628, 16642, 16643, 16649, 16658, 16659, 16663, 16664, 16668, 16687,
   16688, 16689, 16694, 16695, 16700, 16699, 16717, 16716, 16728, 16737,
   16747, 16746, 16787, 16788, 16792, 16793, 16797, 16798, 16799, 16800,
   16802, 16801, 16814, 16815, 16816, 16817, 16818, 16824, 16829, 16834,
   16839, 16843, 16848, 16857, 16859, 16864, 16869, 16875, 16881, 16886,
   16898, 16899, 16903, 16904, 16908, 16913, 16921, 16931, 16950, 16953,
   16955, 16959, 16960, 16967, 16969, 16973, 16978, 16985, 16989, 16998,
   17005, 17006, 17007, 17008, 17012, 17013, 17014, 17015, 17016, 17017,
   17018, 17019, 17020, 17021, 17022, 17023, 17024, 17025, 17026, 17027,
   17028, 17029, 17030, 17031, 17032, 17033, 17034, 17035, 17036, 17037,
   17038, 17039, 17040, 17041, 17042, 17043, 17044, 17045, 17046, 17047,
   17048, 17049, 17050, 17051, 17052, 17053, 17057, 17058, 17062, 17063,
   17067, 17074, 17081, 17091, 17100, 17106, 17113, 17121, 17126, 17134,
   17139, 17147, 17152, 17159, 17159, 17160, 17160, 17163, 17169, 17175,
   17180, 17187, 17193, 17200, 17209, 17213, 17219, 17227, 17229, 17233,
   17237, 17241, 17248, 17253, 17258, 17263, 17268, 17276, 17277, 17281,
   17282, 17287, 17288, 17292, 17293, 17297, 17298, 17302, 17303, 17308,
   17307, 17317, 17326, 17327, 17331, 17332, 17337, 17338, 17339, 17344,
   17345, 17346, 17350, 17362, 17371, 17377, 17386, 17395, 17408, 17410,
   17412, 17420, 17421, 17422, 17426, 17427, 17433, 17434, 17435, 17436,
   17437, 17438, 17439, 17449, 17450, 17455, 17468, 17482, 17483, 17484,
   17488, 17489, 17493, 17494, 17499, 17500, 17504, 17510, 17519, 17519,
   17533, 17534, 17535, 17536, 17546, 17548, 17554, 17560, 17570, 17579,
   17585, 17590, 17594, 17568, 17643, 17643, 17660, 17664, 17668, 17672,
   17676, 17680, 17688, 17689, 17705, 17712, 17719, 17732, 17733, 17734,
   17738, 17739, 17740, 17744, 17745, 17750, 17752, 17751, 17757, 17758,
   17762, 17767, 17774, 17779, 17788, 17794, 18203, 18204, 18208, 18210,
   18209, 18219, 18218, 18229, 18233, 18237, 18242, 18243, 18249, 18250,
   18251, 18252, 18253, 18254, 18255, 18259, 18260, 18261, 18262, 18263,
   18264, 18265, 18269, 18270, 18271, 18276, 18280, 18289, 18288, 18301,
   18307, 18311, 18321, 18330, 18331, 18332, 18336, 18337, 18338, 18342,
   18348, 18354, 18360, 18366, 18372, 18382, 18382, 18394, 18400, 18401,
   18402, 18403, 18404, 18405, 18406, 18407, 18411, 18412, 18420, 18421,
   18427, 18426, 18443, 18442, 18461, 18460, 18484, 18485, 18489, 18498,
   18499, 18503, 18504, 18509, 18508, 18523, 18531, 18532, 18536, 18537,
   18542, 18543, 18548, 18549, 18553, 18554, 18558, 18562, 18566, 18572,
   18562, 18581, 18583, 18588, 18589, 18593, 18594, 18598, 18598, 18604,
   18610, 18618, 18619, 18620, 18626, 18627, 18633, 18634, 18640, 18651,
   18650, 18678, 18677, 18703, 18712, 18721, 18727, 18726, 18745, 18744,
   18763, 18767, 18768, 18772, 18773, 18777, 18784, 18794, 18802, 18813,
   18818, 18823, 18828, 18838, 18837, 18853, 18861, 18852, 18875, 18880,
   18885, 18890, 18898, 18911, 18910, 18921, 18919, 18935, 18933, 18947,
   18958, 18954, 18978, 18990, 18995, 18974, 19008, 19012, 19017, 19016,
   19025, 19029, 19030, 19037, 19038, 19045, 19046, 19050, 19051, 19058,
   19069, 19068, 19087, 19088, 19089, 19090, 19091, 19092, 19096, 19097,
   19098, 19099, 19100, 19101, 19102, 19103, 19104, 19105, 19106, 19110,
   19111, 19112, 19113, 19120, 19118, 19134, 19138, 19132, 19154, 19155,
   19160, 19159, 19174, 19180, 19173, 19197, 19195
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "'@'", "ABORT_SYM", "IMPOSSIBLE_ACTION",
  "END_OF_INPUT", "COLON_ORACLE_SYM", "PARAM_MARKER",
  "FOR_SYSTEM_TIME_SYM", "LEFT_PAREN_ALT", "LEFT_PAREN_WITH",
  "LEFT_PAREN_LIKE", "ORACLE_CONCAT_SYM", "PERCENT_ORACLE_SYM",
  "WITH_CUBE_SYM", "WITH_ROLLUP_SYM", "WITH_SYSTEM_SYM", "IDENT",
  "IDENT_QUOTED", "LEX_HOSTNAME", "UNDERSCORE_CHARSET", "BIN_NUM",
  "DECIMAL_NUM", "FLOAT_NUM", "HEX_NUM", "HEX_STRING", "LONG_NUM",
  "NCHAR_STRING", "NUM", "TEXT_STRING", "ULONGLONG_NUM", "AND_AND_SYM",
  "DOT_DOT_SYM", "EQUAL_SYM", "GE", "LE", "MYSQL_CONCAT_SYM", "NE",
  "NOT2_SYM", "OR2_SYM", "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT",
  "ACCESSIBLE_SYM", "ADD", "ALL", "ALTER", "ANALYZE_SYM", "AND_SYM", "ASC",
  "ASENSITIVE_SYM", "AS", "BEFORE_SYM", "BETWEEN_SYM", "BIGINT", "BINARY",
  "BIT_AND", "BIT_OR", "BIT_XOR", "BLOB_MARIADB_SYM", "BLOB_ORACLE_SYM",
  "BODY_ORACLE_SYM", "BOTH", "BY", "CALL_SYM", "CASCADE", "CASE_SYM",
  "CAST_SYM", "CHANGE", "CHAR_SYM", "CHECK_SYM", "COLLATE_SYM",
  "CONDITION_SYM", "CONSTRAINT", "CONTINUE_MARIADB_SYM",
  "CONTINUE_ORACLE_SYM", "CONVERT_SYM", "COUNT_SYM", "CREATE", "CROSS",
  "CUME_DIST_SYM", "CURDATE", "CURRENT_ROLE", "CURRENT_USER", "CURSOR_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_SYM", "DECLARE_MARIADB_SYM",
  "DECLARE_ORACLE_SYM", "DEFAULT", "DELETE_DOMAIN_ID_SYM", "DELETE_SYM",
  "DENSE_RANK_SYM", "DESCRIBE", "DESC", "DETERMINISTIC_SYM", "DISTINCT",
  "DIV_SYM", "DO_DOMAIN_IDS_SYM", "DOUBLE_SYM", "DROP", "DUAL_SYM",
  "EACH_SYM", "ELSEIF_MARIADB_SYM", "ELSE", "ELSIF_ORACLE_SYM", "ENCLOSED",
  "ESCAPED", "EXCEPT_SYM", "EXISTS", "EXTRACT_SYM", "FALSE_SYM",
  "FETCH_SYM", "FIRST_VALUE_SYM", "FLOAT_SYM", "FOREIGN", "FOR_SYM",
  "FROM", "FULLTEXT_SYM", "GOTO_ORACLE_SYM", "GRANT", "GROUP_CONCAT_SYM",
  "JSON_ARRAYAGG_SYM", "JSON_OBJECTAGG_SYM", "GROUP_SYM", "HAVING",
  "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "IF_SYM",
  "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "INDEX_SYM", "INFILE",
  "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM", "INSERT", "IN_SYM",
  "INTERSECT_SYM", "INTERVAL_SYM", "INTO", "INT_SYM", "IS", "ITERATE_SYM",
  "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM", "LAG_SYM", "LEADING",
  "LEAD_SYM", "LEAVE_SYM", "LEFT", "LIKE", "LIMIT", "LINEAR_SYM", "LINES",
  "LOAD", "LOCATOR_SYM", "LOCK_SYM", "LONGBLOB", "LONG_SYM", "LONGTEXT",
  "LOOP_SYM", "LOW_PRIORITY", "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH",
  "MAX_SYM", "MAXVALUE_SYM", "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT",
  "MEDIUMTEXT", "MIN_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MODIFIES_SYM", "MOD_SYM", "NATURAL", "NEG", "NOT_SYM",
  "NO_WRITE_TO_BINLOG", "NOW_SYM", "NTH_VALUE_SYM", "NTILE_SYM",
  "NULL_SYM", "NUMERIC_SYM", "ON", "OPTIMIZE", "OPTIONALLY", "ORDER_SYM",
  "OR_SYM", "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OVER_SYM",
  "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM", "PARSE_VCOL_EXPR_SYM",
  "PARTITION_SYM", "PERCENTILE_CONT_SYM", "PERCENTILE_DISC_SYM",
  "PERCENT_RANK_SYM", "PORTION_SYM", "POSITION_SYM", "PRECISION",
  "PRIMARY_SYM", "PROCEDURE_SYM", "PURGE", "RAISE_ORACLE_SYM", "RANGE_SYM",
  "RANK_SYM", "READS_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL",
  "RECURSIVE_SYM", "REFERENCES", "REF_SYSTEM_ID_SYM", "REGEXP",
  "RELEASE_SYM", "RENAME", "REPEAT_SYM", "REPLACE", "REQUIRE_SYM",
  "RESIGNAL_SYM", "RESTRICT", "RETURNING_SYM", "RETURN_MARIADB_SYM",
  "RETURN_ORACLE_SYM", "REVOKE", "RIGHT", "ROW_NUMBER_SYM", "ROWS_SYM",
  "ROWTYPE_ORACLE_SYM", "SECOND_MICROSECOND_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERVER_OPTIONS", "SET", "SHOW",
  "SIGNAL_SYM", "SMALLINT", "SPATIAL_SYM", "SPECIFIC_SYM",
  "SQL_BIG_RESULT", "SQLEXCEPTION_SYM", "SQL_SMALL_RESULT", "SQLSTATE_SYM",
  "SQL_SYM", "SQLWARNING_SYM", "SSL_SYM", "STARTING",
  "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUBSTRING", "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TERMINATED", "THEN_SYM", "TINYBLOB", "TINYINT", "TINYTEXT", "TO_SYM",
  "TRAILING", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "UNDO_SYM", "UNION_SYM",
  "UNIQUE_SYM", "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM",
  "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALUES_IN_SYM", "VALUES_LESS_SYM", "VALUES", "VARBINARY", "VARCHAR",
  "VARIANCE_SYM", "VAR_SAMP_SYM", "VARYING", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "XOR", "YEAR_MONTH_SYM", "ZEROFILL",
  "BODY_MARIADB_SYM", "ELSEIF_ORACLE_SYM", "ELSIF_MARIADB_SYM",
  "EXCEPTION_ORACLE_SYM", "GOTO_MARIADB_SYM", "OTHERS_MARIADB_SYM",
  "PACKAGE_MARIADB_SYM", "RAISE_MARIADB_SYM", "ROWTYPE_MARIADB_SYM",
  "ACCOUNT_SYM", "ACTION", "ADMIN_SYM", "ADDDATE_SYM", "AFTER_SYM",
  "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM", "ALWAYS_SYM", "ANY_SYM",
  "ASCII_SYM", "AT_SYM", "ATOMIC_SYM", "AUTHORS_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEGIN_MARIADB_SYM", "BEGIN_ORACLE_SYM",
  "BINLOG_SYM", "BIT_SYM", "BLOCK_SYM", "BOOL_SYM", "BOOLEAN_SYM",
  "BTREE_SYM", "BYTE_SYM", "CACHE_SYM", "CASCADED", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGED", "CHARSET", "CHECKPOINT_SYM", "CHECKSUM_SYM",
  "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOB_MARIADB_SYM",
  "CLOB_ORACLE_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM", "COLLATION_SYM",
  "COLUMNS", "COLUMN_ADD_SYM", "COLUMN_CHECK_SYM", "COLUMN_CREATE_SYM",
  "COLUMN_DELETE_SYM", "COLUMN_GET_SYM", "COLUMN_SYM", "COLUMN_NAME_SYM",
  "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM", "COMPACT_SYM",
  "COMPLETION_SYM", "COMPRESSED_SYM", "CONCURRENT", "CONNECTION_SYM",
  "CONSISTENT_SYM", "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM",
  "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM", "CONTEXT_SYM",
  "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM", "CURRENT_SYM",
  "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_FORMAT_SYM", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DECODE_MARIADB_SYM", "DECODE_ORACLE_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DES_KEY_FILE",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DO_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "ENABLE_SYM",
  "END", "ENDS_SYM", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "ERROR_SYM",
  "ERRORS", "ESCAPE_SYM", "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM",
  "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM", "EXECUTE_SYM",
  "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM", "EXIT_ORACLE_SYM",
  "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "FAST_SYM", "FAULTS_SYM", "FEDERATED_SYM", "FILE_SYM",
  "FIRST_SYM", "FIXED_SYM", "FLUSH_SYM", "FOLLOWS_SYM", "FOLLOWING_SYM",
  "FORCE_SYM", "FORMAT_SYM", "FOUND_SYM", "FULL", "FUNCTION_SYM",
  "GENERAL", "GENERATED_SYM", "GET_FORMAT", "GET_SYM", "GLOBAL_SYM",
  "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM", "HELP_SYM",
  "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM", "HOUR_SYM",
  "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM", "IMMEDIATE_SYM",
  "IMPORT", "INCREMENT_SYM", "INDEXES", "INITIAL_SIZE_SYM",
  "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM", "IO_SYM", "IPC_SYM",
  "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM", "INVISIBLE_SYM", "JSON_SYM",
  "KEY_BLOCK_SIZE", "LANGUAGE_SYM", "LAST_SYM", "LAST_VALUE",
  "LASTVAL_SYM", "LEAVES", "LESS_SYM", "LEVEL_SYM", "LIST_SYM",
  "LOCAL_SYM", "LOCKS_SYM", "LOGFILE_SYM", "LOGS_SYM",
  "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_USE_GTID_SYM", "MASTER_HEARTBEAT_PERIOD_SYM",
  "MAX_CONNECTIONS_PER_HOUR", "MAX_QUERIES_PER_HOUR", "MAX_ROWS",
  "MAX_SIZE_SYM", "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONITOR_SYM",
  "MONTH_SYM", "MUTEX_SYM", "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM",
  "NAME_SYM", "NATIONAL_SYM", "NCHAR_SYM", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NEXTVAL_SYM", "NOCACHE_SYM", "NOCYCLE_SYM", "NODEGROUP_SYM",
  "NONE_SYM", "NOTFOUND_SYM", "NO_SYM", "NOMAXVALUE_SYM", "NOMINVALUE_SYM",
  "NO_WAIT_SYM", "NOWAIT_SYM", "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM",
  "NVARCHAR_SYM", "OF_SYM", "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM",
  "ONLY_SYM", "ONLINE_SYM", "OPEN_SYM", "OPTIONS_SYM", "OPTION",
  "OVERLAPS_SYM", "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARSER_SYM",
  "PARTIAL", "PARTITIONS_SYM", "PARTITIONING_SYM", "PASSWORD_SYM",
  "PERIOD_SYM", "PERSISTENT_SYM", "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM",
  "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM", "REPLAY_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM", "SETVAL_SYM", "SHARE_SYM",
  "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLAVES",
  "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM", "SOCKET_SYM", "SOFT_SYM",
  "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD",
  "STAGE_SYM", "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM",
  "SWITCHES_SYM", "SYSTEM", "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TEXT_SYM", "THAN_SYM", "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD",
  "TIMESTAMP_DIFF", "TIME_SYM", "TRANSACTION_SYM", "TRANSACTIONAL_SYM",
  "THREADS_SYM", "TRIGGERS_SYM", "TRIM_ORACLE", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "UNBOUNDED_SYM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM", "UNKNOWN_SYM",
  "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM", "VALUE_SYM",
  "VARCHAR2_MARIADB_SYM", "VARCHAR2_ORACLE_SYM", "VARIABLES",
  "VERSIONING_SYM", "VIA_SYM", "VIEW_SYM", "VISIBLE_SYM", "VIRTUAL_SYM",
  "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM",
  "WITHIN", "WITHOUT", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM",
  "XA_SYM", "XML_SYM", "YEAR_SYM", "CONDITIONLESS_JOIN", "ON_SYM",
  "PREC_BELOW_NOT", "'='", "'>'", "'<'", "'|'", "'&'", "'-'", "'+'", "'*'",
  "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR",
  "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE", "USER",
  "PREC_BELOW_CONTRACTION_TOKEN2", "'('", "')'", "EMPTY_FROM_CLAUSE",
  "','", "'!'", "'{'", "'}'", "';'", "'.'", "$accept", "query", "$@1",
  "opt_end_of_input", "directly_executable_statement", "verb_clause",
  "deallocate", "deallocate_or_drop", "prepare", "$@2", "execute", "$@3",
  "$@4", "execute_using", "$@5", "execute_params", "help", "$@6", "change",
  "$@7", "master_defs", "master_def", "ignore_server_id_list",
  "ignore_server_id", "do_domain_id_list", "do_domain_id",
  "ignore_domain_id_list", "ignore_domain_id", "master_file_def",
  "optional_connection_name", "connection_name", "create", "$@8", "$@9",
  "$@10", "$@11", "$@12", "$@13", "$@14", "$@15", "$@16", "$@17", "$@18",
  "$@19", "$@20", "$@21", "$@22", "$@23", "$@24", "opt_sequence",
  "sequence_defs", "sequence_def", "server_def", "$@25",
  "server_options_list", "server_option", "event_tail", "$@26",
  "ev_schedule_time", "$@27", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@28", "clear_privileges", "opt_aggregate", "sp_handler",
  "sp_name", "sp_a_chistics", "sp_c_chistics", "sp_chistic",
  "sp_c_chistic", "sp_suid", "call", "$@29", "opt_sp_cparam_list",
  "opt_sp_cparams", "sp_cparams", "sp_fdparam_list", "$@30", "sp_fdparams",
  "sp_param_name", "sp_param_name_and_type", "sp_pdparam_list",
  "sp_pdparams", "sp_parameter_type", "sp_parenthesized_pdparam_list",
  "$@31", "sp_parenthesized_fdparam_list", "sp_proc_stmts",
  "sp_proc_stmts1", "optionally_qualified_column_ident",
  "row_field_definition", "row_field_definition_list", "row_type_body",
  "sp_decl_idents_init_vars", "sp_decl_variable_list", "$@32",
  "sp_decl_handler", "$@33", "opt_parenthesized_cursor_formal_parameters",
  "sp_cursor_stmt_lex", "sp_cursor_stmt", "$@34", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "raise_stmt_oracle", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_ident", "sp_decl_idents", "sp_proc_stmt_if", "$@35",
  "sp_proc_stmt_statement", "$@36", "RETURN_ALLMODES_SYM",
  "sp_proc_stmt_return", "sp_proc_stmt_exit_oracle",
  "sp_proc_stmt_continue_oracle", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle", "expr_lex", "@37",
  "assignment_source_lex", "assignment_source_expr", "$@38",
  "for_loop_bound_expr", "$@39", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_with_cursor",
  "sp_proc_stmt_open", "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch",
  "sp_proc_stmt_close", "sp_fetch_list", "sp_if", "$@40", "$@41",
  "sp_elseifs", "case_stmt_specification", "$@42", "case_stmt_body",
  "$@43", "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@44", "searched_when_clause", "$@45",
  "else_clause_opt", "sp_opt_label", "opt_sp_for_loop_direction",
  "sp_for_loop_index_and_bounds", "sp_for_loop_bounds", "loop_body",
  "repeat_body", "pop_sp_loop_label", "sp_labeled_control", "$@46", "$@47",
  "$@48", "$@49", "$@50", "$@51", "sp_unlabeled_control", "$@52", "$@53",
  "$@54", "$@55", "$@56", "trg_action_time", "trg_event",
  "change_tablespace_access", "change_tablespace_info", "tablespace_info",
  "opt_logfile_group_name", "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@57", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "opt_ts_wait", "ts_wait", "size_number", "create_body",
  "$@58", "create_like", "opt_create_select",
  "create_select_query_expression", "opt_create_partitioning",
  "opt_partitioning", "partitioning", "$@59", "have_partitioning",
  "partition_entry", "$@60", "partition", "$@61", "part_type_def", "$@62",
  "$@63", "$@64", "opt_linear", "opt_key_algo", "part_field_list",
  "part_field_item_list", "part_field_item", "part_column_list",
  "part_func", "sub_part_func", "opt_num_parts", "opt_sub_part", "$@65",
  "$@66", "sub_part_field_list", "sub_part_field_item", "part_func_expr",
  "opt_num_subparts", "part_defs", "part_def_list", "part_definition",
  "$@67", "part_name", "opt_part_values", "$@68", "$@69", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item", "$@70", "$@71",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@72", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "opt_versioning_rotation", "opt_versioning_interval_start", "opt_as",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists_table_element",
  "opt_if_not_exists", "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@73", "opt_versioning_option",
  "versioning_option", "default_charset", "default_collation",
  "storage_engines", "known_storage_engines", "row_types",
  "merge_insert_types", "udf_type", "create_field_list",
  "create_field_list_parens", "field_list", "field_list_item",
  "column_def", "key_def", "$@74", "$@75", "$@76", "$@77", "$@78", "$@79",
  "$@80", "constraint_def", "period_for_system_time",
  "period_for_application_time", "opt_check_constraint",
  "check_constraint", "opt_constraint_no_id", "opt_constraint",
  "constraint", "field_spec", "@81", "field_type_or_serial", "$@82",
  "$@83", "opt_serial_attribute", "opt_serial_attribute_list",
  "opt_asrow_attribute", "opt_asrow_attribute_list", "field_def", "$@84",
  "opt_generated_always", "vcol_opt_specifier", "vcol_opt_attribute",
  "vcol_opt_attribute_list", "vcol_attribute", "parse_vcol_expr", "$@85",
  "parenthesized_expr", "virtual_column_func", "expr_or_literal",
  "column_default_expr", "field_type", "qualified_field_type",
  "field_type_all", "field_type_numeric", "opt_binary_and_compression",
  "field_type_string", "field_type_temporal", "field_type_lob",
  "field_type_misc", "char", "nchar", "varchar", "nvarchar", "int_type",
  "real_type", "srid_option", "float_options", "precision",
  "field_options", "last_field_options", "field_length",
  "opt_field_length", "opt_precision", "attribute_list", "attribute",
  "opt_compression_method", "opt_compressed", "opt_enable", "compressed",
  "compressed_deprecated_data_type_attribute",
  "compressed_deprecated_column_attribute", "asrow_attribute",
  "serial_attribute", "with_or_without_system", "charset", "charset_name",
  "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "charset_or_alias", "collate", "opt_binary", "binary",
  "opt_bin_mod", "ws_nweights", "$@86", "ws_level_flag_desc",
  "ws_level_flag_reverse", "ws_level_flags", "ws_level_number",
  "ws_level_list_item", "ws_level_list", "ws_level_range",
  "ws_level_list_or_range", "opt_ws_levels", "opt_primary", "references",
  "opt_ref_list", "ref_list", "opt_match_clause", "opt_on_update_delete",
  "delete_option", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "fulltext", "spatial",
  "normal_key_options", "fulltext_key_options", "spatial_key_options",
  "normal_key_opts", "spatial_key_opts", "fulltext_key_opts",
  "opt_USING_key_algorithm", "opt_key_algorithm_clause", "key_using_alg",
  "all_key_opt", "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "opt_without_overlaps", "key_part",
  "opt_ident", "string_list", "alter", "$@87", "$@88", "$@89", "$@90",
  "$@91", "$@92", "$@93", "$@94", "$@95", "$@96", "$@97", "$@98", "$@99",
  "account_locking_option", "opt_password_expire_option",
  "opt_account_locking_and_opt_password_expiration",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "$@100", "$@101", "$@102",
  "remove_partitioning", "all_or_alt_part_name_list", "add_partition_rule",
  "$@103", "add_part_extra", "reorg_partition_rule", "$@104",
  "reorg_parts_rule", "$@105", "alt_part_name_list", "alt_part_name_item",
  "alter_list", "add_column", "alter_list_item",
  "opt_index_lock_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "alter_options",
  "$@106", "alter_options_part2", "alter_option_list", "alter_option",
  "opt_restrict", "opt_place", "opt_to", "slave", "$@107", "$@108",
  "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_thread_opts", "$@109", "slave_thread_opt_list",
  "slave_thread_opt", "slave_until", "slave_until_opts", "checksum",
  "$@110", "opt_checksum_type", "repair_table_or_view", "$@111", "repair",
  "$@112", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "opt_view_repair_type", "analyze", "$@113", "analyze_table_list",
  "analyze_table_elem_spec", "opt_persistent_stat_clause",
  "persistent_stat_spec", "persistent_column_stat_spec", "$@114",
  "persistent_index_stat_spec", "$@115", "table_column_list",
  "table_index_list", "table_index_name", "binlog_base64_event",
  "check_view_or_table", "$@116", "check", "$@117", "opt_mi_check_type",
  "mi_check_types", "mi_check_type", "opt_view_check_type", "optimize",
  "$@118", "opt_no_write_to_binlog", "rename", "$@119", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@120",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@121",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@122", "cache_keys_spec",
  "$@123", "cache_key_list_or_empty", "opt_ignore_leaves", "select",
  "$@124", "$@125", "select_into", "$@126", "$@127", "simple_table",
  "table_value_constructor", "$@128", "query_specification_start", "$@129",
  "$@130", "query_specification", "select_into_query_specification",
  "query_expression", "query_expression_no_with_clause",
  "query_expression_body_ext", "$@131", "$@132",
  "query_expression_body_ext_parens", "query_expression_body", "$@133",
  "query_primary", "query_simple", "subselect", "subquery",
  "opt_from_clause", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "for_portion_of_time_clause", "opt_for_portion_of_time_clause",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "select_lock_type", "opt_select_lock_type",
  "opt_lock_wait_timeout_new", "select_item_list", "select_item",
  "remember_tok_start", "remember_name", "remember_end", "select_alias",
  "opt_default_time_precision", "opt_time_precision", "optional_braces",
  "expr", "predicate", "bit_expr", "or", "and", "not", "not2", "comp_op",
  "all_or_any", "opt_dyncol_type", "dyncol_type", "numeric_dyncol_type",
  "temporal_dyncol_type", "string_dyncol_type", "$@134",
  "dyncall_create_element", "dyncall_create_list", "plsql_cursor_attr",
  "explicit_cursor_attr", "trim_operands",
  "column_default_non_parenthesized_expr", "primary_expr",
  "string_factor_expr", "simple_expr", "mysql_concatenation_expr",
  "function_call_keyword_timestamp", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "function_call_generic", "@135", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@136", "$@137", "$@138",
  "$@139", "$@140", "window_func_expr", "window_func",
  "simple_window_func", "inverse_distribution_function",
  "percentile_function", "$@141", "inverse_distribution_function_def",
  "order_by_single_element_list", "window_name", "variable", "$@142",
  "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "opt_glimit_clause",
  "glimit_clause_init", "glimit_clause", "glimit_options", "in_sum_expr",
  "$@143", "cast_type", "$@144", "$@145", "$@146", "cast_type_numeric",
  "cast_type_temporal", "opt_expr_list", "expr_list", "ident_list_arg",
  "ident_list", "when_list", "when_list_opt_else",
  "decode_when_list_oracle", "table_ref", "join_table_list",
  "esc_table_ref", "derived_table_list", "join_table", "$@147", "$@148",
  "$@149", "$@150", "$@151", "$@152", "inner_join", "normal_join",
  "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident_opt_parens", "table_primary_derived_opt_parens",
  "table_reference_list_parens", "nested_table_reference_list",
  "join_table_parens", "table_primary_ident", "table_primary_derived",
  "opt_outer", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "$@153", "$@154", "index_hints_list",
  "opt_index_hints_list", "$@155", "opt_key_definition", "$@156",
  "opt_key_usage_list", "key_usage_element", "key_usage_list",
  "using_list", "interval", "interval_time_stamp", "date_time_type",
  "table_alias", "opt_table_alias_clause", "table_alias_clause", "opt_all",
  "opt_where_clause", "$@157", "opt_having_clause", "$@158",
  "opt_group_clause", "group_list", "olap_opt", "opt_window_clause",
  "window_def_list", "window_def", "window_spec", "$@159",
  "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@160", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause", "opt_global_limit_clause", "limit_options",
  "limit_option", "limit_rows_option", "delete_limit_clause",
  "order_limit_lock", "opt_order_limit_lock", "query_expression_tail",
  "opt_query_expression_tail", "opt_procedure_or_into", "order_or_limit",
  "opt_plus", "int_num", "ulong_num", "real_ulong_num", "longlong_num",
  "ulonglong_num", "real_ulonglong_num", "dec_num_error", "dec_num",
  "choice", "bool", "procedure_clause", "$@161", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "$@162",
  "select_var_list", "select_var_ident", "select_outvar", "into",
  "into_destination", "$@163", "$@164", "do", "$@165", "drop", "$@166",
  "$@167", "$@168", "$@169", "table_list", "table_name",
  "table_name_with_opt_use_partition", "table_alias_ref_list",
  "table_alias_ref", "opt_if_exists_table_element", "opt_if_exists",
  "opt_temporary", "insert", "$@170", "$@171", "replace", "$@172", "$@173",
  "insert_start", "stmt_end", "insert_lock_option", "replace_lock_option",
  "insert_replace_option", "opt_into", "insert_table", "$@174",
  "insert_field_spec", "$@175", "insert_field_list", "opt_fields",
  "fields", "insert_values", "values_list", "ident_eq_list",
  "ident_eq_value", "equal", "opt_equal", "opt_with", "opt_by",
  "no_braces", "$@176", "no_braces_with_names", "$@177", "opt_values",
  "opt_values_with_names", "values", "values_with_names",
  "expr_or_default", "opt_insert_update", "$@178", "$@179",
  "update_table_list", "update", "$@180", "$@181", "$@182", "update_list",
  "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "$@183", "opt_delete_system_time",
  "delete_part2", "delete_single_table", "delete_single_table_for_period",
  "single_multi", "$@184", "$@185", "$@186", "$@187", "opt_returning",
  "@188", "table_wild_list", "table_wild_one", "opt_wild",
  "opt_delete_options", "opt_delete_option", "truncate", "$@189", "$@190",
  "opt_table_sym", "opt_profile_defs", "profile_defs", "profile_def",
  "opt_profile_args", "show", "$@191", "show_param", "$@192", "$@193",
  "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "from_or_in", "binlog_in", "binlog_from", "wild_and_where",
  "describe", "$@194", "$@195", "explainable_command", "describe_command",
  "analyze_stmt_command", "opt_extended_describe", "opt_format_json",
  "opt_describe_column", "flush", "$@196", "flush_options", "$@197",
  "opt_flush_lock", "flush_lock", "$@198", "flush_options_list",
  "flush_option", "opt_table_list", "backup", "backup_statements", "$@199",
  "opt_delete_gtid_domain", "delete_domain_id_list", "delete_domain_id",
  "optional_flush_tables_arguments", "reset", "$@200", "reset_options",
  "reset_option", "$@201", "$@202", "slave_reset_options",
  "master_reset_options", "purge", "$@203", "kill", "$@204", "kill_type",
  "kill_option", "opt_connection", "kill_expr", "shutdown", "$@205",
  "shutdown_option", "use", "load", "$@206", "$@207", "$@208", "$@209",
  "data_or_xml", "opt_local", "load_data_lock", "opt_duplicate",
  "opt_field_term", "field_term_list", "field_term", "opt_line_term",
  "line_term_list", "line_term", "opt_xml_rows_identified_by",
  "opt_ignore_lines", "lines_or_rows", "opt_field_or_var_spec",
  "fields_or_vars", "field_or_var", "opt_load_data_set_spec",
  "load_data_set_list", "load_data_set_elem", "text_literal",
  "text_string", "hex_or_bin_String", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "with_clause", "$@210",
  "opt_recursive", "with_list", "with_list_element", "opt_cycle", "$@211",
  "opt_with_column_list", "with_column_list", "ident_sys_alloc",
  "comma_separated_ident_list", "query_name", "insert_ident", "table_wild",
  "select_sublist_qualified_asterisk", "order_ident", "simple_ident",
  "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident_table_alias",
  "ident_cli_set_usual_case", "ident_sysvar_name", "ident", "label_ident",
  "ident_or_text", "user_maybe_role", "user_or_role", "user",
  "keyword_table_alias", "keyword_ident", "keyword_sysvar_name",
  "keyword_set_usual_case", "non_reserved_keyword_udt",
  "keyword_sp_var_not_label", "keyword_sp_head", "keyword_verb_clause",
  "keyword_set_special_case", "keyword_sysvar_type", "keyword_data_type",
  "keyword_cast_type", "keyword_sp_var_and_label",
  "reserved_keyword_udt_not_param_type", "set", "$@212", "set_param",
  "$@213", "$@214", "$@215", "set_stmt_option_list",
  "start_option_value_list_following_option_type", "$@216",
  "option_value_list", "option_value", "$@217", "option_type",
  "opt_var_type", "opt_var_ident_type", "set_stmt_option", "$@218",
  "$@219", "$@220", "option_value_following_option_type", "$@221", "$@222",
  "$@223", "option_value_no_option_type", "$@224", "$@225", "$@226",
  "$@227", "$@228", "$@229", "$@230", "$@231", "$@232", "$@233",
  "transaction_characteristics", "transaction_access_mode",
  "isolation_level", "transaction_access_mode_types", "isolation_types",
  "text_or_password", "set_expr_or_default", "lock", "$@234",
  "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@235", "handler", "$@236",
  "handler_tail", "$@237", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "$@238", "handler_rkey_mode", "revoke",
  "revoke_command", "admin_option_for_role", "grant", "grant_command",
  "opt_with_admin", "opt_with_admin_option", "role_list", "current_role",
  "grant_role", "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "column_list_privilege", "column_privilege",
  "object_privilege", "opt_and", "require_list", "require_list_element",
  "grant_ident", "user_list", "grant_list", "user_and_role_list",
  "via_or_with", "using_or_as", "grant_user", "auth_expression",
  "auth_token", "opt_auth_str", "opt_require_clause", "resource_option",
  "resource_option_list", "opt_resource_options", "opt_grant_options",
  "opt_grant_option", "grant_option_list", "grant_option",
  "begin_stmt_mariadb", "$@239", "compound_statement", "opt_not",
  "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_option",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@240", "view_check_option",
  "trigger_action_order", "trigger_follows_precedes_clause",
  "trigger_tail", "$@241", "$@242", "$@243", "$@244", "$@245",
  "sf_return_type", "$@246", "xa", "opt_format_xid", "xid",
  "begin_or_start", "opt_join_or_resume", "opt_one_phase", "opt_suspend",
  "$@247", "opt_migrate", "install", "uninstall", "keep_gcc_happy",
  "_empty", "statement", "sp_statement", "$@248", "$@249",
  "sp_if_then_statements", "sp_case_then_statements",
  "reserved_keyword_udt", "keyword_sp_block_section", "keyword_label",
  "keyword_sp_decl", "opt_truncate_table_storage_clause",
  "ident_for_loop_index", "row_field_name", "while_body", "$@250",
  "for_loop_statements", "sp_control_label", "sp_block_label",
  "remember_end_opt", "sp_opt_default", "sp_opt_inout", "sp_pdparam",
  "sp_proc_stmts1_implicit_block", "$@251", "remember_lex",
  "keyword_directly_assignable", "ident_directly_assignable",
  "ident_cli_directly_assignable", "set_assign", "$@252", "$@253", "$@254",
  "labels_declaration_oracle", "label_declaration_oracle",
  "opt_exception_clause", "exception_handlers", "exception_handler",
  "$@255", "sp_no_param", "opt_sp_parenthesized_fdparam_list",
  "opt_sp_parenthesized_pdparam_list", "opt_sp_name",
  "opt_package_routine_end_name", "sp_tail_is", "sp_instr_addr", "sp_body",
  "$@256", "$@257", "$@258", "create_package_chistic",
  "create_package_chistics", "opt_create_package_chistics",
  "opt_create_package_chistics_init", "$@259",
  "package_implementation_executable_section",
  "package_implementation_declare_section",
  "package_implementation_declare_section_list1",
  "package_implementation_declare_section_list2", "package_routine_lex",
  "package_specification_function", "$@260",
  "package_specification_procedure", "$@261",
  "package_implementation_routine_definition",
  "package_implementation_function_body", "$@262",
  "package_implementation_procedure_body", "$@263",
  "package_implementation_item_declaration",
  "opt_package_specification_element_list",
  "package_specification_element_list", "package_specification_element",
  "sp_decl_variable_list_anchored", "sp_param_name_and_type_anchored",
  "sf_c_chistics_and_body_standalone", "$@264", "sp_tail_standalone",
  "$@265", "$@266", "drop_routine", "create_routine", "$@267", "$@268",
  "$@269", "$@270", "$@271", "$@272", "$@273", "opt_sp_decl_body_list",
  "sp_decl_body_list", "$@274", "sp_decl_non_handler_list",
  "sp_decl_handler_list", "opt_sp_decl_handler_list",
  "sp_decl_non_handler", "$@275", "sp_proc_stmt", "sp_labelable_stmt",
  "sp_proc_stmt_compound_ok", "sp_labeled_block", "$@276", "$@277",
  "$@278", "opt_not_atomic", "sp_unlabeled_block", "$@279", "$@280",
  "$@281", "sp_block_statements_and_exceptions", "$@282", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,    64,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
     794,   795,   796,   797,   798,   799,   800,   801,   802,   803,
     804,   805,   806,   807,   808,   809,   810,   811,   812,   813,
     814,   815,   816,   817,   818,   819,   820,   821,   822,   823,
     824,   825,   826,   827,   828,   829,   830,   831,   832,   833,
     834,   835,   836,   837,   838,   839,   840,   841,   842,   843,
     844,   845,   846,   847,   848,   849,   850,   851,   852,   853,
     854,   855,   856,   857,   858,   859,   860,   861,   862,   863,
     864,   865,   866,   867,   868,   869,   870,   871,   872,   873,
     874,   875,   876,   877,   878,   879,   880,   881,   882,   883,
     884,   885,   886,   887,   888,   889,   890,   891,   892,   893,
     894,   895,   896,   897,   898,   899,   900,   901,   902,   903,
     904,   905,   906,   907,   908,   909,   910,   911,   912,   913,
     914,   915,   916,   917,   918,   919,   920,   921,   922,   923,
     924,   925,   926,   927,   928,   929,   930,   931,   932,   933,
     934,   935,   936,   937,   938,   939,   940,   941,   942,   943,
     944,   945,   946,   947,   948,   949,   950,   951,   952,   953,
     954,   955,   956,   957,   958,   959,   960,   961,   962,   963,
     964,   965,   966,   967,   968,   969,   970,   971,   972,   973,
     974,   975,   976,   977,   978,   979,   980,   981,   982,   983,
     984,   985,   986,   987,   988,   989,   990,   991,   992,   993,
     994,   995,   996,   997,   998,   999,  1000,  1001,  1002,  1003,
    1004,  1005,  1006,  1007,  1008,    61,    62,    60,   124,    38,
      45,    43,    42,    47,    37,    94,   126,  1009,  1010,  1011,
    1012,    40,    41,  1013,    44,    33,   123,   125,    59,    46
};
# endif

#define YYPACT_NINF -5346

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-5346)))

#define YYTABLE_NINF -3826

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
   37562, -5346, -5346, 91273, -5346, -5346,  2715,  1226, 91273, -5346,
     131, -5346,  1118, -5346, -5346, -5346, -5346,  3227, -5346, -5346,
   -5346, -5346, -5346,   167,   172, -5346,  1149, -5346, -5346,   699,
   77327,   -30,  1068, -5346, -5346, 80997, -5346, -5346, -5346, -5346,
   80997, -5346, -5346, 91273, -5346, -5346,   418, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346,   669, -5346,  1976,   623, -5346, -5346,
   -5346, -5346, -5346, -5346,  1174, -5346, -5346, -5346, -5346, -5346,
     172, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,   649, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346,   830, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, 92007, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346,   360, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346,  1982, -5346, -5346, -5346, -5346, -5346,   308,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346,  1531, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, 91273, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346,  1149, -5346, -5346, -5346,  1509, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346,   649, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, 91273, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346,   583, -5346, -5346,   225, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
    1753, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346,  2222, -5346, -5346,   540,  1855,
    1941, -5346, -5346,  1437, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  9295, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346,  2015, -5346, -5346, -5346,
   -5346,  2330,  1762, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, 45662, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346,   540, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,   204,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346,  1332, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, 92741, 91273,  1428,  1536, 91273,
    2112,  2175, 78061, 91273,  2175, -5346,    95, -5346, -5346,  1967,
   -5346,  1628, -5346,   172,   632, -5346,  1636,  2159,  2508,   629,
    2323,  2444, 91273, 78795,   324,  2175, -5346,  2199,  2175,  2175,
    2175,  2175,  2486,  2175,  2175, 91273, -5346,  2175,  2175,   144,
   99347, 67051, -5346, -5346,   961,  2475, -5346, -5346, -5346, -5346,
   -5346, -5346, 10867,   172, 21670,  2620, -5346, -5346,  2158,  4655,
    1919, -5346,  2456, -5346, -5346, 91273, -5346,  2175, 10867, -5346,
   -5346,  2456, 67785,  1848, 49342, 11049,  2456,   172,  2521, -5346,
    1946, -5346, -5346, -5346, -5346, -5346, 91273, -5346,   649, -5346,
   -5346,  2394, -5346, -5346, 78061, -5346, -5346, -5346, -5346, -5346,
    2684, 21670,   230,  2448, -5346, -5346,  2328, 46396, 78061,  2622,
    2508,  2641, -5346,  1746,  1341, -5346,  2032,  2126,  2508,   358,
    2131,  2508,  2538,  2175,  2175, -5346, -5346,  2774,  2774,  2774,
    2366,  2774, -5346,  2774,  2702,  2075,   349, -5346, -5346,  2070,
   91273,  2622, -5346,  2622, -5346,  2722,  2622,  2622,  2200,  2726,
    2727,   176,  1758,  1533,  1533,  1967, 41258,   323,  2567, -5346,
    2702,  2235,   431,   558,   558,   558,  2235,   540,  2235, -5346,
     475,  1628,  1453, 91273, -5346, -5346, -5346,  2101, -5346, -5346,
   -5346, 91273, 91273,   411, -5346,  2169, -5346,  1268, 70721, -5346,
   91273,  2780, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
    1713, -5346, -5346,  2634,   329,  2263,  2493,  2190, -5346,  2669,
   78061, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  2170,
   91273, -5346, -5346, 21670,  2844,  2159, -5346,  2686, -5346, -5346,
   -5346, -5346, 46396, -5346, 91273, -5346,  2927, -5346, -5346, 99347,
   -5346, -5346,   449, 63381, -5346,  2204,  2515, -5346,  2205,   512,
     532, -5346, -5346,  1300,  1456,  1507, -5346, -5346, -5346,  1521,
   -5346, -5346, -5346, 97879,  1353,  2221, -5346, -5346,  2883, -5346,
   -5346, 81731,   281, 91273,  2872,  2175, 91273, 91273, 91273, 91273,
   91273, 91273, -5346, 78061,  2334, -5346, -5346,  2175,  2175, -5346,
   -5346,  2874, -5346,  2427,  2403,  1694,  2284,  2590, -5346,  2512,
   -5346,  2298,  2375,  2523,  2313,  2329,  2395,   200, -5346,  2347,
   -5346,  1228,  2809,   125,   136,  2821,   178,   194,  2935,  2832,
     370,  1059,   383,  2624,   386, -5346, -5346, -5346,  2888,  2984,
    2411, -5346,  2418, -5346,  2917,  2782,  1128, -5346, -5346,  1134,
    2856,  1278, 46396,100977,100081, 79529,100977,100977,100977, -5346,
   -5346,   232, 91273,100529, 91273, 12135, -5346, -5346, 39056, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, 91273, -5346,
   -5346, -5346, -5346, -5346, -5346,  2024,   429, 11624, -5346,  2430,
   -5346, -5346, -5346, -5346, -5346, 82465, -5346,   261,   272,  2964,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, 27766,  2446,  2451,  2452, 17860,  2461,  2464,  2491,  2504,
    2509,  2284,  2284,  2284,  2522,  2524,  2525,  2526,  2529,  2530,
    2535,  2537, -5346,  2540,  2545,  2548,  2549,  2550,  2551, 22432,
    2559,  2569,  2570, 35335,  2571,  2572,  2573,  2575, 21670,  2522,
    2578,  2579, -5346,  2587,  2588,  2589,  2592,  2593,  2595,  2599,
    2600,  2602,  3232,  2603,  2605,  2606,  2607,  2522,  2608, -5346,
    2284,  2522,  2522,  2616,  2617,  2619,  2626,  2629,  2635,  2637,
    2646,  2647,  2649,  2650,  2651,  2652,  2653,  2655,   210,  2659,
    2667,  2668,  2670,  2673,  2676,  2677,  2678,  2680,  2683,  2685,
    2528,  2689,  2690,  2691,  2692,  2541,  2694,  2695,  2696,  2701,
    2703,  2705,  2706,   213,  2707,  2711,   221,  2718,  2728,  2733,
    2736,  2737,  2740,  2742,  2743, 28528, 29290, 27766, 15574, -5346,
   91273, 93475, -5346, -5346,  9598,  1326,  1764, 27766, -5346, -5346,
   -5346,  3177, -5346,  3268, -5346, -5346, -5346, -5346,  3077,  3132,
   -5346,  3139, -5346, -5346,  3142,  2612, -5346,  3331, -5346, -5346,
   -5346, -5346, -5346,  2633,  2744,  3381,  3426, -5346, -5346,  1411,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346,  2709,  2697, -5346,  3331, -5346, -5346, 73657, -5346,
   10206, -5346,   362, -5346,  2427,  2881,  3287, -5346,  3367, -5346,
    3300, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346,  1848, -5346, -5346, 50086,  3265,  1254, -5346,
     208, -5346,   333,   347, 61913,   348, 62647,   409, 83199,  1146,
   -5346, 71455, -5346,   436, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346,  2745, -5346,  2859,  2746,  3246,  1630,
   -5346, -5346,   263,   869,  2845,   171, -5346,    67, -5346,  1630,
   -5346, 74391,  3361,  1350, -5346,   979, -5346,  3401, -5346, -5346,
    2849,  2838,  2867, -5346,  2594, -5346,  2508, -5346,   270, -5346,
    3361,  1630,  1350, -5346,  3033,  3115,  1081,  3414, -5346,  1414,
   -5346, -5346, -5346,  3402, -5346,  2770, -5346,  3372, -5346, 91273,
   46396, -5346, -5346, -5346, -5346,  2772, 46396, 46396,  1171,   271,
    9598,  2773, 21670, -5346, -5346, 10261, 53062,  2976,   316,   -28,
   -5346, -5346,  1976, 91273, -5346, -5346,   962, -5346,  3200, -5346,
    2781, -5346, 94209,   271,  3431, -5346, -5346, -5346,   995,  3183,
   -5346,  2794, -5346, -5346, -5346, -5346, 46396, 91273,  2508, -5346,
   -5346, -5346, -5346,  2798, -5346, -5346,  3004,  2887, -5346,  2818,
   -5346, -5346,   245, -5346, -5346,  3572, -5346, 91273, -5346,  2622,
   -5346, -5346,  2622, -5346, -5346, -5346,  2622,  2622,  2208,  2622,
   -5346, -5346,  2848, -5346,  3125,  3128,  2669, -5346, 40524, 91273,
    3579, -5346,  2738, -5346, -5346,  2815, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346,  3380,  3562,  3562, -5346, 50830, -5346,
   -5346,  3463,  2567,  3306, 54551,  3452,  3536, -5346,  3361, -5346,
   -5346, -5346,  2165, 91273, -5346,  2165,  2165, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,   540,
   -5346, -5346,   632, 72189, 91273,  2235,   431, 17098,  3561,  3565,
   -5346, -5346, -5346,  2508,   413,  3205, -5346, -5346, -5346, -5346,
    2284,  3604, -5346, -5346, -5346, -5346, -5346,  3567, -5346, -5346,
   46396,  3038,  3217,  3217,  3217,  3571, -5346, -5346, -5346, 70721,
    2175, -5346, -5346, -5346,   329, -5346,  1944, 91273, 46396,  2882,
   -5346, 46396, 21670, -5346, -5346, -5346,  3310,  9598, -5346,  3203,
   -5346, -5346, 46396,  1465, -5346, -5346, -5346,  3567,  3217, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346,  2851, -5346, -5346, -5346,  2851,   101, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  2853,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346,  3404, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346,  2853, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  3244,
    1829,  1658, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  3244,
   -5346,  1658, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346,  2853, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  2855,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346,  3244, -5346,  1658, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  2851, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
    2851, -5346, -5346,  1658,  2851, -5346,  2857,  2853,  3244,  1370,
    1815,  2853, -5346,  2851,  2858,  2851,  2851,  2851,  2851, -5346,
    2851,  3613,  2866, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
     438,  2851,  2851,  2851,  2851,  2864,   273,  2853,   258,   259,
     268,   277,   278,   280, -5346,  2853, -5346, -5346,  3523, 91273,
    3524, -5346,  3307,  1353,  2873,  2875, -5346, 46396,  3599, 46396,
    3529,  2567, -5346,  2884, -5346,  2876, -5346, -5346,  3542, 91273,
   91273, -5346, -5346, -5346, -5346,  2880,  2334, 75125, -5346,  1377,
    3238, 73657, 46396, -5346, -5346,  3489,  3030, -5346, -5346, -5346,
   -5346, -5346, -5346,  2972, -5346, -5346,  2896, -5346, -5346, -5346,
   -5346,  3347, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   73657, -5346, -5346,  3348,  3352, -5346, 70721,  1638, 11967, 93475,
   -5346,  3540, -5346, -5346, -5346,  3402, -5346, -5346, 23194, -5346,
   23956, -5346, -5346, -5346,  3181,   546,   824, -5346, -5346, -5346,
   -5346, -5346,  3638, -5346, -5346, -5346, -5346, -5346, -5346,  3376,
   91273,  3134,  3559,  3538, -5346, -5346, -5346, -5346, -5346,  3383,
    2919,  3518,  2914, -5346, -5346,   248, -5346,  2922, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, 46396, 51574,
   -5346, -5346, -5346,  2918, -5346, -5346, -5346,  2928, 27766, 27766,
   -5346,  3652,  3652,  3652, 21670,  5857,  1488,  3280, 21670, 21670,
   21670,  2336,  2932, -5346, -5346, -5346,   381, -5346,  2933, 21670,
   21670, 36075,  2934,   503, 10312, 21670,  3607,  3607, -5346, 21670,
   21670, 15574,  9947, 21670, 21670, 21670, 93475, 36075,  3386,  2941,
   -5346,  2939,  2361, 21670,  2391, 21670,   514, -5346, 21670, 21670,
   21670, 21670,  2947, 30052,  2948, 21670, 21670, 21670,  2951,  3091,
    3652,  3652, 21670,  2445, -5346, 16336, -5346, -5346, -5346,  3652,
    3652, 21670, 21670,  2455, 21670, 21670, 21670, 21670, 21670, 21670,
   21670, 21670, 21670, 21670, -5346, 21670, 21670, 21670, 21670, 21670,
    1210, 21670, 21670, 46396, 21670, 21670, 21670,  3608, 46396, 21670,
   21670, 21670,  3611, 21670, 21670, 21670,  2960, 21670, 46396, 21670,
   -5346, 21670,  1939,  1939, -5346, 21670, 16336, 21670,  2965, 36815,
   21670, 21670, 21670, 21670, 22432, -5346, 22432, -5346, -5346,  2967,
    1336,  3456,   540, 21670,  2961, -5346, 30052, -5346, -5346, -5346,
   -5346, -5346,   453, -5346, 21670, -5346, -5346, -5346, 21670, 21670,
   24718, 30052,  2971, 30052, 30052,  3581,  1917, 30052, 30052, 30052,
   30052, 30052, 30052, 30052, 30814, 31576, 30052, 30052, 30052, 30052,
   -5346, 78061, 27766, 48598,  2974,  3624, -5346, 93475, -5346,  1609,
    1130, -5346,  2508,  4655, 33097, -5346,  2986, -5346,  3465, 46396,
   -5346,  3612, -5346,  2990,  3646, 73657, 70721,  1638,  3011, -5346,
    1390,   196, -5346, 75125, 91273, -5346, -5346, -5346,  3700, 21670,
   -5346, -5346, -5346, -5346, -5346,  2995,   442,  3001, -5346,  1160,
   -5346, -5346, -5346, -5346, -5346, 91273, -5346, 83933, 52318,  3097,
    3019,  2622, 84667, 91273, 46396, 91273, 94943, 91273, 91273, 46396,
   73657, 46396, -5346, -5346, -5346,  1039,  1630, 91273,  1630,  1350,
    1041,  1630,  3640, -5346, -5346,  1382,  1382, -5346, -5346, -5346,
   -5346, -5346, -5346,  1630, 91273, 91273,  1630, 70721, -5346,  1350,
     493, -5346,  3308,  3101, -5346, -5346, -5346,  3345, -5346, -5346,
    3672,  3029, -5346,  3377, -5346, -5346,  3136, -5346, -5346, 46396,
   -5346, -5346,  1350, -5346,  1350,  1350, 21670,  1630,  1630,  1630,
   -5346, 41992,  3041,  3047, -5346,  3045, -5346,  3049, -5346, -5346,
   -5346,  3403,  3821,  3679,  3053, -5346, -5346,  3618,    27, -5346,
    3475, -5346,  3600, -5346, 21670,  9598, 18622,  3328, -5346, -5346,
    3330,  3332,  3333, -5346, -5346, -5346, -5346,  3482,  3334, -5346,
    2508,  3335, -5346, -5346, -5346,  3065, -5346, -5346, -5346, 78061,
   33097, -5346,  3066, -5346,  3086, -5346,   211, -5346, -5346,  3727,
    3182, 21670, -5346, -5346, 46396,  3570, -5346,  2508,  1746, 91273,
   -5346, -5346,  3807, -5346,  1868, -5346, -5346, -5346,  3191,   358,
   -5346, -5346,  1040, -5346, -5346,  2774,  3269, -5346, -5346, -5346,
   78061, -5346, -5346, -5346, -5346, -5346, -5346, 91273, -5346, 75125,
   70721, 78061,  2622,  2622, -5346, 46396,  2622, 91273, -5346, -5346,
   -5346,  2622,  2622,  2622,  3121,  1467,  3087,  3088,  3090,  3093,
    1058,  3094, 42726,  2429,   294,  3714,  3716, -5346,  3668,  2274,
    3668, -5346, -5346, 42726, 41992,  3102,  3579, -5346, -5346, -5346,
   -5346, 78061,  3100, -5346, -5346,  3096, -5346, 21670,  3813,  3742,
    3463,  1280, 82465, -5346, -5346, -5346,  3446,  3639,   684, -5346,
    3103,  3228, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, 27766,  2529,
   -5346,  9598, -5346, -5346, -5346, -5346, -5346,   196,   242, -5346,
   -5346, -5346,  1408,  3474,  1682, -5346, 78061,  1682,  1471,  1386,
   -5346,  3116,  2508,  1135, -5346,  1135, -5346,  3413, -5346,  3415,
      89, -5346, 46396, -5346, -5346, -5346, -5346, -5346, 46396,  3118,
   -5346,  3302,  3122,  3119,  9598,  3620, -5346,  3310, -5346, -5346,
   -5346, 10867,  3832, 10655,   139,  3174, -5346, -5346, -5346, -5346,
   -5346, 46396, -5346, -5346,  1863,  2333,  3610,  3133,  2900, -5346,
   -5346,  3244,   196,  3244, -5346, -5346,  3083,   166, -5346, -5346,
   -5346,   166, -5346,   389,  3265, 75859,  3244, -5346, -5346, -5346,
   -5346,  3601,  1658,  1140, 76593,  2087, -5346,  3533, -5346, -5346,
   -5346,   166,  2774, -5346, -5346,  3244, -5346, -5346, -5346,  2774,
     166, -5346,  3605, -5346, -5346, -5346,   166,  3244, 99347,  2055,
    1658, -5346, -5346,  1658,   166,   140, 91273,  2055, -5346,  1140,
    3859,  1658,  3244,   166,  3890, -5346,   166,  3691,  3691,  3691,
   -5346, -5346,   334, -5346, -5346,  1353, -5346, -5346, -5346,  3380,
    3230, -5346,  3147, -5346, -5346,   482,  3711, -5346, -5346,  3728,
   91273,  3801, 56775, -5346, -5346,  3732, -5346, 91273,  1377,  3156,
   -5346, -5346, -5346, -5346, -5346,   196, -5346,  3158,   394, 46396,
   46396, 10867, -5346, -5346,  3163, -5346, -5346, -5346,  3655, -5346,
   -5346,    91,  3875, -5346, -5346, -5346, 43460, 43460,  1228,  2809,
   -5346, -5346,  2821, -5346, -5346,  2832, -5346,  1059, -5346,  2624,
   -5346, -5346, -5346, -5346,  1880, -5346, -5346, -5346,  3612, 21670,
   47864,  9598, -5346, -5346, 46396, -5346,  3796, -5346, -5346, 96411,
     513, -5346, -5346,   346, 46396, -5346, -5346, -5346, -5346,  3789,
    3301, 91273, -5346, -5346, -5346, -5346, -5346, -5346, -5346, 91273,
    2170, 91273, 99347, 10867, 10867, -5346, 78795, -5346,  1274,  1390,
   -5346,  3900, 93475, 21670, -5346,  3172, -5346,  3173,  3176,  6064,
    3526, 21670, 21670, -5346,  9290,   549,   522, -5346,  3180,  3187,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  3188, -5346,
   -5346, -5346,  3873,  4033,  3193, -5346, -5346, -5346,  3194,   540,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
    3827, -5346,  5697, -5346, -5346, -5346, 21670,  4091,  4184,  4313,
    3206,  2146,  2187,  4393,  2918,  1896,  3184, 36075, 93475,  3652,
    3197,  6682,  3652,  3198,  4421,  4453,  6734,  6760,  6778, -5346,
     673, -5346,  4491,  4564,  4602, -5346, -5346,  3199,  3207,  1523,
    3652,  3208, 19384, 20146, 20908,  9046,  3210,  3211,  3212,  4653,
    6824,  3652,  3213,  6858,  1906,  6915,  4712,  6946,  4743, -5346,
    1915,  4784,  4884,  3214,  2773,  4946,  7101,  7173,  5041,  5181,
    5572, -5346, -5346, -5346, -5346,  3189,  7353,  7386,  3204,  3219,
    7423,  7430,  7460, 46396,  3220,  7521,  3224,  7585, 46396,  7603,
    7643,  5625, -5346,  7650,  3223,  5824,  2499,  3225,  3229,  7681,
    3233,  5893, -5346, 93475, 91273,  3234,  3231,  2713,  1553,  3236,
    7788,  9947,  9947, -5346, 21670,  3237,   561, 93475,  1483, -5346,
   -5346, -5346, -5346,   253,  1378,  2627,   514, -5346,  3201,  1483,
    3243,  1585, 15574, -5346,  1227,  3938, 30052, 30052,  3245, 30052,
   30052,  1169,   705,   705,  3250,  3250,  1198,   598, 22432,  1169,
   22432,  1169,  3250,  3250,  3250, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346,  3808,  3248,  1851,  3249, -5346, -5346, -5346,
   -5346, -5346, -5346,    43,  3649, -5346,  3437,   332, 21670, -5346,
    3267,  3993,  3996,  3997, -5346, -5346, -5346, -5346, 73657, 73657,
    3254, -5346,  1040,  3609, -5346, -5346,  3903, 75125,  3907, -5346,
    3260, 43460, 43460, -5346,  3261, -5346, 21670,  3257,  3258,  3259,
   97145, -5346,  3914,   196, 75859, -5346,  9598, 73657,   756, 17098,
   91273, 91273, -5346, 83199,  3915,  1259,  3545, -5346,  3270,  3279,
   -5346,   196, 17098,  3264,  1167,   469, -5346,  3281,  3282, -5346,
   -5346, -5346, -5346,  3285, 91273, 91273, -5346, -5346, -5346, -5346,
   91273, -5346, -5346, -5346, -5346, -5346, -5346,  2508, 21670, 91273,
    1630, -5346, -5346, -5346,  1630, 91273,  1630, -5346,  2508,  3928,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
    1630, -5346, -5346, -5346, -5346, -5346,  3453,  3361,  2594,  3640,
   -5346,  1350, 46396,  1630,  1630,  9598, -5346, -5346, -5346, -5346,
    3815,  3380, 18622,  3291,  3290, -5346, -5346, 10867, 91273, 93475,
    4007, 10885, -5346, 78061, 85401, 46396, -5346, -5346, -5346,   491,
   -5346, -5346, -5346, -5346, -5346,  9598,  2448,  2529, -5346,  3298,
    9598, -5346,  3976, -5346, -5346, -5346, -5346,  2508, -5346, -5346,
   10320, -5346, 46396, -5346, -5346, 53806, 53806,  1760, -5346, 95677,
   -5346,  2508,  9598, 46396,  1006,   346, -5346,  4030, -5346, -5346,
    3416, -5346, -5346, -5346,  3304, -5346,  3355, -5346, -5346, -5346,
    3309, -5346,  3962, -5346,   252,   104, 91273,   154,    89, -5346,
   91273, 91273, 46396, -5346, 91273, -5346, 91273,  2622, -5346, -5346,
    2622, 46396, 91273, 91273,  2622, 42726, -5346, -5346, -5346, -5346,
   -5346, 42726, -5346,  1438, -5346,  3521,  1832,  1832, -5346, -5346,
   -5346, -5346, -5346,  3937,  3668,  3668, 42726,  3939,  3110, -5346,
   91273,  4173,   467, -5346, 50830, 91273,  9598, 21670, -5346,  3350,
    3742, -5346,   346, -5346, -5346, 56041,  3662, 56041, 56041, 93475,
    3558, 21670,  3337, 17098, 17098,   252,  2508, -5346,   196,   196,
    3563,  3849,  3852,  3470,  2508,  3860,  3863,  3867, -5346, -5346,
   -5346, -5346, -5346,  2508,  2508, -5346, -5346,   196, -5346,  1882,
   -5346, -5346, -5346, -5346,  3002,  1528, -5346,   196,   196, -5346,
    2408, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  1277, -5346,
     192,  1709, 70721,  3811,  1040,  3933,  3362, -5346, 46396,  4010,
   -5346, -5346, 21670, -5346, -5346, -5346, 10299, -5346,  3387,  3388,
    3389,  3390,  3391,  3392,  3393,  3394,  3395,  3396,  3400,  3406,
    3407,  3408,  3409,  3411,  3412,  3417,  3418,  3419,  3420,  3421,
    3422,  3423,  3358, -5346, -5346,  3410, -5346, -5346, -5346, -5346,
     196,   196,   196,   196, -5346,  2996, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346,  3637,  2721, 91273,  4004,  3385,  3398,
    3425,  3428, -5346, -5346, 91273, -5346,  1927,  3847,  3878, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346,   196, -5346, -5346,  1942, -5346,
   -5346,  1989, -5346, -5346, -5346, -5346, -5346,  2001, 66317, -5346,
   21670, 21670, -5346, -5346, -5346, -5346, -5346,  2055,  2055,  3405,
   -5346, -5346, -5346, -5346,  3859, -5346,  3424, -5346,  3427, -5346,
   -5346, -5346, 61179, -5346, -5346, -5346, -5346,  2712, -5346,  3766,
   -5346,  1832, 91273,  3886, 56775, -5346,  3619,  4024, -5346, -5346,
   41992, -5346,  3429, 46396, -5346, -5346, 75125, 78061, 73657, -5346,
   -5346, -5346,  3430,  1274, 12323, -5346, -5346,  4156, 70721,  3868,
   -5346, -5346,  3438, -5346,  3442,  3910,  3912, -5346, 93475, -5346,
   -5346, -5346,  9598, -5346, -5346,  3432, -5346, -5346,  3618,  3562,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346,  3447,  3696,  3820, -5346, -5346, -5346,
   -5346, -5346, -5346,  4053, -5346, -5346, -5346,  2011,  3561, -5346,
   -5346, -5346,100977,100977,100977, -5346,  3785, -5346, 98613, 21670,
   -5346,  5924, -5346, 21670, -5346, -5346, 21670, -5346,  9598,  9336,
  101701, 76593, -5346, 76593,101701, 21670, -5346,  3435, -5346,  4060,
    4061, -5346, -5346, -5346, 21670, -5346, 21670, 21670,  5949, 21670,
   21670, 21670, 21670, -5346, 21670, -5346, 21670, 21670, -5346, 30052,
   -5346,  3448,  3454, -5346, -5346,  3457, -5346, 21670, 21670, -5346,
   -5346, -5346, 21670, 21670, 21670, 21670, -5346, -5346, 21670, 21670,
    3459, -5346, 21670,  9357, 21670,  9394, 21670,  9464, 21670, -5346,
   -5346, -5346, 25480, -5346,  3460, -5346, -5346, -5346, -5346, 21670,
   -5346, 21670, -5346, 21670, 21670, 21670, -5346, 21670, -5346, -5346,
   21670, 21670, 21670, 21670, -5346,  4031, 21670, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, 21670,
   -5346,   330, 26242, -5346, 21670, 21670, 21670, -5346, -5346, 21670,
    3466,  3467, -5346, 91273, -5346, 21670,  2436,  2681,   346,  3472,
   -5346, -5346,  3477,  3481,  2773, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346,   503, 30052,  3161, 30052,  3938,  2181, 15574, -5346,
    1264,  3938,  9947,  9947, 91273,  4183,  3476, -5346, 21670, 93475,
   21670,  3479,  3480, -5346,  3478, 30052, -5346, -5346,  3484, -5346,
    2290,  2681,  3568,  3929, -5346,  9598, 33097,  3978, -5346, 46396,
    3983,  4035, -5346, 46396,  3693, -5346, 73657, 70721,  4144,  4145,
   -5346,  9598, -5346,  3493, -5346, -5346, -5346,  3494, -5346, -5346,
   -5346, -5346, -5346,   473, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, 21670, 73657, -5346, -5346,   196, -5346,  3503,
    3504, -5346, -5346,   196,   196, 17098, -5346, 38309, -5346, -5346,
     630,  3791,  4054, -5346, -5346, 91273,  1160, 91273, -5346, 52318,
   52318, 86135,   106, -5346, -5346, -5346, -5346,  9598, -5346, -5346,
   -5346, -5346, -5346, -5346,  3516, -5346, -5346, -5346,  4250, -5346,
   -5346,  3928,  2567,  1350, -5346, -5346, 36815,  2063, -5346, -5346,
   -5346, 18622, 12342, -5346,  3509,  3508,  3512,  3506,  3969, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  3515,
   -5346, -5346, 18622,  3532, -5346, -5346, -5346,  3430,  1613,  3534,
    3517, -5346, -5346, -5346, -5346, -5346, -5346,   223,   256,  1299,
    2567, -5346, -5346,   153, -5346, -5346, -5346, -5346, -5346,  1001,
   -5346, -5346, -5346, -5346,  1868,  2331, -5346,   234,   346,  3757,
   -5346, -5346,   284,  1017,  1017,  4097,   104,  3971, -5346,  3811,
    4172,  4100,  4103, -5346,  3002, -5346,  2106,   292, -5346, -5346,
   -5346, 91273, -5346, -5346,  -102, -5346, 46396,  2738,  2738, -5346,
    1832,   222, -5346, 30052,  4252, -5346,  4021, 42726,  4149,  4150,
   -5346, 42726, -5346, -5346,  2029, -5346, -5346, 72923, -5346, -5346,
   -5346,  9598,   303,  2252, 21670, 91273, -5346,  3350, -5346, -5346,
   -5346, 56041, -5346, -5346, -5346,  1280,  3531,  2252,  3537, -5346,
   -5346, -5346, -5346, 75859, 72923, -5346,  3916,  3917,  1948, -5346,
   -5346, -5346, -5346, -5346, -5346,  3783,  1386, -5346,   196,   196,
   -5346,   416,   196, -5346, -5346,   266, -5346, -5346,   388,   209,
    3002, -5346,  2508,  2508,  2508,  2508,   346,  2508,  2508,  2043,
   -5346,  3783,  3783,  1135, -5346,  1090, -5346, -5346, -5346, -5346,
     290, -5346, -5346, 78061, -5346,  4278,  4280, -5346,  4282, -5346,
   -5346,   891, -5346,  2648,  1126, -5346,   113, -5346,  4085, 91273,
    4266,  3362, -5346,   450,  9598, -5346,  4043,  3551,  3554,   346,
    3560,   346,   346,  2508,  2508,  3516,  2508,   346,  2508,  2508,
    2508,  2508,  2508,  2508,  2508,   346,  2508,   903,  2757,  2508,
     346, 10655, -5346,  2508,  2681,  3783,  3783,  2333, -5346,  4197,
     196, -5346,  2577, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346,  2060, 64115, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346,  4303, -5346, -5346, -5346,  1140,  2774,  1140,
   -5346, 99347, -5346,  2853, -5346, -5346, -5346, -5346, -5346, -5346,
    9598,  9598, -5346, -5346, 91273, -5346,  4304, -5346, -5346, -5346,
    9299, -5346, -5346, -5346,  3880, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346,  3575, 41992,   508, -5346, 55296,  4101,
    2567,  3578, -5346,  1040, -5346, -5346, -5346, -5346,  1480,  4168,
   -5346,  3574, 21670, -5346,   455,  3768,  3593, 57509, 70721, 70721,
   -5346,  2937, -5346, 46396, -5346,  4216, -5346, -5346, -5346, -5346,
   -5346, 21670, -5346, -5346,  2170,  3489, -5346, -5346, -5346, -5346,
   -5346,  4014,100977,  3580,  9598, 21670,  9598,  9598, 21670,  2851,
    2851,  2853,  2864, -5346,  4271, -5346,  4215,  2851,  2851, -5346,
    2851,  4217,  2851,  2851,  3597, -5346, -5346, -5346, -5346, -5346,
    3602,  3603,  3606,  2773, -5346, 21670, 21670,  7884,   138,   138,
   21670,  5970,  5986,  3202, -5346,  7923,  7935,  8079,  1221, -5346,
   -5346,  8121,  8133,  8169,  8202,  6029,  8212,  4633,  3397, -5346,
    9598, 21670,  9598, 21670,  9598, 21670,  9598, 22432,  8256, -5346,
    2111,  9925, -5346,  2114,  9966,  3750,  8266,  6183,  2117,  3760,
    8295,  8347,  2164, -5346,  2808,  4342,  2173, 22432,  8410,  8428,
    6250,  6298,  8485, 93475, 91273,  3598,  8515,  3615,  3615,   485,
   -5346,  3614, -5346, -5346, -5346,  3616, -5346, 21670, 21670,  3623,
    1483, -5346, 21670,  3938, 30052,  3812, 30052, -5346, -5346,  3808,
   -5346, 21670, -5346,  4176,  3626, -5346,  9598, -5346, -5346, 91273,
    3627,  1764, -5346, 21670,  3516, -5346, -5346,  4308,  3621,  3625,
    3631,  3484, -5346, 73657, -5346, 46396, -5346,   325, -5346,  3380,
    4255,  3158, -5346, 70721, 70721, -5346, 80263, -5346, 58243, 91273,
   91273, -5346,  9598, -5346, 17098,   756,  4352,  4354, -5346, -5346,
   -5346, -5346,   117,  4163, -5346, -5346, -5346, -5346, 17098,   196,
   -5346,   196, 17098,  3282, -5346, -5346, -5346, -5346,  2846, -5346,
    3361, -5346, -5346, -5346,  1630,  3622, -5346,   196,   463, -5346,
   18622,  3632,  3633, -5346,  4232, -5346,   503, -5346,  4102, -5346,
   -5346,  3635, 86869, -5346,  3641, -5346,  4185, -5346, -5346,  6546,
   53806, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346,  3361,  3871, -5346, -5346, -5346,  3658, -5346,  3644,
    3738,  3739, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, 46396,  4224, 70721,  1126,  4025, 46396, 46396, 10368,  6635,
    3002,  2106, -5346, -5346, -5346,  2508, -5346, -5346, -5346,   292,
   -5346,  3651, 91273, -5346,  3362,  3659,   603,  3659, -5346, -5346,
   -5346,  1764,  1832,  1832,  2495,  4132, 42726, 42726,  3541,  4138,
   21670,  3663, -5346, 91273, -5346,   369, -5346,  4067, -5346, -5346,
   21670, -5346, -5346, -5346, -5346,  9598,  4384,  3664, -5346, -5346,
   -5346, -5346, 21670, -5346, 21670,  3665,  3666, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346,   330,   330, -5346, -5346,   330,   330, -5346,
   -5346, -5346, -5346,   330,   330, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346,  1528, -5346, -5346, -5346,  1277,
   -5346, -5346,  4411,  1369, -5346,  4243, -5346, -5346, -5346, -5346,
     127,   346,   346,   346,  2757,   568, -5346,  2648,  1883,  4006,
   -5346,  6638,  1976,  1799,  4165,  2142, -5346,  2180, -5346,  4395,
   -5346,   293, -5346, -5346,   206,   320, -5346,   391, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, 91273,  3783,  2721, -5346,
   -5346, 91273,  2858,   287, -5346, -5346,  3676, -5346, -5346, -5346,
   -5346, -5346, -5346, 61179, -5346, -5346, 56775,  2567, -5346, 91273,
    4017,  4206, -5346, -5346, -5346, -5346, -5346, -5346,   503, -5346,
    9598, -5346,  4322, -5346, -5346, -5346, -5346,    89,    89, -5346,
   -5346, -5346, -5346,   325, -5346, -5346,  4216,  3957, -5346,   495,
    9598, -5346, -5346, -5346, -5346, -5346, 91273,  3202,  9598, -5346,
   -5346, -5346, -5346,  2851, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346,  3682,  9947,  9947, -5346,  4394,
    4213,  4299,  8533, 21670, 21670, -5346, 21670, -5346, -5346, -5346,
     359,  3692,  4159, -5346, -5346, -5346, -5346, 21670, -5346, 21670,
   -5346, -5346, 21670,  9598,  9598,  9598,  9947, -5346, -5346,  1922,
   -5346, -5346,101701, -5346, 21670, -5346, 21670, -5346, 21670, -5346,
   21670, -5346, -5346, -5346, -5346, -5346, -5346, -5346,   302,  9947,
   -5346, -5346, 21670, 21670, -5346, -5346, -5346, 91273, -5346,  2681,
    3697,  3974, -5346, -5346, -5346,  2681,  3837, -5346, -5346,  2681,
     346, -5346, -5346, -5346,  2188,  1483, -5346, 21670,  3938,  4273,
    3701,  4410,  3704, -5346, 80263, -5346,  3705,  3707, -5346, -5346,
   -5346,  9947, -5346,  4314,  4274, -5346,  2681, 91273, -5346, -5346,
   -5346, 36815,  4174, -5346, -5346, -5346,  4101,   337, -5346, -5346,
   70721,  3260,  3260, 87603, -5346, -5346, -5346, -5346,  1879,   196,
     196, 17098, -5346, -5346,  3718,  3720, 17098, 17098, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346,  3361, -5346, 36815,  2567, 18622, -5346, -5346, -5346, 18622,
   -5346,  3723, -5346,  4102, -5346, 88337, -5346,  3724, -5346,  3725,
   -5346,  1743,  4057,  4331, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  3730,
   -5346, -5346,  2508,  1779, -5346, -5346, -5346, 46396, -5346, -5346,
    3758, -5346, -5346, 39790,  4340,  3775,  4098, 46396,   196,   196,
     196,   196,   196,   196,   196,   196,   196,   196,  4099,   196,
     196,   196,   196,   196,   196,   196,   196,   196,   196,  1308,
   91273,   196,   196, -5346, -5346,  4301, -5346,  7165, -5346, -5346,
   -5346, -5346,   196, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346,   556,  4315,  4461,  3746, -5346, -5346,  4279,
   -5346, -5346, -5346, -5346,  3853,  4281,  3362, -5346, -5346, -5346,
    4234, -5346, -5346, -5346,  4236,  9598, 91273, -5346, -5346, -5346,
    1215,  2214,  4369,  2252,  3765, 91273,  2252,  9598, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346,   487, -5346, 78061, -5346, -5346, -5346, -5346, -5346,
    4508,  4510, -5346, -5346, -5346, -5346,  3956,  1182,  4808,  4169,
    4332,  4169,  4334,  4265,  2810,   196,  4337,  4484, -5346,   534,
     196,  4339,  4396,  3856,  4399,  4345, -5346,  3861,  4169,  4348,
    3975,  4350,  4351,  4353, -5346, -5346, 11662, -5346, -5346, -5346,
   -5346,   162, 44194, -5346, -5346, -5346, -5346, -5346,  3967, 21670,
   21670,  4367, 91273,  4368, -5346,  4190, -5346, 91273, -5346,   503,
   -5346, -5346, -5346,  4092, -5346,  2191, -5346, -5346,  2201, -5346,
   -5346,  2230, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  4326,
   91273, -5346, -5346,  3429, -5346,  4448, -5346,  4143,  3011, -5346,
   -5346,   540,  4001,  4272,  4272, -5346, -5346, -5346,  4383, -5346,
   -5346, -5346, -5346,  4432,100977,  4167, -5346,  1140, -5346,  1140,
    1140, -5346,  3816,  3817, 21670,  2774,  4299, -5346,  3818, 56041,
   -5346, -5346,  8551,  6330,  2233,  4094,  4052, -5346,  3992, -5346,
    8561,  8707,  8729,  1689,  2853, -5346, -5346, -5346, -5346,  4450,
    2851, -5346,  4513, -5346,  2851, -5346, -5346, -5346, -5346, -5346,
   -5346,  3831,  8762,  9598,  9598,  8897, -5346, -5346, -5346,  2250,
    1824,  8904,  8941, -5346, -5346, -5346,  3834, -5346, -5346,   505,
   -5346,  3833, -5346,  2257,  4545,  1564, 21670, -5346, -5346, -5346,
   91273,  3934,  1086, -5346,  2264, -5346, -5346,  3839,  3840,  3841,
   -5346, -5346, -5346,  3835,   540, 36815, -5346, -5346,  3260, -5346,
   -5346, 58977, -5346, -5346, -5346, -5346, -5346, -5346, -5346, 17098,
   17098, -5346, -5346,  3728, -5346, -5346, -5346, -5346,  4220, 61179,
   -5346, -5346,  3845,  3844, -5346, -5346, -5346, 86869, -5346,  2271,
   -5346, -5346,  4570, 18622, -5346, -5346,  3850, -5346, 78061,  3855,
    3862, 47130,  2217, 91273,  2291, -5346, -5346, -5346, -5346, -5346,
    1703, -5346,   468,  2622,   491,   491, -5346,  3848, 46396, -5346,
     196, -5346,   309,   339,   340,   344, -5346,  3516,   346,   346,
    2508,  2508,   196,   346, 78061,  1864,   346,  3516,  3516,   345,
    2508,  1614,   309, -5346, -5346, -5346,   346,   309,   228, -5346,
   -5346, 11689, -5346, 11662, 68519, -5346,   307, 91273,  2582, -5346,
   -5346,   444,  3985, -5346,  3869, 91273, -5346,  2508, -5346,  4568,
   21670,  3864, 21670,  3874,  2292, -5346,   491, -5346,   491, -5346,
    1215,  4560,  4575,  4517,  4580,  2214, -5346,  2348, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346,  3877, -5346, -5346, -5346, -5346,
    4207, -5346,  4620, -5346,  4328, 44928,  2622, -5346,  1900,  3919,
   -5346, -5346, -5346,  4515,  2872,  1149,  2872, 88337,   467,   454,
    4499,  2175,  1991,  3923,  4440,  2872,  2872, 89071,  1149, 36815,
   -5346, -5346, -5346,  2872, -5346,  2872, 46396, 89805,  1149, -5346,
   -5346, -5346, 91273, -5346,  2872,  1149, -5346,  1149,  1149, 88337,
   -5346, 11686, -5346, -5346, 39790,  1766, -5346,  9598,  9947,  4283,
   -5346, -5346,  3999,  2508,  4245, -5346, -5346,  4355, -5346, 91273,
     298, -5346,   346, -5346,   346, -5346,   346, -5346,   288, -5346,
   30052, -5346,  3261, -5346, -5346,  1598, -5346, -5346,  4244,  4101,
    4387, -5346,100977, -5346, -5346, -5346, -5346, -5346,  3892,  2252,
   -5346,  3904, -5346, -5346,   832, -5346, 21670, -5346,  4135, -5346,
    4239, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
    1140, -5346, -5346, -5346, -5346,  3516, -5346, -5346, -5346,  3906,
   -5346,   346, -5346, 21670, -5346, -5346,  3908,  9899,  2252, -5346,
   10179, -5346,  3929,  3901, 91273, -5346,  4274, -5346, -5346, 36815,
   59711,  3909,  3905, -5346,   196, -5346, -5346, 17098, 17098, -5346,
   -5346,  4024, -5346, -5346,   100, -5346, 91273, -5346, -5346,  3516,
    4284, -5346,  2302, 91273,  3913,  4108, 91273, 91273, -5346, -5346,
    3924, 91273, -5346, -5346, -5346, 39790,  3926,  4530,  4534,   491,
   -5346,  2622,  4470, 47130, -5346,  2622,  2622, 64849, 91273,  3927,
    2508, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
    3935, -5346, -5346, -5346, -5346, -5346,  2508, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346,  4652, -5346,  4301, -5346, -5346, -5346, -5346,102248, -5346,
   -5346, -5346,  4285,   307, -5346,  2275,  3936,  3941, -5346, -5346,
   -5346,  4603,  2106, -5346, -5346, -5346,  4512,  1799, -5346, -5346,
    3943, -5346, 66317, -5346, -5346, -5346,  9598, 91273,  9598, 91273,
   -5346,  4585,  4585, -5346,  2774,  2774,  4647,  2774, -5346,  4648,
    4649,  2348, -5346,  4689,  1182,  4318,  1883,  1976,  1149,  1976,
    4596, -5346, -5346, 47130, 88337, 47130, -5346, 72923, 47130,  2872,
   91273, -5346,  4597, -5346,  4567, 47130, 47130, -5346, -5346, 88337,
    3950, -5346,  2252,  2620, 91273, 47130, -5346, -5346, -5346,  2681,
    4416, 47130, 88337, -5346, 88337, -5346,  2850,  1625, -5346,  3960,
    3955, 91273, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  1151,
   -5346, -5346,  2311, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
     168, 91273, -5346,  1339,  4157, -5346,  1598, -5346, -5346, -5346,
   46396, -5346, 21670, -5346, -5346, 56041, 56041,  9161, -5346, -5346,
   -5346,  3964, -5346,  3965,  3531, -5346, 10147,  4093,  3993,  3996,
    3997,  4147,  4305, -5346,  4148, -5346, -5346,  3972, 30052, -5346,
    1617, -5346, -5346, -5346, -5346,  3963, -5346, 36815, 18622, -5346,
   -5346, -5346, 93475, -5346, -5346, -5346,  4388, -5346,  2319,  2252,
    3980, 91273,  3982,  2324,  2339, 91273,  3984, -5346, 21670,  2622,
   -5346, -5346, 47130, 46396, -5346,  4455,  -124, 47130, 47130, -5346,
    3977,  4686, -5346, -5346,  3987, -5346, -5346, 46396, -5346, -5346,
     337,   228, -5346, -5346,  3981, -5346, -5346, -5346, -5346, -5346,
   -5346,102248,   311, -5346, -5346, -5346, -5346,  3989, -5346,  3995,
   -5346, -5346, -5346,  4557, -5346, -5346, -5346, 65583, -5346, 91273,
   -5346, -5346, -5346,  4367,  2582, 91273, -5346, 91273, -5346,  2345,
    2353,  1667, -5346, -5346, -5346, -5346,  2774, -5346,  2774,  2774,
   -5346,  3998, -5346, -5346, -5346,  4656, -5346,  4658, -5346,  1632,
   -5346, 47130,  1863,  3700, -5346, 47130,  3844, 91273, -5346, -5346,
    1480, -5346, 36815, -5346, -5346,  4490,  4501, -5346,  4509,  1766,
   -5346, 91273, -5346, -5346, -5346,  4110, -5346, 10867,  4211,  4720,
    4722, -5346, 91273, 90539, -5346, -5346,  4780, 30052, -5346, -5346,
    4639, -5346,  3380,  2252, -5346, -5346, -5346, -5346, -5346,  1430,
   -5346,  4747,  1484, -5346, -5346,   257, -5346, -5346, 91273,  4026,
    4112, -5346, -5346,  4095, -5346, -5346,  1901, 60445, -5346, -5346,
   -5346,   115, -5346, -5346,  1040, 91273, -5346,  4771,  4028,  1528,
    1040,  1040,  4032, 91273,  9183, 47130,  4455,  -109,  4037,  1017,
   -5346,  1017, -5346, -5346,  1857, 66317, -5346, -5346,  9259, 91273,
    4039,  4792, -5346,   201,   306, -5346,  1950,   311, -5346, -5346,
   91273, -5346, 91273, -5346, 91273, -5346,  2858,   297, -5346, -5346,
   91273, 78795, -5346,  2142, -5346,  2106, -5346, -5346, -5346, -5346,
   -5346, -5346,  4748, -5346,  4749,  4044,  4046, -5346, -5346, -5346,
   -5346, 47130,   -83, -5346,  4723,  4725,  1766, -5346, -5346, -5346,
   -5346, -5346,  1149, -5346, 91273, 47130, 46396, -5346, -5346,  3844,
    1001, 21670,  4404, -5346, -5346,  4254,  4256, -5346, -5346,  2357,
   -5346, -5346,  4111,  1764,  4537, -5346, -5346, -5346, 10147, -5346,
   -5346,  4195,  2041, -5346,  2365, -5346, -5346, -5346,  2681, -5346,
    4068, -5346,  4420,   196,   196,  4427,   196,   196,   196,   196,
    4069,  1901, -5346,  4419, -5346, -5346, -5346,   515,  2252,  4071,
   91273,  4072,  2380,   471,   415, 91273,  4075, -5346, -5346, -5346,
    1017, 91273,  4669, -5346,  4079, -5346,  4080,  4081, -5346, -5346,
    4697,  2508, -5346,  4164, -5346,  1857, -5346, -5346, -5346,  4125,
    4703,  4665,   196, -5346, 78061, 32338, -5346,  4571, -5346,  4531,
    4765, -5346,  4814,  9488, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346,  4089, -5346,  4090, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346,  4624, 91273, -5346, -5346, 46396,  4190, -5346, -5346, -5346,
   86869, 86869,  4686,  2681,  4274, -5346, -5346, 32338, -5346, -5346,
   -5346, -5346, -5346,  4721, -5346,  9598, 21670, -5346, -5346, -5346,
   -5346, 90539, -5346, -5346,   467, -5346, -5346, -5346, -5346, -5346,
   91273, -5346,  4104, -5346, -5346,   132,   196,  2508,  2508,   196,
    3010,  3010,  2681, 78061,  4182, -5346, -5346,   196,  1017,  2508,
     196,  1017, -5346,   448,   515, -5346, -5346, -5346,   196, -5346,
   -5346,  1591,  1040, -5346,  4291,   448,   471, -5346, -5346,   448,
     415, -5346, -5346,  4105, 91273,  4113,  4114, -5346,  2383, -5346,
    1084,  4676, 91273,  4116, 91273, 91273, -5346, -5346, -5346, -5346,
   -5346, -5346,  4457, 69253, -5346,  2757,  2757, 15574, -5346, -5346,
   -5346, -5346, -5346, -5346,  2744,  4698, -5346,  4152,  1282,   196,
   -5346,  2574, -5346, -5346, -5346, -5346,  4469, -5346,  3651,  3659,
   -5346,   299,  4548,  4768,  4479, -5346,  4124,  2393, -5346, -5346,
    2431, -5346, -5346,  4126,  9598, -5346, 36815, -5346,  4112, -5346,
   -5346,  2440, -5346, 27004, -5346, -5346, -5346,  2508, -5346, -5346,
    2508, -5346, -5346, -5346, -5346, -5346,  2459, -5346, 78061, -5346,
   -5346,   346, -5346, -5346,  4729,  4572, -5346, 69987,  4323,   515,
    2584, -5346, -5346, -5346, -5346, -5346,  4127, 91273, 91273,  4131,
   -5346, 91273, -5346, -5346, -5346,  1482, -5346,  2467, 91273,  2471,
    2478, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  4133,
    4136, -5346,  1063, -5346, -5346,  2574, -5346, -5346, -5346, 91273,
   -5346,  4663,   472, 91273, -5346, -5346, -5346, -5346, -5346, -5346,
    4274,  4134, -5346,   196,  4662, -5346, -5346,  4104, -5346,  4140,
   -5346,  1764, -5346, -5346, 78061, -5346,  4182, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346,   448, -5346, -5346,  2494,
    4028, 91273, -5346,  1283,  1283,   515,  2507,   471,   415, -5346,
     401, -5346,  1594,  1594,  1472, 91273, 91273, -5346,  2582, -5346,
   -5346, -5346,  4903, -5346, -5346, -5346,  2517, 36815, 18622,  4454,
    4067, -5346, 27004,  4151,  1901, -5346, -5346, -5346,  4470,  4154,
    4028, -5346, -5346,  2059,  4598,  4732,  4733, -5346,   515, -5346,
   -5346, -5346,  4162, -5346,  1594, -5346, -5346, -5346, -5346, -5346,
    1389, -5346, -5346, -5346, -5346, -5346,  4222,  4511,  4827, -5346,
   -5346, -5346,  4878,  4369, -5346, -5346, -5346, -5346,   515,  4180,
   -5346, -5346, -5346,  4657,  4846, -5346, -5346, -5346, -5346,  1389,
   -5346,  2582, -5346, -5346,  4312,  2774,  4815, -5346,   515,  1283,
    1283, -5346, -5346, -5346,  4925,  4186, -5346, -5346, -5346,  1702,
    1275, 33846,  4705, -5346, -5346, 78061, -5346, -5346, -5346, -5346,
   78061, -5346,  2520, -5346, -5346, 36815, -5346, -5346, 10867, -5346,
   -5346, 34595,  4187, -5346,   196, -5346, -5346, -5346, 36815, -5346,
   -5346, 18622, -5346, -5346
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  3614,     2,     0,  2517,  2518,  1070,  2311,     0,   417,
       0,  1295,   669,  3822,  2156,  2305,  2304,  2079,   457,   215,
     368,  2081,  2377,     0,     0,   453,  1311,   810,   564,     0,
     314,     0,     0,   460,  2084,   312,   215,  1360,  3259,  2205,
       0,  3364,  2144,     0,  1358,   455,  2475,  2720,  2768,  2769,
    2798,  2625,  2895,  2917,  2944,  2702,  2701,  2704,  2703,  2705,
    2706,  2707,  2708,  2709,  2710,  2598,  2711,  2712,  2713,  2715,
    2714,  2716,  2717,  2718,  2599,  3519,  3615,  2600,  2674,  2719,
    2676,  2675,  2721,  2601,  2602,  2722,  2723,  2724,  2725,  2604,
    2603,  2726,  2728,  2727,  2677,  2678,  2729,  2730,  2731,  2733,
    2605,  2606,  2607,  2608,  2609,  2732,  2610,  2734,  3524,  2735,
    2736,  2611,  2737,  2738,  2739,  2740,  2742,  2741,  2743,  2744,
    2746,  2747,  2748,  2745,  2749,  2750,  2752,  2751,  2680,  2753,
    2679,  2754,  2612,  2755,  2756,  2757,  2758,  2759,  2760,  2761,
    2762,  2763,  2764,  2049,  2765,  2766,  2767,  2789,  2770,  2772,
    2771,  2681,  2773,  2774,  2775,  2777,  2776,  2778,  2780,  2613,
    2614,  2615,  2779,  2781,  2782,  2783,  2784,  2785,  2787,  2786,
    2790,  2792,  2793,  2682,  1311,  2617,  2618,  2788,  2791,  3674,
    2794,  2795,  2796,  2619,  2671,  2797,  3366,  2800,  2799,    84,
    2801,  2621,  2802,  2803,  2804,  2805,  2806,  2808,  2810,  2807,
    2811,  2812,  2818,  2622,  2809,  2813,  2814,  2815,  2816,  2817,
    2819,  2683,  2820,  2822,  2821,  2823,  2824,  2825,  2826,  2827,
    2672,  2828,  2829,  2830,  2843,  2844,  2834,  2835,  2837,  2838,
    2841,  2836,  2842,  2847,  2846,  2848,  2849,  2850,  2851,  2852,
    2845,  2832,  2839,  2840,  2833,  2853,  2854,  2831,  2855,  2857,
    2856,  2858,  2684,  2859,  2860,  2861,  2862,  2863,  2864,  2865,
    2866,  2868,  2867,  2869,  2870,  2871,  2872,  2873,  2668,  2874,
    2685,  2686,  2875,  2878,  2876,  2877,  2879,  2880,  2885,  2886,
    2887,  2882,  2881,  2883,  2884,  2687,  2688,  2689,  2888,  2889,
    2890,  2891,  2893,  2892,  2624,  2623,  2894,  2626,  2896,  2897,
    2627,  2898,  2900,  2899,  2670,  2628,  2901,  2902,  2904,  2903,
    2629,  2630,  2631,  2905,  2906,  2907,  2908,  2909,  2910,  2911,
    2912,  2913,  2914,  2915,  2916,  2690,  2691,  2918,  2919,  2920,
    2922,  2921,  2923,  2924,  2925,  2926,  2927,  2928,  2929,  2632,
    2930,  1311,  2931,  2932,  2933,  2633,  2935,  2934,  2634,  2936,
    2937,  2938,  2939,  2940,  2669,  3524,  2941,  2942,  2943,  2692,
    2945,  2946,  2947,     0,  2948,  2949,  2950,  2635,  2951,  2952,
    2693,  2673,  2636,  2953,  2955,  2389,  2700,  2954,  2638,  2639,
    2956,  2957,  2958,  2637,  2959,  2640,  2960,  2961,  2963,  2962,
    2964,  2965,  2966,  2967,  2641,  2968,  2969,  2642,  2970,  2643,
    2971,  2972,  2973,  2974,  2976,  2975,  2977,  2978,  2979,  2980,
    2981,  2982,  2984,  2986,  2985,  2983,  2987,  2988,  2694,  2989,
    2644,  2695,  2995,  2996,  2696,  2990,  2991,  2992,  2993,  2994,
    2185,  2997,  2998,  2999,  2647,  3000,  3001,  3003,  3002,  2645,
    2646,  3004,  3005,  2651,  3006,  3007,  3013,  2697,  2698,  3008,
    3009,  3022,  3010,  3012,  3011,  3015,  3014,  3016,  3017,  3675,
    2648,  3018,  3019,  2649,  3020,  2650,  3021,  2699,     0,     0,
       3,  3616,    22,     0,    44,    27,    32,    17,    21,    16,
      46,    59,    52,    29,  3809,  3810,  3812,    42,  3555,    41,
      11,    62,    63,    19,    49,    12,    15,    18,    40,    48,
      36,    43,    56,    57,  1381,  1357,  1385,  1356,  1352,  1348,
    1367,  1368,  1369,  1375,    25,    26,    33,    50,    67,    23,
      64,    60,    24,  2311,    13,    28,    14,    51,    45,    37,
      61,    68,    38,     0,  3678,  3672,  3670,  3673,  3668,  3669,
    3671,    58,    39,    66,    31,    53,    30,     9,    10,    20,
      54,    55,    47,    69,    34,    65,    35,     8,  3679,     0,
    3617,  2067,   165,  3521,  3811,  2568,  2599,  3626,  2600,  2602,
    2655,  2603,  2658,  2659,  2652,  2612,  2660,  3627,  2615,  2616,
    2656,  2566,  2619,  2661,  2620,  2622,  2653,  2654,  2662,  2657,
    2631,  2663,  2633,  2664,  2665,  2666,  2641,  2642,  2667,  2646,
    2567,  2650,  2522,  2533,     0,  2534,  2563,  2561,  2565,  2559,
    2564,  2557,  2558,  2562,  2560,  1118,     0,     0,     0,     0,
       0,  2077,     0,     0,  2077,  1204,  1425,  3553,  3554,  3555,
    1312,     0,  1313,     0,     0,   239,   223,   387,   129,     0,
       0,     0,     0,  3615,  2180,  2077,  2053,  2077,  2077,  2077,
    2077,  2077,     0,  2077,  2077,     0,  2080,  2077,  2077,     0,
       0,     0,   387,  2087,  2379,     0,  2399,  2400,  2394,  3354,
    3355,  3349,   370,     0,     0,     0,  2278,  2277,     0,     0,
     299,   311,   314,   307,   310,     0,   215,  2077,   370,  2087,
     313,   314,     0,  1390,     0,  2283,   314,     0,  2154,  2393,
       0,   387,  2476,  2473,  2350,  2352,     0,  2348,  3524,  1496,
    1495,     0,  3818,  3820,     0,  2523,  1290,  1322,  1248,  3525,
    3526,     0,    76,    79,  2316,   336,     0,     0,     0,   667,
       0,     0,  1256,     0,  3526,  3536,  2391,     0,   129,  1229,
       0,   129,  2188,  2077,  2077,  3597,  3598,     0,     0,     0,
    3592,     0,  3599,     0,  1385,     0,  1371,     1,     5,     0,
       0,   667,  1024,   667,  1025,     0,   667,   667,     0,     0,
       0,     0,  3560,  3553,  3554,  3555,     0,  2035,  1902,  1386,
    1385,  1982,  1986,  3541,  3541,  3541,     0,     0,  1982,  1376,
    2784,  2618,  2900,     0,  2296,  2310,  2294,  2511,  1354,  1350,
    3680,     0,     0,  2610,  1073,  1119,  1078,     0,     0,  1080,
       0,     0,  1095,  2539,  2538,  2537,  1092,  1091,  1090,  1088,
       0,   528,   215,     0,  1206,     0,     0,     0,  3561,  3560,
       0,  1267,  2298,  2299,  2300,  2301,  2302,  2303,  2306,   241,
       0,   387,   419,     0,   430,   421,   424,     0,   130,   131,
    1293,  1296,     0,   670,     0,   162,     0,   290,   292,     0,
     289,   291,  3641,     0,  3787,     0,     0,   366,   277,   364,
    3638,  3635,  3640,  3636,  3639,  3637,  3776,   365,  3677,     0,
     281,  3823,  3777,  3778,  3780,     0,  2184,  2183,     0,  2182,
    2157,     0,  2180,     0,  2075,  2077,     0,     0,     0,     0,
       0,     0,   215,     0,  2279,   215,  2058,  2077,  2077,   458,
    3676,     0,  3645,  3413,  3431,  3432,  1438,  3428,  3433,     0,
    3430,  3425,     0,     0,  3427,  3424,     0,     0,  3452,  3426,
    3429,  2600,  2738,  2776,  2615,  2790,  2792,  2909,  2913,  2918,
    2929,  2933,  2666,  2638,  2977,  3407,  3395,  3408,     0,     0,
    3411,  3416,     0,  3415,     0,     0,  2089,  2380,  2381,  2385,
       0,  2403,     0,     0,   380,     0,     0,     0,     0,  3808,
     372,   373,     0,   376,     0,   370,  3806,  3798,     0,   387,
    3805,  3800,  3799,  3801,  3802,  3803,  3804,   398,     0,   399,
     400,  3807,   454,  3794,  3795,     0,     0,   370,  3686,     0,
    3796,  3792,  3793,  1309,  1733,     0,  2450,  2519,  2520,     0,
    2463,  2468,  2469,  2461,  2462,  2466,  2442,  2465,  2441,  2467,
    1498,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1438,  1438,  1438,  1435,     0,     0,     0,     0,     0,
       0,     0,  2459,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1435,
       0,     0,  2458,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1435,     0,  2460,
    1438,  1435,  1435,     0,     0,  2703,  2598,  2718,  2655,  2729,
    2731,  2605,  2606,  2607,  2608,  2609,  2652,  2753,  2679,  2754,
    2755,  2756,  2618,  2796,  2803,  2821,  2823,  2862,  2864,  2870,
    2876,  2877,  2890,  2894,  2670,  2907,  2914,  2940,  2692,  2945,
    2950,  2953,  2973,  2695,  2995,  2996,  2696,  2994,  2667,  3006,
    3013,  3016,  3017,  2648,  2699,     0,     0,     0,     0,  1497,
       0,     0,  1383,  1572,   811,  1455,  1471,     0,  1570,  1569,
    1573,  1575,  1581,  1490,  1602,  1541,  1542,  1544,  1543,  1548,
    1549,     0,  1709,  1550,     0,     0,  1547,  2455,  1546,  1545,
    2456,  2457,  1540,  2497,  2533,     0,  2521,   566,   565,     0,
     326,   321,   329,   323,   325,   324,   330,   331,   332,   327,
     322,   328,   315,     0,   300,     0,   308,  3537,     0,  1314,
     370,   461,  2092,   333,  3413,  2704,  2913,  3387,     0,  3394,
       0,  3552,  3546,  3549,  3548,  3544,  3547,  3545,  3550,  1411,
    3551,  1410,  1361,  1391,  1408,  1409,     0,     0,     0,  2590,
     944,  2588,  3280,  3281,     0,     0,     0,  3282,  2968,  2990,
    2589,     0,  2528,     0,  2529,  2585,  2583,  2587,  2586,  2580,
    2581,  2584,  3260,  3265,  3261,  2582,     0,     0,     0,  2291,
    1022,  1021,     0,     0,     0,     0,  2227,     0,   944,  2291,
    2228,     0,  1959,  2281,  2284,     0,  3284,  2241,  1023,  3285,
    2277,     0,  2213,  2229,  2190,  2234,   129,  3286,     0,  2280,
    1959,  2291,     0,  2206,     0,     0,     0,     0,  1424,     0,
     309,  3365,  2155,  1202,  2125,  1359,  2111,     0,   456,     0,
       0,  2349,  3520,  3819,  3706,     0,     0,     0,     0,  3529,
    1783,  2050,     0,    80,    75,     0,     0,     0,     0,  2516,
    3367,    85,     0,     0,  3611,    73,     0,  2367,     0,  2365,
    2362,  2364,     0,  3529,     0,  2390,  1236,  1236,     0,     0,
    1228,  1230,  1231,  1236,  1236,  2189,     0,     0,     0,  2449,
    2447,  2448,  2524,  3594,  2446,  2445,  3603,  3605,  3588,     0,
    3591,  3590,  3600,  1374,  1373,     6,    70,     0,   137,   667,
     215,   215,   667,   164,   143,   146,   667,   667,   667,   667,
     155,   157,     0,   217,     0,     0,  3560,  1389,     0,     0,
    1401,  1387,  1798,  1388,  1800,  1797,  1796,  1795,  1826,  1827,
    1829,  1828,  1830,  1832,  1823,     0,     0,  2048,     0,  2043,
    1903,  1908,  1902,     0,     0,     0,     0,  1981,  1959,  1990,
    1983,  1353,  1979,     0,  1349,  1414,  1414,  3543,  3542,  3540,
    3539,  3538,  1984,  1372,  1380,  1378,  1379,  1985,  1370,     0,
    2308,  2513,     0,  2313,     0,  1982,  1986,     0,     0,     0,
    2116,  2115,  2118,     0,   960,     0,   224,  3558,  3559,  3557,
    1438,  2540,  2543,  3556,  2544,   224,  1089,     0,   529,  2078,
       0,     0,     0,     0,     0,     0,   531,   530,   467,     0,
    2077,  1210,  1211,  1205,  1207,  1209,     0,     0,     0,     0,
    2312,     0,   243,   240,   222,   428,     0,   388,  3665,     0,
     425,    86,     0,  1297,  2068,  2070,   161,     0,     0,  3790,
    3023,  3024,  3025,  3026,  3027,  3028,  3030,  3031,  3029,  3032,
    3033,   889,   910,  3034,  3035,  3036,   910,   925,  3037,  3038,
    3039,  3040,  3041,  3042,  3043,  3044,   875,  3045,  3046,  3047,
    3048,  3049,  3050,  3051,  3052,  3053,  3054,  3055,  3057,  3056,
    3058,  3059,  3060,  3061,  3062,  3063,  3064,  3065,  3066,   895,
    3067,  3068,  3069,  3070,  3071,  3072,  3074,  3073,  3075,  3076,
    3077,  3078,   891,  3079,  3080,  3081,  3083,  3082,  3084,  3085,
    3086,  3087,  3088,  3089,  3090,  3091,  3092,   895,  3093,  3094,
    3095,  3096,  3097,  3099,  3098,  3102,  3103,  3104,  3105,  3106,
    3107,  3108,  3109,  3110,  3111,  3112,  3113,  3114,  3115,  3116,
     885,  3117,  3118,  3119,  3120,  3121,  3122,  3100,  3123,  3101,
    3124,  3125,  3126,  3127,  3128,  3129,  3130,  3131,  3132,   925,
     841,   841,  3133,  3134,  3135,  3136,  3137,  3138,  3139,   925,
     888,   841,  3142,  3140,  3141,  3143,  3144,  3145,  3146,  3147,
    3149,  3148,  3152,  3150,  3151,   895,  3153,  3154,  3155,  3156,
    3157,  3158,  3159,  3160,  3161,  3162,  3163,  3164,  3165,  3167,
    3168,  3166,  3169,  3170,  3171,  3172,  3173,  3174,  3175,  3176,
    3177,  3178,  3179,  3180,   890,  3181,  3183,  3182,  3184,  3185,
    3186,  3187,  3188,  3189,  3190,  3191,  3192,  3193,  3194,  3195,
    3196,  3199,  3197,  3198,  3200,  3201,  3202,  3203,  3204,     0,
    3205,  3206,   887,  3207,  3208,  3212,  3209,  3213,  3210,  3214,
    3211,  3215,  3216,  3217,  3218,  3219,  3220,  3221,  3222,  3223,
    3224,  3225,  3226,  3227,  3228,  3229,   925,   886,   841,  3230,
    3231,  3232,  3233,  3234,  3235,  3236,  3237,  3238,  3239,  3240,
    3241,  3242,  3243,  3244,  3245,  3247,  3248,  3246,   910,   879,
    3249,  3251,  3250,  3252,  3253,  3254,  3255,  3256,  3257,  3258,
     910,   835,   836,   841,   910,   854,     0,   895,   925,     0,
     876,   895,   881,   910,     0,   910,   910,   910,   910,  3641,
     910,     0,   270,   278,   820,   823,   825,   824,   826,   827,
     910,   910,   910,   910,   910,   912,   895,   895,  2591,  2592,
    2593,  2594,  2596,  2597,  3625,   895,  2595,  3783,     0,     0,
       0,  3789,     0,  3615,     0,     0,  3781,     0,  2158,     0,
    1399,  1902,  2160,  2165,  2174,  2178,  2181,  2055,     0,     0,
       0,  3761,  3760,  2061,  2060,  3759,  2279,     0,  2064,   542,
       0,     0,     0,  2065,  2051,     0,   434,   436,  3414,  3412,
    3449,  3448,  3453,     0,  3450,  3446,     0,  3406,  3454,  3439,
    3443,     0,  3455,  3440,  3447,  3461,  3460,  3462,  3457,  3456,
       0,  3459,  3445,     0,  3444,  3465,     0,  3409,     0,     0,
     410,     0,  2094,  2095,  2091,  1202,  2090,  2386,     0,  2378,
       0,  1332,  2405,  2404,  2401,  1894,  3351,  3356,  3634,  3633,
    3632,  2535,     0,  3629,  3631,  3628,  3630,  2536,   387,   381,
       0,     0,  2876,     0,   386,   385,   384,   407,   387,   377,
     396,     0,     0,  3618,   371,  3619,   374,   405,   408,   447,
     443,   451,   445,  3815,  3813,  3687,  3797,   268,     0,     0,
    2519,  2520,  2452,  2451,  2521,  2443,  2464,     0,     0,     0,
    1576,  1900,  1900,  1900,     0,     0,  1791,     0,     0,     0,
       0,  1900,     0,  1608,  1588,  1587,     0,  1609,     0,     0,
       0,     0,     0,     0,     0,     0,  1739,  1739,  1705,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1785,
    1787,  2497,  1900,     0,  1900,     0,  1443,  1618,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1900,  1900,     0,  1900,  1626,     0,  1630,  1632,  1631,  1900,
    1900,     0,     0,  1900,     0,     0,     0,     0,     0,     0,
       0,     0,  1781,     0,  2470,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1781,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2472,     0,     0,     0,  2471,     0,     0,     0,     0,     0,
       0,     0,  1781,     0,     0,  1578,     0,  1577,  1579,     0,
    1383,   812,     0,     0,     0,  1494,     0,  1500,  1502,  1504,
    1492,  1493,     0,  1491,     0,  1499,  1501,  1503,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1580,     0,     0,     0,     0,     0,  2444,     0,  1664,     0,
     578,  2375,     0,     0,     0,   298,  1316,  2545,     0,     0,
     387,  2096,  2093,  3412,     0,     0,     0,  3409,  1425,  1407,
    3287,     0,   943,     0,     0,   946,   948,   947,   956,     0,
     945,  3327,  3325,  3323,  3322,     0,     0,  3267,  3269,     0,
     952,   954,   953,  3317,   951,     0,  3303,     0,     0,     0,
       0,   667,     0,     0,     0,     0,     0,     0,     0,     0,
    2259,     0,  1424,  1424,  2207,     0,  2291,     0,  2291,  2281,
       0,  2291,  2287,  2247,  2240,     0,     0,   723,  1964,  1960,
    2233,  2285,  2286,  2291,     0,     0,  2291,     0,  2248,  2281,
    2291,  2202,     0,     0,  2194,  2199,  2195,     0,  2201,  2200,
    2203,  2191,  2192,     0,  2220,  2250,     0,  2232,  2239,     0,
    2219,  2226,     0,  2237,  2281,  2281,     0,  2291,  2291,  2291,
    1203,     0,  1425,     0,  3647,  2474,  2477,  2483,  2489,  2351,
     266,     0,     0,     0,  1324,  1326,  1325,  1342,  1250,  3528,
       0,  3530,     0,  3532,     0,    77,     0,     0,  2343,  2341,
       0,     0,     0,  2335,  2337,  2340,  2336,     0,     0,  2342,
     129,     0,  2338,  2344,  2317,  2320,  2327,  1424,  2318,     0,
       0,   334,   337,   339,     0,   342,  1894,  3370,  3369,     0,
       0,     0,  1254,  1257,     0,  2372,  2369,   129,     0,  2665,
    3535,  3533,     0,  1224,  1240,  1222,  1234,  1235,     0,     0,
    1227,  1226,  3351,  3612,  3613,     0,     0,  3589,  3606,  3587,
       0,  3601,  3602,  3586,     7,     4,   149,     0,   140,     0,
       0,     0,   667,   667,   132,     0,   667,     0,  3763,  1425,
    1425,   667,   667,   667,     0,     0,  1796,  1826,  1827,  1829,
       0,  1828,     0,     0,  1894,     0,     0,  1818,  1842,     0,
    1842,  1820,  1821,     0,     0,     0,  1401,  1824,  2525,  2044,
    2047,     0,  2036,  2038,  2039,  2537,  2041,     0,     0,  1905,
    1908,  1416,     0,  1972,  1973,  1971,     0,  1961,  1965,  1970,
    1968,     0,  1952,  1989,  1980,  2028,  1415,  1987,  1988,  1377,
    2297,  2295,  2314,  2315,  2512,  1355,  1351,  3347,  3348,  3345,
    3346,  3344,  3681,  3682,  3684,  1075,   961,  2117,   960,   660,
     663,   662,     0,     0,  2088,  2542,     0,  2088,     0,  2279,
    1096,     0,     0,  2279,   478,  2279,   532,  2543,  3490,     0,
    3497,  3479,     0,  1208,  3562,  3563,  1086,  1084,     0,  1268,
    1269,  1272,     0,   244,   246,     0,   387,   420,   422,   431,
    3624,   370,     0,     0,  1307,     0,  1305,  1304,  1302,  1303,
    1301,     0,  1292,  1298,  1299,  2279,   470,   284,     0,   911,
     847,   925,   923,   925,   861,   926,     0,   899,   897,   896,
     892,   899,   863,   970,   875,     0,   925,   963,   968,   964,
     871,     0,   841,   966,     0,   974,   973,   842,   869,   862,
     868,   899,     0,   858,   866,   925,   834,   870,   857,     0,
     899,   872,   877,   880,   882,   884,   899,   925,     0,  3615,
     841,   856,   855,   841,   899,     0,     0,  3615,   878,   966,
     974,   841,   925,   899,     0,   913,   899,   893,   893,   893,
     282,   367,  1991,  3706,  3785,  3786,  3779,  3782,  3784,  1823,
       0,  2161,  2168,  2072,  2074,  2511,     0,  1400,  2163,  1950,
       0,     0,     0,  2176,  2076,     0,  3762,     0,   542,  2057,
    3404,   545,   544,  2062,   543,  2117,  3477,  2056,  1212,     0,
       0,   370,   459,   435,   389,  3442,  1439,  3458,     0,  3463,
    3464,  3402,   220,   219,  3410,   218,     0,     0,     0,     0,
    3451,  3434,     0,  3438,  3437,     0,  3435,     0,  3436,     0,
    3441,  3418,  3417,  2487,     0,  2486,  3665,   369,  2096,  2804,
    3006,  2387,  2383,  2382,     0,  2402,     0,  1895,  1896,     0,
       0,  1898,  3353,  1991,     0,  3350,  3688,   382,   387,     0,
       0,     0,   402,   378,   387,   389,   401,   440,   269,     0,
     241,     0,     0,   370,   370,   387,  3615,  3706,  3351,  3287,
    1734,  1736,     0,     0,  1901,     0,  1754,     0,     0,     0,
       0,     0,     0,  1556,     0,     0,     0,  1688,     0,  1754,
    1716,  2021,  2022,  2002,  2003,  2001,  2004,  1436,     0,  2005,
    2020,  1642,     0,     0,     0,  1714,  1382,  1365,     0,     0,
    1870,  1871,  1872,  1873,  1874,  1875,  1876,  1877,  1878,  1879,
    1880,  1881,  1883,  1888,  1884,  1885,  1886,  1887,  1882,  1889,
       0,  1869,     0,  1740,  1701,  1703,     0,     0,     0,   812,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1900,
       0,     0,  1900,     0,     0,     0,     0,     0,     0,  1715,
       0,  1713,     0,     0,     0,  1712,  1600,     0,     0,     0,
    1900,     0,     0,     0,     0,  1532,     0,     0,     0,     0,
       0,  1900,     0,     0,     0,     0,     0,     0,     0,  1525,
       0,     0,     0,     0,  1782,     0,     0,     0,     0,     0,
       0,  1892,  1890,  1893,  1891,     0,     0,  1783,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1656,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1604,     0,     0,     0,  2502,     0,   992,     0,
       0,     0,     0,  1571,     0,     0,     0,     0,  1452,  1446,
    1450,  1444,  1448,     0,  1441,  1440,  1442,  1505,  2710,  1453,
       0,     0,     0,  1456,  1465,  1469,     0,     0,     0,     0,
       0,  1476,  1474,  1475,  1487,  1488,  1472,  1473,     0,  1478,
       0,  1477,  1484,  1485,  1486,  1489,  1574,   955,  1582,  1920,
    1707,  1708,  1732,  1924,     0,  2498,  1425,  1528,  1527,  1529,
    1530,  1531,   579,     0,   573,   576,   590,     0,     0,  2374,
       0,  2679,  2695,  2696,   316,   319,   318,   320,     0,     0,
    1315,  1319,  3351,     0,  2097,  2098,     0,     0,     0,  3481,
    3392,     0,     0,  1421,  1362,  1420,     0,     0,     0,     0,
       0,  3309,  3320,     0,     0,  3319,  3318,     0,     0,     0,
       0,     0,  3291,     0,     0,     0,     0,  3264,  3329,  3330,
    3333,     0,     0,     0,  2990,     0,  3266,  3271,  3262,  3275,
    3277,  3279,  2249,     0,     0,     0,  2255,  2252,  2244,  2258,
    2720,  2254,  2271,  2253,  2246,  2260,  2245,     0,     0,     0,
    2291,  2264,  2267,  2261,  2291,     0,  2291,  2263,     0,  2289,
    2276,  2275,  2274,  2217,  2216,  2210,  2282,  2268,  2262,   215,
    2291,  2215,  2214,  2196,  2197,  2198,     0,  1959,     0,  2287,
    2251,  2281,     0,  2291,  2291,  2272,  2273,  2236,  2238,  2143,
       0,  1823,     0,     0,  2130,  2123,  2110,   370,     0,     0,
       0,   370,  3821,     0,     0,     0,   563,  1342,  1328,  1344,
    1252,  1251,  1249,  3527,  3531,  1784,    79,  2136,  2137,    81,
    2135,    82,  2353,  2329,  2328,  2330,  2334,   129,  2339,  2331,
       0,  2345,  2346,   343,   347,     0,     0,     0,  3368,     0,
     668,     0,    74,     0,  1258,  1991,  2368,  2370,  2363,  3534,
       0,  1225,  1242,  1241,  1237,  1238,  1243,  1233,  1232,  2186,
    3595,  3604,  3608,  3593,   960,  1040,     0,  3400,  3497,   184,
       0,     0,     0,   135,     0,  3717,     0,   667,   156,   158,
     667,     0,     0,     0,   667,     0,  1839,  1831,  1833,  1834,
    1835,     0,  1838,     0,  1404,     0,  1392,  1392,  1402,  1841,
    1822,  1819,  1843,     0,  1842,  1842,     0,     0,  1802,  1801,
       0,  1894,   949,  2040,     0,     0,  1904,     0,  1906,  1915,
    1905,  1418,  1991,  1412,  2451,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   960,     0,   661,  2117,  2117,
       0,     0,     0,     0,     0,     0,     0,     0,   225,   234,
    1079,  2541,  1081,     0,     0,   476,   477,  2117,   475,   518,
     519,   522,   523,   524,     0,     0,   525,  2117,  2117,   472,
     498,   499,   502,   503,   504,   505,   506,   468,     0,   473,
       0,     0,     0,  3509,  3351,  1110,  3564,  1082,     0,     0,
    1271,   242,     0,  3665,   426,   423,   370,   418,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    87,    88,   109,     0,  1294,  1306,  2069,  1300,
    2117,  2117,  2117,  2117,   474,   507,   508,   511,   512,   513,
     514,   517,   515,   516,     0,  2279,     0,     0,     0,     0,
       0,     0,   859,   929,     0,   860,     0,   901,   902,   900,
     905,   837,   833,   971,   959,   958,   965,   864,   865,   844,
     967,   962,   975,   972,   969,   923,   843,   839,     0,  1068,
     851,     0,   840,   883,   838,   852,   274,     0,     0,  3646,
       0,     0,  3653,   280,   867,   849,   853,  3615,  3615,   271,
     279,   845,   846,   848,   974,   831,     0,   832,     0,   828,
     830,   829,  1991,  1996,  1992,  3788,   297,     0,   296,     0,
    2162,  1392,     0,     0,     0,  2514,     0,  1975,  1951,  2175,
       0,  2179,  2178,     0,  3758,  2063,     0,     0,     0,  1214,
    1213,  2059,  2066,  3351,   370,   286,   392,   438,     0,     0,
    3399,   221,  3473,  3476,  2511,     0,     0,  3419,     0,   411,
    3623,  2098,  2384,  2388,  1333,  1335,  1336,  1334,  1342,     0,
    2556,  2555,  2526,  1899,  2527,  2552,  2550,  2554,  2548,  2553,
    2546,  2547,  2551,  2549,     0,  3359,  3360,  3358,  3352,  3357,
     383,   403,   406,     0,   379,   390,   394,     0,  3621,  3620,
     409,   448,   432,   432,   432,  3816,     0,  1310,     0,     0,
    2501,     0,  1683,     0,  1684,  1685,     0,  1557,  1792,     0,
       0,     0,  1585,     0,     0,     0,  1687,     0,  1437,     0,
       0,  1560,  1552,  1366,     0,  1718,     0,     0,     0,     0,
       0,     0,     0,  1723,     0,  1721,     0,     0,  1786,     0,
    1788,  2498,     0,  1693,  1728,     0,  1691,     0,     0,  1717,
    1729,  1730,     0,     0,     0,     0,  1697,  1695,     0,     0,
       0,  1699,     0,     0,     0,     0,     0,     0,     0,  1603,
    1696,  1698,     0,  1638,     0,  1681,  1639,  1640,  1641,     0,
    1635,     0,  1636,     0,     0,     0,  1666,     0,  1589,  1590,
       0,     0,     0,     0,  1591,  1646,     0,  1565,  1648,  1596,
    1597,  1562,  1563,  1650,  1667,  1651,  1564,  1652,  1655,     0,
    1599,  1991,     0,  1583,     0,     0,     0,  1601,  1629,     0,
       0,     0,  1561,     0,  1658,     0,     0,     0,  1991,     0,
    1668,  1605,     0,     0,   813,  1384,  1553,  2499,  1447,  1451,
    1445,  1449,     0,     0,     0,     0,  1464,     0,     0,  1457,
    1467,  1470,     0,     0,  1922,     0,     0,  1726,  1781,     0,
       0,     0,  1677,  1678,     0,     0,   572,   571,     0,   575,
     651,     0,   592,   580,   569,  2376,     0,     0,  1317,     0,
       0,     0,  2085,     0,     0,  3393,     0,     0,     0,     0,
    1425,  1426,  1426,  2497,  3288,  3289,  3290,     0,  2579,  2577,
    2578,  2530,  2532,     0,  2531,  2575,  2573,  2576,  2571,  2569,
    2570,  2574,  2572,     0,     0,  3307,   957,     0,  3341,     0,
       0,  3326,  3324,     0,     0,     0,  3270,     0,  3335,  3336,
       0,     0,     0,  3305,  3304,     0,     0,     0,  3297,     0,
       0,     0,     0,  2243,  2257,  2256,  2292,  2293,  2270,  2266,
    2211,  2269,  2265,  2288,  1991,  2221,  2242,  2212,     0,  2235,
    2193,  2289,  1902,  2281,  2208,  2209,     0,  1401,  1426,  2126,
    1425,  2127,   370,  2478,     0,  2485,     0,     0,  3615,  1291,
    1331,  1323,  1330,  1327,  1342,  1340,  1329,  1018,  1017,     0,
    1343,    78,     0,     0,  2332,  2333,  2326,  2347,  2321,     0,
     338,   348,   340,   344,   345,   346,   341,  2793,  2876,     0,
    1902,  3372,  3610,  1265,  1263,  1262,  1264,  1253,  1259,  1260,
    2373,  2371,  2366,  2392,  1240,     0,  1223,  3615,  1991,     0,
    3607,   150,   960,     0,     0,     0,  1040,     0,   160,  3509,
       0,     0,     0,   133,   166,  3717,     0,  3615,  3755,  3764,
    3578,     0,   151,  3767,   223,  3765,     0,  1836,  1837,  1799,
    1392,  1394,  1393,     0,     0,  1396,     0,     0,     0,     0,
    1807,     0,  1803,  1805,     0,  1867,  1859,     0,  2045,  2037,
    2042,  2496,  1912,  1956,     0,     0,  1363,  1915,  1417,  1974,
    1963,     0,  1967,  1966,  1969,  1416,  1953,  1956,  1425,  3683,
    3685,  1076,   664,     0,     0,  1077,     0,     0,     0,   228,
     231,   229,   230,   527,   526,     0,  2279,   520,  2117,  2117,
     180,  2117,  2117,   179,   181,     0,   175,   172,   182,  2117,
    1097,   168,     0,     0,     0,     0,  1991,     0,     0,     0,
     186,     0,     0,  2279,   500,   479,   480,   483,   484,   485,
       0,  3484,  3483,     0,  3499,     0,     0,  3501,     0,  3500,
    3498,  3469,  3480,     0,  1105,  1071,     0,  1112,  1114,     0,
       0,  3564,  1270,     0,   245,   429,     0,     0,     0,  1991,
       0,  1991,  1991,     0,     0,  1991,     0,  1991,     0,     0,
       0,     0,     0,     0,     0,  1991,     0,     0,     0,     0,
    1991,     0,  1308,     0,     0,     0,     0,  2279,   509,     0,
    2117,   469,   486,   487,   490,   491,   492,   493,   494,   497,
     495,   496,     0,     0,   251,   252,   255,   286,   908,   906,
     909,   907,   924,     0,   903,   904,   930,   966,     0,   966,
     276,     0,   273,   895,  2591,  2592,  2593,  2594,  2596,  2597,
    3655,  3654,  3748,  3747,     0,   850,     0,   306,   305,   303,
     370,   293,   301,   295,     0,   302,  1999,  2000,  1997,  1995,
    1998,  3824,  2159,  2073,  2178,     0,  2512,  1424,     0,  2171,
    1902,     0,  2177,  3351,  3405,   541,   722,  3478,  1212,     0,
     287,     0,     0,   389,  3513,     0,     0,     0,     0,     0,
    2488,   413,  2082,     0,  1342,  1346,  2395,  3362,  3363,  3361,
     404,     0,   397,   389,   241,     0,   442,   444,   433,   452,
     446,     0,   432,  1737,  1735,     0,  1755,  1789,     0,   910,
     910,   895,   912,  1775,  3115,  1769,  1772,     0,   910,  1777,
     910,  1770,   910,     0,     0,  1764,  1765,  1766,  1768,  1767,
       0,     0,     0,  1689,  1686,     0,     0,     0,  1743,  1743,
       0,     0,     0,     0,  1481,     0,     0,     0,  1672,  1694,
    1692,     0,     0,     0,     0,     0,     0,     0,     0,  1700,
    1538,     0,  1536,     0,  1537,     0,  1539,     0,     0,  1682,
       0,  1507,  1526,     0,     0,     0,     0,     0,     0,     0,
       0,  1784,     0,  2007,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2503,     0,     0,     0,   981,
     987,   990,   991,   993,   985,     0,  1660,     0,     0,     0,
    1462,  1458,     0,  1466,     0,     0,     0,  1480,  1479,  1924,
    1923,     0,  1725,     0,     0,  2500,  1426,  1665,  1425,   582,
       0,   600,   574,     0,  1991,   577,   591,     0,   603,     0,
       0,     0,   317,     0,  1320,     0,   441,     0,  2099,  1823,
       0,  3391,  3482,     0,     0,  1419,  1427,  1422,     0,     0,
       0,  3311,  3310,  3321,     0,     0,     0,     0,  3295,  3293,
    3292,  3268,     0,     0,  3340,  3334,  3331,  3332,     0,     0,
    3274,     0,     0,  3272,  3276,  3278,  2231,  2230,     0,  2290,
    1959,  2204,  2223,  2225,  2291,  2145,  2149,     0,  1894,  2134,
       0,     0,  2128,  2132,     0,  2484,     0,   267,     0,  3689,
    3826,     0,  1861,    83,     0,  2324,     0,  2319,  2322,     0,
       0,  3383,  3384,  3376,  3379,  3377,  3378,  3382,  3385,  3386,
    3373,  3380,  1959,     0,  1255,  1261,  1239,     0,  1246,  1244,
       0,     0,  3642,  2187,  3596,  3609,  1057,  1059,  1058,  1041,
    1042,     0,     0,     0,  1105,     0,     0,     0,   671,   960,
     167,     0,  3705,  3704,  1425,     0,  3712,  3715,  3713,  3716,
    3718,  3615,     0,   195,  3564,  3615,     0,  3615,   153,  1403,
    1395,  1397,  1392,  1392,     0,  1795,     0,     0,     0,  1795,
       0,     0,   563,     0,  1840,  1856,   950,  2409,  1913,  1914,
       0,  1909,  1957,  1958,  1911,  1907,     0,  1916,  1918,  1364,
    1962,  1413,     0,  1955,     0,     0,  2031,  2033,   721,   720,
     233,   232,   237,   238,  2017,  2018,  2015,  2016,   533,   546,
    2019,   547,   521,  1991,  1991,  2122,  2121,  1991,  1991,   174,
     171,  2120,  2119,  1991,  1991,   169,  2088,   190,   189,   191,
     192,   194,   193,   188,  1093,     0,   534,   535,   501,     0,
     481,  3487,     0,  3494,  3489,  3492,  3472,  3471,  3470,  3467,
       0,  1991,  1991,  1991,     0,  1991,  3508,  3510,     0,     0,
    1094,   960,  3522,     0,     0,   200,  3566,     0,  3568,     0,
    1274,     0,  1273,  3665,  1991,  1991,   102,  1991,    94,    95,
      90,   122,   123,    92,    93,    98,    97,    99,   100,   103,
     104,   101,    96,    91,   126,   128,   127,   105,   124,   125,
      89,   540,   539,   538,   537,   510,     0,     0,  2279,   488,
     285,     0,     0,     0,   253,  3791,     0,   874,  1069,   873,
     275,   272,   894,  1991,   283,   304,     0,  1902,  2515,     0,
       0,  1976,  2172,  2164,  2166,  2054,  2052,  3649,     0,   439,
     393,   437,     0,  3398,  3403,  3475,  3474,  3497,  3497,   387,
    3665,   387,   412,     0,  1337,  1342,  1346,     0,  1338,  2406,
     391,   395,  3622,   449,  3706,  3814,     0,     0,  1790,  1756,
    1757,  1774,  1776,     0,  1773,  1759,  1779,  1763,  1771,  1778,
    1761,  1555,  1586,  1559,  1558,     0,     0,     0,  1616,     0,
    1741,  1747,     0,     0,     0,  1593,     0,  1724,  1722,  1595,
       0,     0,  1674,  1649,  1720,  1619,  1653,     0,  1598,     0,
    1625,  1623,     0,  1535,  1533,  1534,     0,  1606,  1633,     0,
    1524,  1634,     0,  1612,     0,  1614,     0,  1615,     0,  1644,
       0,  1617,  1647,  1551,  2009,  2008,  2006,  1566,  1991,     0,
    1620,  1584,     0,     0,  1657,  2504,  2505,     0,  1659,     0,
       0,   992,   978,   979,   980,     0,   982,   984,   986,     0,
    1991,  1483,  1482,  1454,     0,  1463,  1460,     0,  1468,  1926,
    1925,     0,     0,  1669,  1427,  1679,     0,   583,   584,   586,
     588,     0,   653,   578,     0,   567,     0,   582,   570,  1318,
    1321,  2105,     0,  2102,  2109,   556,  2171,     0,  2100,  2071,
       0,  3389,  3388,     0,  1423,  1431,  1430,  2494,  2498,     0,
       0,     0,  3308,  3328,     0,     0,     0,     0,  3338,  3337,
    3339,  3306,  3301,  3299,  3298,  2013,  2014,  2012,  2010,  2011,
    2222,  1959,  2218,     0,  1902,     0,  1859,  1426,  2124,     0,
    3648,     0,  3693,  3690,  3691,     0,  1864,     0,  1865,  1862,
    1863,  1991,     0,     0,   356,   351,   359,   353,   355,   354,
     360,   361,   362,   363,   357,   352,   358,   350,   349,     0,
    3371,  1266,     0,     0,  3643,  3644,   138,     0,  3401,   159,
       0,   144,   147,   771,     0,     0,     0,     0,  2117,  2117,
    2117,  2117,  2117,  2117,  2117,  2117,  2117,  2117,     0,  2117,
    2117,  2117,  2117,  2117,  2117,  2117,  2117,  2117,  2117,     0,
       0,  2117,  2117,   134,   551,   559,   672,   675,   716,   700,
     701,   548,     0,   136,  1425,  3770,  3711,  3714,   263,  3699,
    3695,  3698,   226,     0,     0,     0,   248,  3697,  3696,     0,
     736,   737,   735,   734,     0,     0,  3564,  1406,  1405,  1808,
       0,  1812,  1817,  1813,     0,  1804,     0,  1825,  1868,  1860,
       0,     0,  2417,  1956,     0,     0,  1956,  1426,  2029,  1425,
     173,   178,   177,   170,   183,   176,  1098,   187,   482,  3488,
    3486,  3485,     0,  3493,     0,  3468,  3504,  3502,  3503,  3506,
       0,     0,  3505,  3507,  1099,  1100,  1106,  1101,  1200,  1200,
       0,  1200,     0,     0,  1200,  2117,     0,     0,   563,  1218,
    2117,     0,     0,     0,     0,     0,  1183,     0,  1200,     0,
       0,     0,     0,     0,  1126,  1182,   673,  1072,  1125,  1127,
    1139,   559,     0,  1157,  1185,  1186,  1184,  3523,     0,     0,
       0,  1111,     0,   203,   201,   211,  3565,     0,  2088,     0,
    3568,  1276,  1277,     0,   427,     0,   115,   117,     0,   119,
     121,     0,   111,   113,   471,   536,   489,   250,   254,     0,
       0,   898,   294,  2178,  2169,     0,  1977,     0,  1425,  2088,
     288,     0,     0,  3511,  3511,   414,   416,   415,  2138,  1339,
    1347,  2408,  2407,     0,   432,     0,  1738,   966,  1780,   966,
     966,  1690,     0,     0,     0,     0,  1747,  1749,     0,     0,
    1748,  1706,     0,     0,     0,     0,     0,  1554,     0,  1670,
       0,     0,     0,     0,   895,  1514,  1516,  1512,  1515,     0,
     910,  1518,     0,   876,   910,  1521,  1523,  1508,  1509,  1510,
    1511,     0,     0,  1793,  1794,     0,  2027,  2026,  2025,     0,
       0,     0,     0,  2506,   976,  1662,     0,   989,   983,   981,
     988,     0,  1459,     0,     0,  1928,     0,  1727,  1680,   587,
       0,   654,     0,   607,     0,   605,   581,     0,     0,  2106,
    2108,  2491,  2490,  2502,     0,     0,  2088,  2101,  3390,  1429,
    1428,     0,  3315,  3313,  3312,  3343,  3342,  3296,  3294,     0,
       0,  2224,  2148,  1950,  2150,  2142,  2133,  2131,  2480,  1991,
    3692,  1142,     0,  1143,  1154,  1156,  1345,     0,  2358,     0,
    2356,  2325,  2359,     0,  1245,  1247,     0,   141,     0,     0,
       0,  1066,  2628,     0,     0,   740,   742,   743,   744,   745,
       0,   772,   747,   667,  1019,  1019,   774,  2507,     0,   719,
    2117,   552,  1991,  1991,  1991,  1991,   698,  1991,  1991,  1991,
       0,     0,  2117,  1991,     0,     0,  1991,  1991,  1991,  1991,
       0,     0,  1991,   706,   707,   705,  1991,  1991,  2406,   558,
     560,   960,   676,   671,     0,  3772,  3615,   256,  3756,   462,
     463,     0,     0,  3568,     0,     0,  3584,     0,  3584,     0,
       0,     0,     0,     0,     0,  1849,     0,  1848,     0,  1854,
    1858,     0,     0,     0,     0,  2410,  2412,     0,  2046,  1910,
    1919,  1917,  1954,  2034,  2032,     0,  3495,  3491,  1994,  1993,
       0,  1103,     0,  1102,  1107,  1066,   667,  1201,   665,     0,
    1161,  1165,  1162,   665,  2075,  1311,  2075,     0,     0,  2075,
       0,  2077,  2075,     0,     0,  2075,  2075,     0,  1311,     0,
     561,  1221,  1219,  2075,  1220,  2075,     0,     0,  1311,  1174,
    1121,  1175,     0,  1122,  2075,  1311,  1141,  1311,  1311,     0,
     674,   960,  1123,  1124,   771,  1215,   210,   199,     0,     0,
    1113,  1115,     0,     0,  1116,  3567,  1085,  3570,  2088,  1282,
       0,   107,  1991,   108,  1991,   106,  1991,  3751,     0,  2088,
       0,  1978,  2173,  2167,  3514,     0,  3397,  3396,     0,  2171,
       0,   450,   432,  1758,  1760,  1762,  1610,  1611,  1744,  1956,
    1742,     0,  1704,  1750,  1751,  1643,     0,  1594,     0,  1671,
       0,  1654,  1624,  1622,  1607,  1517,  1513,  1520,   877,  1519,
     966,  1637,  1613,  1645,  1567,  1991,  1621,  1627,  1628,     0,
    1661,  1991,  1461,     0,  1931,  1930,     0,     0,  1956,   585,
       0,   652,   580,     0,     0,   604,     0,   568,  2104,     0,
       0,     0,  2103,  2113,     0,  2086,  2495,     0,     0,  3302,
    3300,  1975,  2481,  2479,     0,  1341,     0,  1866,  2354,  1991,
       0,  2323,     0,     0,     0,     0,     0,     0,   773,  1067,
       0,     0,   746,  2510,   739,   771,     0,     0,     0,  1019,
     763,   667,     0,  1066,  1020,   667,   667,     0,     0,     0,
       0,  2024,  2023,   695,   688,   687,   690,   689,   692,   691,
       0,   684,   681,   693,   683,   708,     0,   696,   678,   732,
     733,   731,   702,   709,   679,   680,   686,   685,   682,   724,
     729,   727,   726,   725,   730,   728,   697,   715,   694,   710,
     550,   656,   677,   559,   714,   713,   711,   712,     0,  3667,
    3667,  3741,     0,  3742,  3743,  3615,     0,   257,   259,   235,
     227,     0,     0,   466,   464,   465,     0,     0,   152,   265,
     249,   226,     0,  3769,   226,  3568,  1809,     0,  1814,     0,
    1806,  1844,  1844,  1855,     0,     0,     0,     0,  2411,     0,
       0,  2418,  2420,     0,  1101,     0,     0,     0,  1311,     0,
       0,  1187,  1159,     0,     0,     0,  1133,     0,     0,  2075,
       0,  1189,     0,  1188,     0,     0,     0,  1198,  1199,     0,
    1946,  1948,  1956,     0,     0,     0,  1178,  1196,  1197,     0,
       0,     0,     0,  1149,     0,  1138,  1200,  1200,  1158,     0,
     738,     0,  1217,  1160,   197,   202,   212,   213,  1087,     0,
    3569,  1083,     0,  1283,  1279,  1280,  1275,   116,   120,   112,
       0,     0,  2170,     0,     0,  3518,  3512,  3516,  2139,  2088,
       0,  3817,     0,  1746,  1702,     0,     0,     0,  1673,  1675,
    1522,     0,   977,     0,  1927,  1921,     0,     0,     0,     0,
       0,     0,  1940,  1932,     0,  1731,   655,     0,     0,   593,
     610,   609,   606,  2107,  2492,  2503,   557,     0,     0,  3316,
    3314,  2146,     0,  3665,  1155,  2357,     0,  3381,     0,  1956,
    1064,     0,     0,     0,     0,     0,     0,   741,     0,   667,
    1015,  1016,  1066,     0,   748,  1038,  2507,  1066,  1066,   778,
       0,   766,   776,   821,  2509,   553,   704,  2346,   703,   657,
       0,  2406,  3667,  3667,     0,   364,  3638,  3636,  3639,  3637,
    3773,  3721,  3722,  3726,  3724,  3735,  3728,     0,  3728,     0,
    3652,  3744,   262,   260,   261,  3657,  3656,     0,   264,     0,
     236,  3707,  1425,   208,  3753,  3615,  3585,  3615,   154,     0,
       0,     0,  1852,  1850,  2415,  2416,     0,  2413,     0,     0,
    2419,     0,  1108,  1104,  1109,     0,  1144,     0,  1163,     0,
    1132,     0,  1297,   956,  1170,     0,  1128,     0,  1172,  1173,
    1212,  1130,     0,  1949,   562,     0,     0,  1137,     0,  1215,
    1129,  1151,  1135,  1164,  1216,   204,  1117,   370,     0,     0,
       0,  1278,     0,  1285,  3752,  3749,     0,     0,  3517,  3515,
       0,  2083,  1823,  1956,  1753,  1752,  1592,  1568,  1663,     0,
    1937,     0,     0,  1935,  1934,     0,  1929,  1936,     0,     0,
     601,   617,   613,     0,   615,   616,   638,     0,  2112,  2114,
    2088,     0,  3694,  2360,  3351,     0,  1061,     0,  1062,     0,
    3351,  3351,     0,     0,     0,  1066,  1038,  2507,   997,     0,
     749,     0,   753,   755,   780,     0,   775,   767,   788,     0,
       0,   717,   549,     0,     0,  3740,     0,  3723,  3725,  3727,
       0,  3746,     0,  3745,  3615,  3658,     0,     0,  3659,   258,
    3615,  3615,  3579,   200,   209,     0,  3701,  3700,  3768,  3766,
    1811,  1816,     0,  1845,     0,     0,     0,  2414,  2422,  2421,
    3496,     0,  1146,   666,     0,     0,  1215,  1134,  1181,  1171,
    1190,  1169,  1311,  1947,     0,     0,     0,  1168,  1150,  1152,
    1258,     0,   206,   214,  3571,     0,     0,  1284,  1289,     0,
    1286,  1288,     0,  1398,     0,  2396,  1745,  1938,     0,  1939,
    1942,     0,     0,  1943,     0,   597,   599,   589,     0,   594,
       0,   611,     0,  2117,  2117,     0,  2117,  2117,  2117,  2117,
     631,   639,   641,     0,  2493,  2147,  2482,  1026,  1956,     0,
       0,     0,     0,  1028,  1030,     0,     0,   768,   761,   757,
       0,     0,  1001,  1039,     0,   751,     0,     0,   941,   995,
     806,     0,   809,     0,   779,   781,   934,   935,   783,     0,
       0,     0,     0,   822,     0,     0,   916,     0,   919,     0,
       0,   777,     0,   789,   915,   922,  2508,   699,   555,   718,
    3667,     0,  3667,     0,  3706,  3719,  3774,  3731,  3729,  3771,
    3664,     0,     0,  3757,  3708,     0,   211,  3707,  1847,  1846,
    1861,     0,     0,     0,     0,  1145,  1177,     0,  1167,  1131,
    1179,  1180,   563,     0,  1136,   205,     0,   198,  3572,  3573,
    1281,     0,  3750,  2140,   949,  1933,  1941,  1945,  1944,   595,
       0,   602,   624,   614,   620,     0,  2117,     0,     0,  2117,
       0,     0,     0,     0,     0,   608,   640,  2117,     0,     0,
    2117,     0,  1047,  1191,  1027,  1053,  1052,  1032,     0,  1060,
    1065,  1064,  3351,   185,     0,  1191,  1029,  1055,  1036,  1191,
    1031,  1054,  1034,     0,     0,     0,     0,   759,     0,  1000,
       0,  1005,     0,     0,     0,     0,   807,   808,   942,   782,
     940,   933,   927,     0,   921,     0,     0,     0,   818,   819,
     917,   815,   816,   817,     0,     0,   797,     0,     0,   923,
     914,   790,  3738,  3734,  3736,  3733,     0,  3652,  3615,  3615,
    3662,     0,     0,     0,     0,  3754,     0,     0,  1166,  1148,
       0,  1176,  1140,     0,   207,  1287,     0,  2397,   601,   598,
     624,     0,   622,     0,   618,   612,   619,     0,   650,   644,
       0,   646,   647,   645,   642,   635,     0,   633,     0,  1043,
    1046,  1991,  1044,   139,  1193,  1192,  1033,     0,     0,  1026,
       0,   145,  1037,   148,  1035,   764,     0,     0,     0,     0,
     998,     0,  1002,  1003,  1004,     0,   996,     0,     0,     0,
       0,   928,   932,   939,   938,   936,   937,  2454,  2453,     0,
    1432,   920,     0,   792,   931,   791,  3707,  3707,  3720,  3615,
     226,     0,     0,     0,  3706,  1425,   213,  1853,  1851,  1147,
       0,  2141,  2152,     0,  2423,   596,   621,     0,   629,   625,
     627,   630,   649,   648,     0,   632,     0,   643,  1045,  1195,
    1194,  1051,  1050,  1048,  1049,  1063,  1191,  1056,   765,     0,
    1062,     0,   999,     0,     0,  1026,     0,  1028,  1030,   814,
       0,   918,   784,   784,   798,  3615,  3615,  3775,  3732,  3584,
    3663,  3660,     0,  3709,  3580,   196,     0,     0,     0,     0,
    2409,   623,     0,     0,   638,   637,   634,   142,     0,     0,
    1062,  1011,  1010,     0,     0,  1007,  1006,   750,  1026,   754,
     756,  1433,     0,   795,   785,   787,   794,   800,   801,   799,
     802,  3703,  3702,  3739,  3737,   226,     0,     0,     0,  1153,
    2151,  2153,     0,  2417,   628,   626,   636,   762,  1026,     0,
    1014,  1012,  1013,     0,     0,   752,  1434,   786,   793,   803,
     805,  3730,  3661,  3710,     0,     0,  2425,   758,  1026,     0,
       0,   804,  3581,  2424,     0,  2429,   760,  1009,  1008,  3576,
       0,     0,  2436,  3574,  3575,     0,  3582,  2427,  2428,  2426,
       0,  2431,     0,  2433,  2434,     0,  2088,  3577,   370,  2435,
    2430,     0,  2437,  2439,     0,  2398,  3583,  2432,     0,  1425,
    2438,     0,  1426,  2440
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5346, -5346, -5346, -5346,  1243, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346,  1866, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346,   975, -5346,  -369, -5346,  -364, -5346,  -363, -3631,  -663,
    3684, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
    1136, -3534, -5346, -5346,  -876,   510, -5346, -5346,  -551, -5346,
    -916, -5346, -5346, -5346, -4703, -1067, -1283, -5346,    19,  4214,
    2822,    57,  3519, -4733,    92, -5346, -3506, -5346, -5346, -2563,
   -5346, -5346, -5346, -5346,  -235, -4855,   451, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346,  -615, -5346,   965, -5346, -4387, -5346,
   -5027, -5346,  -760, -5346, -5346, -5346,   976, -5346, -5346,  -141,
     446,  2409,  2472, -5346, -5346, -5346, -5346,  2596, -5346,  1888,
   -5346, -2173,  2847, -5346, -5346, -5346, -5346, -5346,  1887, -2959,
   -5346, -5346, -5346,   674, -5346,  -849, -5346,    33, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  -405, -5346,
   -2553,   904, -5346,   923, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -1563, -5346, -5346, -5346,    41, -5346, -5346,
   -5346, -5346, -5346,  2513, -5346,  4166, -5346, -5346, -3934, -5346,
    2307, -5346,  2309,  2310, -3348, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346,    42, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346,  3496, -5346, -5346,
   -5346, -3526, -5346, -5346, -3402,  2542, -5346, -2957, -5346, -5346,
   -3068, -5346, -5346, -2958,  1097, -5346, -5346,  1934,  -247, -5346,
   -2200, -3083, -2978, -5346, -5346, -5346, -3146, -3145,  -827,  2402,
   -1599, -3247, -5346, -5346, -5346,  -688,  -686,  -477,    66,   537,
   -5346, -4274, -5346, -5346,  -552, -5346, -5346, -5346, -5346, -5346,
     319,  -368,   321, -5346,   -67,  2093, -3317, -5346, -5346, -5346,
   -5346, -5346, -5346, -1041,  -614, -1145, -5346, -4667,  -361, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -4639, -5346, -5346,
   -5346, -1286, -5346, -5346, -1239, -5346, -5346, -1285, -5346,  -923,
   -5346, -5346, -5346,  1836,  3588, -2315,  -219,  -687, -5346, -4167,
      99, -3667, -4275, -5346, -5346,  -814, -1397, -1376, -1150, -5346,
   -5346, -5346, -5346, -5346, -5346,  -253,  -383,   103, -4674, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -4658, -4652,  -494, -5346,
   -5210, -5346,  -101, -5346, -4279, -5346, -5346, -5346, -5346, -5346,
   -5346, -1235, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -3984,
   -5346, -5346, -1073, -1078, -5346,  -975, -3285, -5346, -4689, -5346,
   -1356, -5346, -5346, -5346, -5346, -1588,   434,  3444, -5346, -5346,
   -5346,   236, -1513, -1713, -5346,   716, -1488, -1417,   964, -1072,
   -4519, -3298, -1323, -5346, -1334, -5346, -5346, -3760, -3939, -5346,
    -683, -2334, -3750,  -986, -5346, -5346, -2119,  -681, -2783, -5346,
    2558,  2555, -2516, -2461, -2362,   887, -5346, -5346,   417, -5346,
   -2048,   412, -5346, -5346, -5346,   421, -5346, -1234, -5346, -5346,
   -5346, -5346, -3951, -5346, -2998, -4696, -5346,  4617,  4618, -4029,
   -1200, -1198, -5346, -5346, -5346,  -748,  1288, -5346, -3702,  -991,
   -1004,  -999, -3717, -4929, -4531, -3899, -4014,  2560, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346,  -436,  -433,   761, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346,   165, -3640, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -4046, -3262, -5346, -5346,  -184, -4146, -4366, -4364,
   -4370,  3226, -5346, -5346, -5346, -5346,  3634, -3955, -3761, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346,  2783,  1281, -5346, -5346,
    1315, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
    -800,  1324, -5346, -5346, -5346, -5346, -5346,  1867, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346,  -937, -5346, -5346, -5346,
   -5346, -5346,  -635,  2625, -5346, -5346, -5346, -5346,   -20, -5346,
   -5346, -5346, -5346,  1469, -5346, -5346, -5346, -5346,  2061, -5346,
   -5346, -5346, -5346, -5346, -5346,  1052, -5346,  1704, -5346, -2949,
   -5346, -5346,   565,  -618, -5346, -5346,  -421, -5346, -5346, -5346,
   -5346, -5346,    35, -5346, -5346, -5346,  4623, -1939,    10,  -459,
   -5346, -5346,     8, -5346, -5346,  3712,  -352,  1530,  -733,  4373,
   -5346, -5346, -5346, -5346, -3017,  1406, -5346,  3764, -5346, -5346,
    3942,  1287,  3733,  1294,   158,  1492, -2092,  -619, -3612,   464,
   -5346,  1490,   989,  9540, -1912, -1965, -5346, -5346,   -75, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  1600,  1611,
   -5346, -5346,  3095, -4258, -5346, -5346,  -870, -5346, -2970, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,   945,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346,  3042, -2015, -5346, -5346,  3190, -5346,
    1035, -5346,   160, -5346, -5346, -5346, -1527, -5346, -3347, -5346,
   -5346, -5346, -5346, -5346, -1944,  -695, -5346,  3179, -5346,  3215,
   -5346, -1299, -2161,  2793, -5346,  3800, -5346, -5346, -5346, -5346,
   -5346, -5346,  2800, -5346, -2552, -5346, -2999,  3802,  3804,  3805,
   -5346,  3806, -5346, -5346, -2185,  -337, -5346,   -34, -5346, -5346,
   -5346, -5346, -5346,   441, -5346,  -838,    73,  -828, -4229, -1891,
     715, -5346, -5346, -2218,  2830,  3247, -1336, -5346,  2025, -5346,
    2806,   998, -5346,  1354, -5346,   338,   341, -5346, -5346,  1003,
   -5346, -5346, -5346, -5346,  -163,  -712, -5346, -5346, -5346,  -544,
     107, -2545, -5346,  -154, -3734,  3823,  -314, -1252, -5346, -1421,
    1360,  -177,  4459,  -490, -5346, -5346,  3793, -5346, -3269, -5346,
   -1195, -1958, -1119, -3614, -5016, -3712, -5346, -2538, -5346, -5346,
   -5346, -5346, -5346,   353, -5346, -5346, -5346,  2064, -5346,  4751,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
    -738, -1244, -5346, -5346,  1852, -1700,  -553,  4772,  -411, -5346,
   -5346,  -410, -5346, -5346,  4577, -2431, -5346, -5346,  4051,  2591,
    1820, -5346,   681, -5346, -5346, -5346, -5346,   543, -5346, -5346,
    -400, -1103,  2534,  1352, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346,   119, -5346, -2276, -5346, -5346, -5346, -5346,  -407, -5346,
   -5346, -5346, -5346,   516, -5346, -1054, -5346,  -404, -5346, -5346,
   -5346,  4385, -5346, -5346, -5346, -5346, -5346, -5346, -4429, -5346,
   -5346,  2665, -1794,  4389, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346,  2219, -5346, -5346, -5346, -5346, -5346, -5346,  3054,  4588,
    -682, -2043, -5346, -1104,  2231,  1540, -1086, -5346, -5346, -5346,
    3843,  4601, -5346, -5346,  4769, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346,  2193,  -409, -5346, -5346, -5346, -5346,
   -5346,  -132, -5346, -5346, -5346, -5346,  2962, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,  3399, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346,   712, -1026, -5346,    60, -1066, -5346,  -243, -5346, -5346,
   -5346, -5346, -5346, -1121, -5346, -5346, -1126, -5346, -1430,  4306,
   -1395, -5346, -2123, -3895, -5346,     4, -5346, -5346, -5346,  2238,
   -5346, -5346, -5346, -5346,  1889, -3019, -5346,   -92, -5346, -5346,
   -3122,  -984, -2028, -4243,  4595, -5346, -5346,    39,    20,  4497,
     123,   942, -1310, -5346, -5346,  1830,    -3,  1878,  -500,  -762,
    -783, -1130, -5346,  7765, -5346, -5346, -3315,    18,  -628,  -622,
     226,    87,   150,    50,    48, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346,  1596,  1599, -5346,  4634, -5346,
    2621,  2341, -5346, -5346, -5346,  1601, -5346, -5346, -5346,  4641,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
    1610,  1619,  1621, -5346, -5346,  1069, -2743, -5346, -5346, -2290,
     149, -5346,  2661, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
   -5346, -5346,  2977,  -602,  -576,  3185,  4651,  4158, -5346,  3449,
   -5346,  3450, -5346,   874, -5346, -1270,  1673, -1793, -3824, -5346,
   -5346,  2099,   452, -5346, -5346, -3003, -3331, -5346,  1526,   350,
   -5346, -5346,  -263, -5346, -5346, -5346,   873,    98,  4635,  4027,
   -5346, -5346, -5346, -5346,  4855,  2073, -5346,   881,  4880,  4885,
    4886,  -170, -5346, -3757, -5346, -4657, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5046, -5346, -5346, -5346,
    2244, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346,
     -74,  4397, -5346, -5346, -5346,   792, -3124, -3305,  -677, -5346,
   -5346, -5346, -5346, -5346,  2672, -5346,  1273, -5346, -5346,  -788,
   -2374, -5346,  -358, -2613, -5346, -4234,    24,  -626,  4405, -5346,
   -5346, -5346, -5346, -5346,  4390, -5346, -5346,   611, -5346, -4268,
   -4272,  -782, -5345,  -931, -4230, -5346, -4169, -5346, -5346, -5346,
    1013, -5346, -5346,  1558, -5346, -5346, -5346, -5346,  -326,  -332,
    -316, -5346,  -313, -5346, -5194, -5346, -5346, -5346, -5346,  -323,
   -5346, -5346, -4755, -5346, -5346,  -131, -5346, -5346, -5346, -5346,
   -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -5346, -2676,
   -5346, -5346, -5346,  3569, -5346,  4521, -5346,  -956,  4414, -5346,
   -5346, -5346, -5346, -5346, -5346,    44, -5346, -5346, -5346, -2548,
   -5346
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,   469,   759,  2365,   470,   471,   472,   473,   474,  2331,
     475,  1322,  3096,  1324,  2296,  3099,   476,   728,   477,  2503,
    3302,  3303,  4991,  4992,  4985,  4986,  4988,  4989,  3304,   847,
     848,   478,  3152,  4368,  3834,  2367,  5156,  3146,  5434,  2372,
    5159,  2373,  5160,  3144,  4384,  4876,  2379,  2380,   768,  4369,
    3920,  3921,  1383,  3830,  3929,  3930,  3159,  4864,  4971,  5795,
    4975,  5932,  6067,  5893,  3957,  5324,  5796,  5797,   661,  1394,
    2646,  5896,  2464,  5744,  5519,  5520,  3229,   479,   839,  1503,
    2492,  2493,  5224,  5225,  4012,  4013,  4014,  5516,  5517,  5735,
    4859,  5217,  4867,  3081,   975,  1801,  3366,  3367,  2569,   863,
     864,  2577,   865,  3392,  3327,  4080,  4081,  4568,   866,  4050,
    4051,  4052,  3396,  1195,  4053,   480,   481,   682,   691,   683,
    1192,  2954,  1193,   482,   483,   726,  2321,  2322,  2323,  2324,
    3796,  3115,  3790,  3791,  4797,   867,   868,   976,   662,   977,
     978,   979,   980,   981,   982,   983,   984,   985,   954,   843,
    3426,  3476,  4101,  3427,  4082,  3477,  2696,   986,   987,   988,
     989,   990,  1947,   955,  2666,  4091,  4582,   991,   637,   844,
    1506,  2497,   845,  2498,  3966,   846,  2495,  1509,  4106,  2634,
     909,  1867,   992,  1201,  4107,   993,  2703,  2705,  2702,  4105,
    5024,  2704,   994,   672,   701,   660,  1865,   688,  5221,  5526,
     817,   818,   855,  3325,   819,  1516,  1476,  2469,  3257,  3258,
    3935,  3936,  4001,  4002,  4003,  3249,  3250,  3251,  3314,  3315,
    3316,  3238,  3239,  3240,  2473,  3235,  3236,   820,  1477,  1488,
    3252,  3253,  3254,  4007,  3318,  3319,  3320,  3321,  3255,  2623,
    3256,  4438,  4843,  5213,  4844,  5500,  4724,  5208,  5209,  5210,
    5583,  3775,   487,   675,  1178,  2150,  2946,  4251,  3658,  3660,
    2947,  4250,  4706,  4707,  4708,  3656,  3657,  5659,  3662,  4248,
    5830,  6188,  5954,  5955,  4240,  5959,  4715,  5104,  5105,  5404,
    5660,  5836,  6085,  5960,  6195,  6083,  6191,  6084,  6193,  6333,
    6279,  6280,  6095,  6206,  6207,  6284,  6334,  5970,  5971,  5972,
    4245,  5401,  5710,  3821,  3822,  2459,  5560,  1333,   488,  4845,
    4955,  4846,  4847,  5470,  6028,  4848,  4849,  4850,  4075,  2226,
    5496,  5482,  4874,  5599,  4851,  5164,  5165,  5166,  5167,  5994,
    6133,  5996,  5997,  6126,  6229,  6125,  5168,  5169,  5442,  5866,
    5450,  5284,  5170,  5171,  5172,  5457,  5701,  5868,  5864,  6004,
    6005,  6353,  6354,  6021,  6314,  6022,  6360,  6388,  6389,  6006,
     489,   674,  2099,  6148,  6149,  6150,  1803,  5702,  1804,  1805,
    2540,  1806,  1807,  1808,  1809,  1810,  1811,  1812,  1813,  1814,
    1815,  3389,  2587,  2528,  3340,  3341,  2519,  2520,  2586,  6023,
    6024,  3333,  2524,  6242,  2525,  3356,  6161,  6007,  6025,  6009,
    2544,  2177,  2178,  3868,  2192,  2193,  3345,  2985,  3346,  2462,
    2545,  2546,  3349,  2547,  3354,  4680,  5389,  4686,  4687,  4688,
    4209,  4210,  4211,  4212,  4213,  3619,  6010,  5694,  5992,  6128,
    6131,  6236,  6345,  5451,  5173,  5455,  1292,  5174,  5175,  6103,
    6115,  6119,  6104,  6120,  6116,  5860,  3825,  6105,  6106,  6107,
    6122,  6118,  4359,  5678,  5981,  5679,  5438,  3358,   490,   625,
    4491,  1464,  3215,  1466,  1475,  3961,  3266,  3265,  1481,  1480,
    3244,  4456,  4926,  5264,  4490,  3958,  4495,  5608,   804,  4957,
    5922,  5772,  5930,  4958,  5142,  4959,  5912,  6055,  4960,  5791,
    5928,  6063,  5143,  5144,  4961,  4962,  4963,  6213,  6214,  6215,
    5273,  2271,   823,   824,  1493,  1494,  1495,  3421,  5603,  5296,
     491,  3136,  3131,   492,  1350,  1351,  1352,  2343,  2344,  3134,
    3135,  3816,  4349,   493,  1317,  3092,  2333,  3123,   494,  1336,
    3807,  3808,  3809,  4344,   495,  1501,  2489,  2490,  3270,  4502,
    4983,  5329,  5616,  5803,  5612,  5939,  5940,   496,   851,  1512,
     497,   639,  2512,  2513,  2514,  3306,   498,  1958,   633,   499,
    2159,  2156,  2960,  2961,   500,  1316,  2283,  2284,  2285,  2286,
    3771,   501,  2674,  3444,  3445,  3446,  3447,  3087,  4321,  3088,
    3089,  3780,  4588,   502,   782,  1456,   503,   781,  1455,   504,
     505,   700,   754,   693,  2168,   507,   508,  4725,  2747,   510,
     788,   786,  1142,   512,  1449,  1445,   513,  2748,  1143,   778,
     779,  1401,  1222,  3853,  3854,  2607,  2608,  3191,  3178,  1223,
    1224,  1427,  2437,  3203,  2974,  2975,  2267,  2976,  4266,  4734,
    6311,  1987,  1877,  1320,  1145,  1146,  2118,  2119,  2126,  1147,
    2120,  2900,  4650,  5067,  5068,  5069,  5070,  5380,  2829,  2830,
    2941,  1148,  2816,  1149,  1150,  1151,  1152,  1153,  1154,  1155,
    1156,  1157,  1158,  2936,  4631,  4632,  5049,  3651,  3652,  3653,
    1159,  3505,  4615,  3516,  3517,  2776,  1160,  1161,  1162,  1163,
    1164,  4233,  1165,  4702,  4416,  1166,  1959,  2710,  2774,  5036,
    4620,  5358,  5038,  5039,  5040,  5363,  2715,  3493,  4134,  5027,
    5029,  5030,  4135,  4136,  2833,  2834,  2008,  2009,  1976,  1977,
    4188,  1402,  1403,  1404,  1405,  1406,  4400,  4401,  5230,  4880,
    5232,  4884,  2402,  2403,  2406,  2407,  1407,  1408,  1409,  1410,
    2390,  1411,  1412,  1413,  3183,  5752,  5238,  5239,  5906,  5905,
    5240,  4889,  4890,  4404,  4405,  4777,  4778,  4779,  3864,  2770,
    2771,  2845,  2679,  2680,  2681,  2716,  1421,  2417,  3199,  3874,
    2419,  3872,  4411,  3876,  4417,  4418,  2931,  3644,  4229,  3646,
    5095,  5396,  5397,  5652,  5820,  5821,  5826,  4966,  5580,  5581,
    3407,  1428,  3211,  3886,  4414,  2228,  2229,  2230,  2427,  3879,
    3880,  4069,  1430,  1431,  1443,  1448,  1434,  1432,  3397,  4922,
    3398,  4214,  4196,  5148,  4439,  2739,  2740,  5463,  5079,  1435,
    3212,  4425,  4426,  4427,  1417,  1418,  2412,  2413,  2414,  1436,
    1419,  3192,  4407,   514,   721,   515,  2630,   894,  1862,  2629,
    3787,  1514,  4258,  2602,  2603,  1849,   812,   659,   516,   663,
    4583,   517,   689,  4257,   956,  3230,  1905,  2161,  1906,  2965,
    3672,  3673,  4726,  5115,  4727,  5108,  5109,  4728,  1305,  5412,
    5413,  1462,  4452,  4453,  4447,  3076,  3761,  1306,  2272,  4311,
    3073,  4312,  3074,  4313,  5349,  5810,  6186,  3070,   518,   698,
    4764,  5840,  4305,  4306,  6271,  6272,  1303,   519,   644,  2601,
     890,  1838,  1841,  1842,  2611,  5009,  3403,  5339,  4563,  5008,
    1843,  1844,  3405,   891,   892,   520,   742,  3817,  1356,  2250,
    2251,  2252,  3057,   521,   695,  1293,  4300,  4761,  3043,   678,
    1860,  2233,  1296,  2234,  3039,  3745,  2214,   522,  1453,  1452,
     838,   523,   524,   794,   634,  2441,   525,  1325,  2314,  3112,
    4327,  4328,  4782,  2315,  2316,  3788,   526,   707,  1310,  3784,
    5149,  5150,  5431,   527,   733,  1340,  1341,  2337,  2335,  3812,
    3126,   528,  2948,   529,   664,   959,  1909,  1910,  2672,   530,
     736,  1345,   531,   532,   961,  4589,  6074,  6274,   668,  2676,
    1914,  5501,  4892,  5245,  5246,  5248,  5551,  5552,  6330,  6405,
    6419,  6412,  6422,  6423,  6426,  6432,  6433,  1167,  1363,  1364,
    1168,  6153,  1169,  1170,  1171,  2749,  1309,   703,  2275,  2276,
    5423,  5672,  3080,  3764,  2663,  2664,  2277,  5110,  5111,  3682,
    3873,  1172,  4307,  5439,  1515,  2604,  1328,   602,  1173,   603,
     814,  1365,  2409,  3453,  1243,  3693,  1175,  4108,  1471,  2157,
    2478,  2479,  3454,   605,  3694,  1244,  1817,   606,   607,   608,
     609,   610,   611,   612,   613,  1824,   541,   694,  1252,  2189,
    2197,  2994,  2187,  3006,  3726,  3008,  3009,  3731,  3010,  1299,
    2980,  2188,  3715,  4747,  4746,  3007,  4292,  5130,  5129,  3011,
    3002,  4288,  4274,  3703,  4741,  5418,  5417,  2989,  2988,  2987,
    2997,  2998,  2999,  3000,  4285,  3711,  2452,   542,   962,  2685,
     671,  1916,  1917,  3467,   543,   697,   544,   727,  1330,  3119,
    3800,  3801,  4340,  4799,  4341,   545,  1207,  1208,   546,   946,
    3828,  3430,  2619,  1474,  2620,  2647,   949,  1869,   950,   951,
     952,   953,  4480,  3950,  3951,  3435,  2627,  2480,  2970,  3943,
    4912,  2481,  4474,  4475,  4913,  3263,  5625,  4487,  3954,  5346,
    4573,  5626,  5627,   547,   708,   548,  5521,   720,  1319,  2293,
     549,   550,   551,   552,   787,  1439,  1225,   626,   627,   628,
     629,   827,   828,  3960,  4497,  4978,  4979,  5610,  6415,  6416,
    3158,  4382,  6045,  6368,  6409,  6428,  5531,  5532,   553,  1370,
    1366,   753,  2363,  2357,  2359,  3142,  3820,   554,   555,   556,
    4860,   557,  1944,  2700,  4104,  3439,  2499,  1825,   614,  1927,
     877,  4353,   911,  3368,  1308,  3077,  2632,   995,   996,  5884,
    3373,  5737,  5518,  2500,  2501,  5726,   878,   879,   559,   560,
    1457,  3213,  3214,   997,   998,  4320,  4773,  4774,  5139,  4868,
    4869,  4862,  5898,  6363,  4374,  2280,  5890,  5891,  6172,  6367,
    4378,  4379,  4380,  3836,  3837,  6036,  5720,  5721,  5722,  5880,
    5729,  6169,  5727,  6168,  5723,  6033,  6257,  6031,  6256,  5724,
    5512,  5513,  5725,   880,  4016,  5745,  5895,  3839,  4381,  5522,
     561,   562,  3156,  4387,  4385,  5216,  5508,  5876,  6167,   881,
     882,  1833,   883,   884,  2596,   885,  2517,   999,  1000,   563,
    1001,  2707,  2706,  4111,   713,  1002,  1314,   643,  1832,  2281,
    3768
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     604,   711,   712,  2428,   533,   636,   673,   826,   511,   755,
     509,  1241,  1291,  1295,  1802,   871,   832,  1255,   535,  1942,
    3101,   872,  2926,  2442,   558,  1473,  1321,   684,  2738,  2429,
    3485,  2956,   684,   484,   912,   506,  3232,   684,  2257,   534,
     699,   485,   486,  1400,   564,  3399,  1472,  3400,   540,  2523,
     539,  2613,  2541,  3440,  2746,   692,  2527,  4026,  2800,   947,
    3765,  2875,  3139,  3381,  3408,   635,  1246,  2460,  2158,  2010,
    4267,   822,  1247,  1200,  1377,  1347,  1378,  1859,  1354,  1380,
    1381,  2529,  3350,  4032,  2531,   948,  2420,   537,  2461,  3887,
     947,  3779,   893,  4527,   896,   897,   898,   899,   900,  2385,
     902,   903,  2585,  2641,   905,   906,  2410,  4360,  3118,  2529,
    3069,  2780,  2352,  4861,  1513,  4875,  1209,  4406,  3350,  2521,
    3027,  3028,   816,  4566,  1835,  4964,  2856,  4965,  4887,  5218,
    4299,  2179,  2182,  2183,  1199,  4109,  4110,  3479,  3776,  2955,
    2196,  4854,  3475,  3217,  4429,  3829,  4309,  3114,  2879,  3965,
     538,  1970,  2551,  4423,   724,  4998,  3789,  4142,   723,  3486,
    3856,   945,  2911,  2912,  2913,  2914,  2915,  2916,  2917,  2919,
    2921,  2922,  2923,  2924,  2925,  3938,  3034,  2529,  4595,  4008,
    4009,   687,  5534,  2224,  4348,  4138,  1826,  3860,  2259,  4138,
    1357,  1358,   945,  4440,  2888,  4139,  3050,  2956,  5505,  4139,
     716,  3706,  4853,  3380,  4499,  2258,  3855,  3855,  2899,  2901,
    3351,  2904,  2905,   833,  1315,  3187,  4956, -1897,  3382,  4440,
    4440,  3063,  3064,   834,   835,  3111,   536,   836,  1331, -3374,
     837,  3393,   842,  1519,  -554,  1819, -2808,  1460,  -375,   718,
    2054,  1820,  4005,  2080,  1942,   800,  3712,  3998, -1074, -2655,
    1460,  2084,  4390,  4372,  5270,   871,  3940,  2491,  -658,  3724,
    2624,   872, -3375,  2677,  3305,  2095,  2097,  2098,  5320,  3241,
    5271,   740, -3638, -3635,  2560, -2517,  5272,  2140,  2566,  4343,
    3939,  3907, -3640,  4440,  4440,  2548, -2518,  -364,  1883,   800,
    -659, -3636, -3639,  3934, -3637,  2550,  1307,  5116,  1447,  2529,
     715,  4999,  5620,  2529,  2588,  2955,  2543,  2543,   665,   731,
    6194,  6041,  2589,  6262, -2620,  3317,  2532,  2543,  4408,  4409,
    4471,   732, -3451,  5328,  3261,  2215,  2549,  3393,  2529,  2529,
    1500,  4376,  4195, -3434,  3393,  4721,  4722,  2529,  4619,  4981,
    2456,  4242,  1850,  4350,  5614,  3393,  2677,  4006,  4722, -2620,
    2456,  2555,  5976,  4373,  1863,  1864,   825,  4193,  4372,  3393,
     735,  4512,  5515,  2556,  3393,  3393, -2616,  2558,  5021,  3393,
    3393,  3393,  4938,  3628, -2671, -3438,  2567,  5673,  2570,  2571,
    2572,  2573,  2456,  2574,  4062,  3377,  4455, -3374, -2672,  1460,
    5950, -3437,  2554,  2579,  2580,  2581,  2582,  2583,  3823,  2361,
    3429, -2616,  5899,  1858,  2731,  2732,  2733,  5461,  2734,  4470,
    2735,  3654,  2736,  5804,  2543, -2117,  3393, -2117,  3487,   669,
   -3375,   886,  5076,  2553,  2731,  2732,  2733,  2557,  2734,  1460,
    2735,  3855,  2736,     4,     5,  1446,  1505,  5464,  5466,  4731,
    4732, -2117,  5468,  5486,  4449,  2717,  2718,   669,  3629,  2543,
   -2673,  1386,  1460,   734,  2728,   887,  3337,  1460,  4373,  1227,
    3419,  5514,  5022,  3827,   886,  2561,   783,  1429,  3090,  1491,
    3889,  3890,  1429,  2181,  1429,  4298,   756,  1460,  3338,  5456,
    4445,  5714,  2522,  1460,  2220,  2790,  3945,  2793,  3663,     4,
       5,  5867,   709,  4492,  4748,  2222,  4500,   784,   887,  4095,
    6053,  3941,  2291,  2807,  2808,  2609,  2811,  5683,  5684, -1857,
    1460,  2456,  2817,  2818,  1460,  2677,  2822,   715,  4451,  3757,
     797,  1450, -3675,   715, -2808,  5509,  1953,  1415,  5879,  5712,
   -3374,  4386,  4296,     4,     5,  4682,  1902,  1227,  3630,  6039,
    2327,   511,  5161,   799,  5523,  6043, -2511,  5045,  2106,  2107,
    2108,   630,  2109,  3223,  2105,  4682,  2106,  2107,  2108,  5274,
    2109,  5276,  2110, -3375,  5286,   666,  5528, -3435,   506,   876,
    5176,  2111,    37,  2889,  1946, -2307,  4723,  3148,  5304,  2288,
   -3436,   777,  1348, -3441,    37, -3676,  5291,  5077,  4683,  4919,
    5524,  5861,  1848,  2105,   680,  2106,  2107,  2108,  2677,  2109,
    4539,  2110,  1392, -1897,  1437, -3672,  5990,  1517,  4683,  5219,
    2111,  2127,   805,   636,  3946,   685,   636,  4935,  2457,   815,
     821, -2307,  4486,  2253,  4704,    44,   714,  4865,  2457,   737,
    4712,  3420,  3777,  3091,    46,  5021,   785,    44,   533,   821,
    2128,  2129,   511,   710,   509,   702,    46,  3778,  2890,  1433,
    5951,   638,   821,   715,  1856,  5458,  2212,  5234,   815,  1499,
    2457,   870, -1857,  1438,  5290,  1400,  2112,  1349,  4375,   506,
    5458,  -770,  3670,   806,  2112,  3777,   809,   840,   535,   755,
    2328,  4956,  1197,  5879,  4466,  4467,  2127,  3464,  6054,   815,
    3778,   875,  2368,   539,  5714,  2371,  -771,  4451,  4870,  2374,
    2375,  2377,  2378,  1311,  2130,  1198,  4298,  5046,   540, -2307,
     539,   815,  1245,  2112, -1897,  2128,  2129,  6320,  2127,  5176,
   -1897,  2537, -2307,  2113,  1329,   815,  2171,  2477,  4544,  5022,
     874,  2626,    14,  1242,  2180,  5525,  2184,  3465,  2891,  1416,
    2254,  2194,  1251,  2578,  1250,  1268,  2223,   537,  4533,  4534,
      37,  1454,  5848,  5691,  4871,   676, -1897,  1376,  5731,  4493,
    2638,   849,  2113,  5510,  4572, -3675, -2307,  5713,  5703,  1903,
   -1897,  2227,  1954,   797,  2504, -2307, -2178,  4940,    21,  2130,
    6114,  1248,   831,  4950, -2307,  2131,  3708,    37,   852,  2457,
    1451,  6099,   888,   538,   907,  1444,  3758,  3664,  1458,  1459,
    2213,  2511, -2178,    44,  4450,   815,  1312,  1478,   908,  6098,
     538,  2130,    46,  3948,  3655,  5292,  3503,  5952,  4501,  3824,
    3542, -1857,  1003,  1268,  3339,  4440,  1387,   815, -3676,  4872,
   -3560,  2292,  2114,  4389,   832,  4749,  4455,  1504,   704,   670,
      44,  1489,  6178,  3501,  1249,  4297,  1301,  6099, -3672,   797,
    2221,  1478,  3938,  1334,  4282,  3378,  4008,  4009,  4395,   632,
    2131,   849,  4399,  3262,   849,  3262,    34,   670,  4351,   873,
    3243,  2114,  2518,  4376,  4553,  4472,  2362,   535,  5748,    37,
    3855,  1818,  5220,  5805,  5515,   741,   536,   889,  1845,  3438,
    1847,  6099,  2131,   636,   636,   636,   636,  1855,  1478, -3451,
     815,   870,  1492,  6190,   669,  6100,  5118,   540,  5293,   539,
   -3434,  1823,  2294,  2511,  6317, -1897,  3323,   667,  2416,  4005,
    5629,  1857,  5270,    42,  1861,  3140,  3942,  2511,  3416,  4535,
     889,   875,    44,   539,  4718,  1884,  5311,  2482,  5271,   755,
    4479,    46,  2216,  4908,  5272,  4964,   537,  4965,  4442,  2255,
    1822,  1461, -3438,  1851,  1852,  1853,  1854,  3939,   705,   797,
    5953,  6100,  1933, -2655,  1461,  2445,  2678,  3394, -3437,  1937,
     874,  1940,  4280,  3866,  3955,  4298,  4468,  3631,  -114,  5881,
    -114,  2055,   533,   801,  2081,  1948,   511, -2655,   509, -1897,
    3622,  3623,  2085,  2081,  3636,  3637,   535,  3640,  3641,  3858,
    3859, -3374,   558,  4042,  4043,  6100,  -554,  2744, -2808,   538,
    -375,  1926,  1926,   506,  1926,  1926,  1926,   534,  3752,  2624,
   -1074,  1926,  4045,  2010,  4006,  1963,   540,  2699,   539,  2618,
    -658,   833, -2517,   538, -3375,  2968,  4956, -3638, -3635,  3241,
    5894,   834,   835, -2518,  2526,   836,  5503, -3640,   837,  2678,
    1924,  1924,  -364,  1924,  1924,  1924, -3636, -3639,  3937, -3637,
    1924,  2460,  -659,  3394,  4982,   537,  5000,  5621,  2981,  5615,
    3394,  5176,  5255,  2011,  6201,  6202,  6042,  4410,  6263, -2620,
    3025,  3394,  2461,  2992,  5883,   536, -2620, -2620, -2671,  1821,
    4194,  3394,  -118,  3173,  -118,  3394,   468,  1446,  2095,  2097,
    3394,  3394, -2672,  1461,  3188,  3394,  3394,  3394,   468,   873,
    4428,  2539, -2671,  1925,  1925,  3317,  1925,  1925,  1925,  5229,
    4684,  1374,  3359,  1925,  2628,  4004, -2672,  6244,   538,  3359,
    3031, -2616,  3033,  4078,  2477,  3037,  4996,  2103, -2616, -2616,
    4684,  1429,  2102,  1461, -3435,  4586,  2100,  3045, -2117, -2117,
    3048,  6102,  3394,  2737,  3051,  5136,  4923, -3436,  3062,  5249,
   -3441,  2104,  5252,  -110, -2673,  -110,  1461,  4140,  2511,  4141,
    2957,  1461,  5155,  6351,  4195,  4195,  6013,  2892,  4195,  4195,
    5212,  3066,  3067,  3068,  4195,  4195,  3348,  6321, -2673,  1923,
    1923,  1461,  1923,  1923,  1923,   815,  2533,  1461,  3332,  1923,
    3335,  6292,  5176,  6237,   536,  6239,  6240,  6102,  2543,  2518,
    1227,  2127,  2535,  3347,  3374,  2195,  4921,  3375,  2678,   677,
    2708,  2991,  5798,   815,  1461,  3383,  2384,  5286,  1461,  3262,
    6101,   815,  3360,   815,  2127,  2217,  2543,   669,   815,  2543,
    2128,  2129,  5402,   738,  3365,  4685, -2307,  2543,  3727,  4070,
   -3466,  6102,  4270,  3207,  4283,   947, -2178,  2329,  2186,  3384,
    3466,  3404,  3532,  2128,  2129,  3535,   709,  3308,   815,  2115,
    2116,  2117,  2928,  6365,   468,  2130,  5728,  2115,  2116,  2117,
    5261,  4284, -2178,  3550,  2725,  5253,  4873,  4071,  4893,  5294,
    4995,   739,  5741, -1897,  3564,  2942,  3504,  4524,  6299,  6300,
    4896,  2678,  1902,   709,  2130,  5071,  2278,   797,  5749,  6306,
    5750,   468,  5789,   797,   797,   717,  2115,  2116,  2117,   640,
    5769,  3502,  5771,  2294,   670,  5774,  3709,  2130,  4920,  3394,
    2330,  5262,  5779,  5780,  4331,  4332,  2957,  4138,  3626,  2340,
     630,  3710,  5786,   669,   706,  2235,  2325,  4139,  5176,  6341,
    2824,  2943,  2127,   797,  2353,  5235,  2131,   945,  2134,  2135,
    2136,  2137,  2138,  2139,   850,   709,  4356,  2848,  4630,   772,
   -3263,  3789,  6340, -3670,  2366,  4877,  4878,  3436, -3466,  4984,
    2121,  2128,  2129,  2969,  2995,  2131,  3938,  6180,  2682,  2903,
    1318, -3273,  4008,  4009,   719,   797,  2392,  4881,  4882,  2369,
    2370,  5635,  2102,   468,  1472,  3029,  2100,  3035,  2131,   849,
    2105,   849,  2106,  2107,  2108,  2415,  2109,   630,  5631,  3334,
    1892,  4910,  3855,  3855,   -71,   957,  3247,  2111,   857,   858,
    2435,  2132,  2133,  2134,  2135,  2136,  2137,  2138,  2139,  5695,
    2562,  6417,  3804,  6192,  2430,  2130,  6196,  3804,  4488,  2262,
    2443,  2444,  1912,   783,  3049,  4005,   533,  1444,  3208,  2711,
     511, -1371,   509,  4525,  2151,  2134,  2135,  2136,  2137,  2138,
    2139,  3247,  2537,  2122,  2318,  1472,  2231,   797,  1227,  5728,
    3218,  2354,  4357,  6312,   784,  2334,   815,   506,  3468,  2123,
    2538,  3939,  5916,  4252,   636,   797,  1268,  2232,   797,  6040,
   -1371, -1311,  4440,  5799,  6160, -1371,  4323,  3217,  5236,   797,
     829,  4547,  4298,  4549,  3014,  1241,   710,  1907,  2395,  6418,
    6342,  1255,   709,  2687,  5776,  2289,  2131,  6318,  5176, -3673,
    2112,  4742,  5919,  2693,  6343,  1903, -1371,  2121,  1400,  6232,
    3443,  4592,   755,  2956,  5502,  4751,  3419,  2395,  2218,  4754,
    3475,  5403,  1885, -2309,  2486,  2105,  2124,  2106,  2107,  2108,
    4006,  2109,  2683,  2110,  4158,  4526,  3350,  2346,  3350,  3237,
    1246,   947,  2111,  5471,  5013,  5014,  1247, -3466,  1970,  1893,
   -3671,  2396,  6303,  5484,  5485,  2105,  2455,  2106,  2107,  2108,
    2505,  2109,  2397,  2110,  1830,  1904,  3124,  2982,  2684, -2309,
    2398,  2721,  2111,  6326,  2682,  3616,  5636,  3805,  2477,  2841,
    2396,  2842,  3805,  3247,  3237,  3922, -3670,  3248,  4072,   641,
    5807,  2397,  1342,   785,   709,  5633,  2399,   958,  2944,  2398,
    2122, -3263,  6391,   709,  3633,  4084,  4095,  5566,  6331,  2121,
    3243,  2927,  3242,  6030,  6032,  2996,  2123,  3108,   632,  3548,
    5800,  2955, -3273,  3072,  3635,  2399,  1396,   670,  2236,  1400,
    1913,  4358,  3248,  4911,  5655,  6047,  6233,  5237,  6052,  5595,
    1400,  1400,  2563,   945,  3127,  2112,  5351,  6000,  5856,   631,
    2400,  2263,  6061,  5862,  5863,  3150,  3151, -2309,  3322,  3154,
    4241,  4226,  2152,  2746,  3161,  3162,  3163,  2332,  2621,  5279,
   -2309,  3678,  3679,  4246,  4234,  2112,  3241,  4729,  2401,  2400,
    4304,  4489,  5489,  2124,  2533,  5831,  3323,  3420,  3030,  1894,
    3036,  4220,  5203,  4223,  2113,   632,  4011,  5624,  1227,  3806,
    2535,  2290,  2122,  5263,  3806,  3937,  6160,  2401,  4325,  1908,
    6313,  5914,  2347,  6234, -2309,  5929,  4333,  2460,  2123,  5280,
    -994,  4227,  4228, -2309,  2113,  2963,  3237,  6152,  1482,  2594,
    3157,  3160, -2309,   670,  1268,  6001,  3777,   947,  2461,  6339,
    1886,  5641, -3673,  6304,  5446,   710,  2264,  2127,  2683,  3219,
    2511,  3778,  1483,  4565,   710,  5394,  3882,  3883,  6182,   860,
     861,  4334,  2265,  2212,  2722,   686,  6162,  3317,  6164,  6152,
    5902,  1467,  4004,  3530,  3248,  3749,  2128,  2129,  5395,  6379,
    2429,  5999,  2429,  2429,   642,  2124,  1289,  5773,  2460,  3113,
    2506,  5903,  1484, -3671,  2945,  5921,  2591,  5447,  3667,  3668,
    3170,  3718,  3171,  2114,   797,  1835,  2605,  1831,  2682,  2461,
    5204,  5988,  -769,  6344,  3201,  2642,  2615,   636,  5783,  6290,
    6289,  2977,  4335,  1887,   815,   757,  2643,  3707,   815,   797,
    3143,  1393,  2539,  2114,  4469,  3237,  3847,  5904,  3221,   945,
    2130,  3149,  3848,  2622,  5998,     4,     5,  6002,  6175,   783,
    3705,  5947,  6000,  5915,  3040,  2533,  3276,   815,  4391,  2978,
    2173,  3422,  3423,   815,  1211,  4336,   709,  6261,  3723,  2534,
    4861,  2535,  3728,  1485,  4557,  3222,  2507,  2616,  2508,  5440,
     784,  3193,  5359,  2644,  2843,  5832,  5833,  2844,  4298,  2665,
    5448, -1311,  4326,  6252,  5770,  6008,  3041,  2689,  4298,  4298,
    3810,  2136,  2137,  2138,  2139,  5949,  5285,  2213,  1486,  5781,
    2621,  5295,  3369,  3223,  3739,  5846,  5978,   758,  3740,  2621,
    3742,  2131,  5790,  1212,  5792,   797,   815,  2133,  2134,  2135,
    2136,  2137,  2138,  2139,  3747,  1388,  3231,  3440,  1468,  6221,
    6001,  2907,  3944,  6223,  5398,  4559,  1389,  3754,  3755,  2132,
    2133,  2134,  2135,  2136,  2137,  2138,  2139,  1469,  2505,  -216,
    2537,  5449,  1546,  5490,  2125,  5491,  2509,  3923,  5124,  5267,
    5571,   511,  3463,  5127,  5128,  2102,  3719,  3878,  2538,  2100,
    5834,  2011,  2683,  -994,  1268,   709,  3424,  5054,  3202,   825,
    1983,  1984,  1985,  5824,  2491,  4906,  2784,  2011,  5927, -2361,
    5055,   760,  5492,  2174,  4767,  2927,  4532,  2893,  5559,  2522,
    5590,  1390,  5962,  2979,  2180,  5056,  5025,   710,  2511,   785,
    3617,  3456,  4924,  6147,  4337,  4338,  4339,  3457,  3224,  6357,
     797,  3042,  5493,  2937,  2908,   797,  6139,  1289,  3945,  2036,
    3225,  2510,  2393,  5057,  5999,   797,   912,  5827,   871,  5946,
    2909,  5978,  6002,  3233,   872,  5835,  2876,  6315,  6316,  1200,
    4766,  3274,  5601,  2268,  2645,  2938,  3370,  2132,  2133,  2134,
    2135,  2136,  2137,  2138,  2139,  1213,  3924,  1214,  1374,  2146,
     511,   802,  2885,  3925, -2361,  2622,  4298,  2564,  1215,  3926,
    2565,   729,  4481,  4482,  2622,  3767,  4483,  4484,  4485,  1848,
    2536,  1769,  4969,  2115,  2116,  2117,  1216,  2155,   815,  4096,
    2932,   776,  5993,  3352,  5995,  6000,  2269,  2910,  5058,  1949,
    6337,  2125,  6413,  3371,  6358,  6058,   797,  6380,  4372,  2535,
    4298,  2537,   815,   815,  5674,   777,   710,  2935,  2939, -2361,
     815,  2983,  4925,  3226,  2011,  3639,  5454,  5454,  2105,  2538,
    2106,  2107,  2108,   807,  2109,  1268,  2110,  1391,  2606,  3624,
    6296,  3234,  3001,  3927,  5494,  2111,  3946,  1950,   730,   636,
     636,   797,   636,   636,   636,   636,   797,   815,   797,  6359,
    2522,  5282,  5059,  5602,   636,  3849,  1245,  3005,  2506,  2105,
     709,  2106,  2107,  2108, -2309,  2109,  5440,  2110,  5495,  4970,
    4224,  3046,   636,  6001,   815,  2121,  2111,  1242,  5541,  2511,
    5542,  3165,  3227,  6077,  6109,   810,  1251,  5746,  1250,  2940,
    6247,  6248,  3334,  2125,  6381,  3928,   797,  1951,  4373,  3016,
    3017,   895,  3019,  3021,  3022,  3023,  1337,  3947,   797,  3937,
    2376,  3887,  4558,  6127,  3032,  2949,  6347,  5963,  2115,  2116,
    2117,  6117,  6121,  3470,  5964,  1248,  3285,  3286,  4077,  3474,
    1423,   808,  3047,  6034,  6414,  4577,  4578,  3549,  2112,  5965,
    1307,  3298,  4412,  3702,  2507, -2279,  2508,  3243,  2115,  2116,
    2117,  5479,  4695,   811,  4698,  1217,   815,  3650,  5283,  6385,
    1942,  5060,  1487,  5061, -2279,  3793,  3794,  3618,  2122,  5241,
    5242,   797,  1952,  1871,  1425,  6218,  3129,   811,  4004,  2112,
    2011,  2761,  5441,   743,  2123,  6002,  1332,  2113,  1249,  6397,
    2484,  1338,  3696,  6346,  4432,  4413,  5480,   815,  3697,  6078,
    1423,  3237,  5847,  3052,  3145,   947,   815,   815,   815,  6406,
    6035,   710,   797,   618,   636,   725,  6390,  4771,  4440,  4440,
    2539,  6209,  2714,   830,  6212,  3803,  5419,  5420,  2113,   797,
    1872,  3675,  -335,  1873,  2509,  3948,  3300,  3301,  3323,  1424,
     797,   797,  3795,  4011,  1425,  6401,  1339,  2714,   815,  2585,
    2762,  2124,  3242,  5243,  6117,   840,  4303,  2396,  6121,  5732,
     744,  1874,  5733,  4215,  5481,  2460,  2485,  5966,  2397,  1875,
    4433,  4440,  1400,   849,  3155,  1426,  3184,  2714,  1400,  4243,
    5967,  2727,  3204,   755,  3785,  2621,  2461,   783,  6407,  6408,
    3522,  5454,  5888,  1400,  4244, -1371,  2114,  3949,  5968,  2465,
     849,  5374,  3762,   815,  4342,   841,  2789,   945,  1942,  2510,
    3840,  5062,  5063,  3841,  2763,  3174,  2764,  3846,   784,   797,
    5734,  3175,  2765,  3176,  2927,   797,  2429,  3132,  3322,  5134,
    5244,  2714,  4207,  5137, -1371,  3372,  2792,  2114,  4010, -1371,
    2477,  2714,   681,  3372,  3394,  4440,  4208,   681,   797,  3867,
    5813,  5353,   681,  5354,  5355, -2355,  3185, -2355,  1218,  1219,
    1220,  1221,  2132,  2133,  2134,  2135,  2136,  2137,  2138,  2139,
   -1371,  2105,   815,  2106,  2107,  2108,  3851,  2109,   715,  2110,
    3852,   815,  3133,  2766,  2401,  2529,  2626,  5326,  2111,  2017,
    2810,  2539,  6355,  6355,  4973,  3177,  3228,   853,  4394,  3228,
    2821,  4974,  4398,  1289,   745,   746,  3350,  2034,  3350,  3350,
    1196,  2037,  2038,  3379,  4273,  2395,   856,   854,  5343,  1203,
    2474,  2475,  1289,  3769,  1300,  3522,   535,  2767,  3408,   904,
    4271,  5998,     4,     5,  6387,  3246,  5386,  5969,  4548,  5285,
     747,  6003,     4,     5,  4275,  6117,  6121,  1845,  4601,  3412,
    4278,  4279,  5549,   709,  3414,  2516,   540,   785,   539,   901,
    2622,   709,  3648,  4354,  5550,   960,   797,   797,  2345,  5064,
    3649,   690,   876,  2529,  2350,  2351,   696,  5087,  2396,  4605,
    2241,  5089,   748,  3434,  3434,  4610,  6014,  4561,  1194,  2397,
    3648,  2112,  3437,  5841,  3438,   537,  3906,  2398,  5121,  2105,
    1179,  2106,  2107,  2108,  5497,  2109,  2477,   815,  3528,  5499,
    2787,   797,  6015,  2429,  5669,  5670,  2111,  1400,  3567,  2768,
    2294,   797,  2957,  2399,  1177,  5415, -3522,  3572,  3473,  3573,
    2769,  1826,  4879,  5112,  2416,  1302,  3478,  3455,  3480,  4020,
    2113,  4023,  4599,  4600,  2731,  2732,  2733,   679,  2734,  3310,
    2735,  4606,  2736,  4607,  4027,  4609,  4028,  1304,   538,  2434,
     535,  5084,  2436,  2436,   870,  5032,  5033,  3462,  1313,  3461,
    -994,  4461,  3490,  1318,  4564,  4056,  4057,  2400,  1326,  4058,
    4035,  4059,  1323,  4060,  3247,  2105,  4036,  2106,  2107,  2108,
     540,  2109,   539,  2110,   875,  5053,   539,   511,  5106,  3513,
    1332,  4029,  2111,  4028,   710,  2401,  3459,  1335,  3221,  6016,
    1344,  6017,   710,  4030,  4506,  4031,  4508,  4509,  5080,  2112,
    1011,  1012,  4514,  4102,  1015,  4103,  1017,  1346,  1019,   537,
    4522,  5999,  1353,   874,   536,  4529,  1359,  2867,  2868,  1360,
    1361,  4402,   615,  4403,  1362,  3222,  1942,  2011,  3531,  2114,
    4143,  3702,  3237,  1355,   947,  4464,   749,  4465,  2395,  1369,
    5101,  4148,  4149,  1826,  3390,  3391,  3624,  1826,   776,  3460,
    6443, -2279,  4540,   750,  4541,  4664,  4347,  4665,  3285,  3286,
    4074,  1922,  1929,  3223,  1934,  1935,  1936,  1373,  1375,  2125,
     797,  1939,   538,  3298,  1382,   797,   538,  1440,  1441,   751,
    3696,  6254,  6000,  1379,  5640,  2112,  3697,  1384,  1385,  4755,
    4756,  3611,  4035,  4757,  1420,  4758,  4035,  4759,  4036,  4183,
    1454,  2396,  4036,  4648,  5279,  3573,  4651,  3237,  2294,  4657,
    3311,  4658,  2397,  3610,  4262,  1465,  2621,  5611,  1479,   752,
    2398,  2115,  2116,  2117,  4192,  3458,  2102,  3627,  5622,  1490,
    2100,  6018,  1496,  3247,  2113,  1472,   945,  4076,  3523,  3350,
    3524,  -771,  1497,  3328,  5265,  1498,  2399,  3329,   536,  3330,
     825,  3331,   873,   616,  5280,  3248,  4663,  2114,  2294,  4011,
    2242,  1502,  2115,  2116,  2117,  4667,  3312,  4668,  3300,  3301,
    6001,  3777,  4976,  3310,  4977,   815,   815,  1508,  3224,  3525,
    5092,  3526,  2294,  5331,   815,  5332,  3778,  1511,  3434,  3434,
    3225,  2621,  1518,  5333,  -771,  5334, -3555,   762,  1828,  1829,
    2400,   815,  1827,  2243,   815,  2244,  1359,  3713,  3714,  1360,
    1361,  3777,  1367,  1368,  1965,  1371,  3683,  1372,  3695,  1836,
   -2279,  2180,  5335,  2180,  5336,  5367,  3778,  2294,  2401,  1837,
    1848,  3733,   636,  2186,  1289,  1289,  5015,   636,  5017,  4000,
    5281,  1866,  5384,  2114,  5385,  1868,   636,  -769,  3701,  5392,
    3700,  2294,   636,  2731,  2732,  4434,  5405,  4435,  5406,  4436,
    5327,  4437,  1870,  5428,   617,  5429,  1241,  1241,  4760,  4579,
    4580,  4581,  1255,  1255,  3313,  1876,  3237,  3247,  1878,   797,
    5842,  5065,  6002,  5444,  5540,  5445,  4403,  -771,  3746, -3421,
    1880,  2622,  3734,  3226,  5677,  2278,  4769,  3735,  2245,  3242,
     815,  3772,   797,  5801, -3423,  5802,  3738,  5414,  1879,  1289,
    4800,  5844,  3741,  5845,  4554,  1881,  5850,  3310,  5845,  2665,
   -3420,  1246,  1246,  3692,  3248,   764,  3328,  1247,  1247,   797,
    3329,  5851,  3336,  5845,  3331,  5028,  3799,  5900, -3422,  4403,
     797,   618,  1882,  4719,  1400,  5901,  2246,  4403,  1400,  6070,
    3699,  6071,  1890,  1888,  3311,  2325,  2325,  6079,  -771,  6080,
    2621,  4310,  3227,  3826, -3555,  1889,  2622,  3831,  3832,   797,
    3736,   636,  6113,   636,  4465,  6230,  1891,  6231,   797,  3844,
     636,  3743,   797,  4000,  4543,  6268,  1895,  5147,   797,  1896,
    3322,   619,  4481,  4482,  2247,  4010,  4483,  4484,  4485,   755,
    3908,  1897,  3933,   797,  5267,  1898,  4752,  3865,  4753,  1899,
    2395,  2415,  3870,  2105,  1900,  2106,  2107,  2108,  5811,  2109,
    3237,  2110,  1901,  6269,  4765,  5406,  3698,  1911,  1957,  4558,
    2111,  3835,  6276,  3838,  6277,  6044,   620,  1971,  4762,  3843,
    3845,  5004,  1972,  1973,  5267,  2430,  6020,  2430,  2430,  3884,
     849,  6285,  1978,  6286,  2105,  1979,  2106,  2107,  2108,  6305,
    2109,  5845,  2110,  6307,  3802,  5845,  2029,  3342,  3248,  2141,
    6308,  2111,  5845,  2396,  2115,  2116,  2117,  2067,  1289,   815,
    5945,  5582,  1980,  2248,  2397,   797,  6338,  3357,  5845,  4424,
    2072,  3603,  2398,  3604,  5654,  1981,  3362,  5656,  3311,  6348,
    1982,  5845,  3364, -1711,  2621,  2249,  4916,  4917,  4918,  6369,
    3376,  5406,  6430,  1986,  6431,  1988,  1989,  1990,  2399,  3385,
    1991,  1992,  3387,  3372,  3372,  2142,  1993,  3862,  1994,  4987,
    4990,  1995,  4993,  2112,   645,  2622,  1996,  4054,  6003,  1997,
    1998,  1999,  2000,  4015,  4900,  4901,  2477,  2477,  4902,  4903,
    2003,  4022,  1400,  2201,  4904,  4905,  1826,  1463, -1710,  3892,
    2004,  2005,  2012,  2013,  2014,  2143,  2015,  3899,  2144,  2018,
    2019,  4538,  2400,  3909,  2112,  2145,  3903,  3904,  2020,  2021,
    2022,  1362,  2113,  2023,  2024,   621,  2025,  2180,   646,   622,
    2026,  2027,  3310,  2028,  2030,  5623,  2031,  2032,  2033,  2035,
    2401,  5112,  2115,  2116,  2117,  1819,  4034,  2039,  2040,  4055,
    2041,  1820,  5839,  2927,  2180,  2149,  5282,  2042,  3910,  4064,
    2043,  4066,  1289,  2113,  3863,  3369,  2044,   797,  2045,  5975,
     797,   623,  2147,   815,   815,   815,  4039,  2046,  2047, -2279,
    2048,  2049,  2050,  2051,  2052,   815,  2053,  5604,  5133,  2105,
    2056,  2106,  2107,  2108,   647,  2109,  5268,  2110,  2057,  2058,
   -2534,  2059,   624,  4473,  2060,   648,  2111,  2061,  2062,  2063,
   -3555,  2064,  2154,  2202,  2065,  4038,  2066,  2164,  2665,  2622,
    2068,  2069,  2070,  2071,  2203,  2073,  2074,  2075,  2115,  2116,
    2117,  2114,  2076,  5078,  2077,  3237,  2078,  2079,  2082,  3911,
    2969,  2969,  2083,  2153,  2165,  3614,  6166,  3615,  2105,  2086,
    2106,  2107,  2108,  2166,  2109,  5091,  2110,  2167,   815,  2087,
     815,  1472,  1472,  5283,  2088,  2111,  3695,  2089,  2090,  5131,
     649,  2091,  2114,  2092,  2093,  2148,  2172,  2200,  4034,  2198,
    2199,  2204,  4034,  5822,  2219,  1424,  2237,  4694,  2238,  2205,
    1926,  1926,  1926,  2239,  2240,  2260,  3701,  2261,  3700,  2266,
    3912,  5375,  2270,  5269,  2273,  2274,  2282,  2294,  4039,  2112,
    2326,  2336,  4039,  3311,  5977,  2338,  2342,  3913,  3914,  2621,
    5983,  5984,  3915,  3916,  3917,  2206,  2529,  2348,  2349,  1924,
    1924,  1924,  2355,  2360,  5563,  2356,  5565,  2358,  2364,  5568,
    4808,  2382,  5572,  2381,  2383,  5575,  5576,  4038,  2393,  2404,
    2405,  4038,  2408,  5584,  4037,  5585,  2418,  2421,  2113,  2431,
    2432,  1472,  2453,  2463,  5591,  5360,  2454,  2466,  2112,  3312,
    4205,  3692,  2468,  2471,  2472,  2476,  2496,  2488,  5364,  3650,
    2530,  2395,  2518,  2502,  2526,  2522,  2552,  2575,  2559,  2568,
    3918,  5787,  1925,  1925,  1925,  2584,  5122,  5123,  3699,  5414,
     511,  4230,  2102,  5377,  2429,  2576,  2100,  5379,  2590,  2592,
    2593,  2597,  2600,  2598,  2606,  2612,   650,  2113,  2610,  2617,
    2614,  2625,  2631,  1400,  1400,  2633,   797,  2635,  2636,  4235,
     797,  2637,  2639,   815,   815,  2207,  2640,  1289,  2667,  3919,
    2675,  2686,  2688,   651,  2396,  2691,  2011,  2690,  2692,  2694,
    2695,  2697,  2698,  4241,  4319,  2397,  2701,  2712,  2714,  2713,
    2723,   815,  2208,  2398,  2730,  2741,  2745,  2114,  1923,  1923,
    1923,  4010,  2773,  2786,  3698,  2787,  6323,  3313,  2788,  2799,
    2801,   533,  4289,  2805,  4291,   511,  4037,   509,   652,  2399,
    4037,  2806,  2862,  2853,  2622,   535,  2858,  2872,  4883,  2883,
    2887,   558,  2902,  4352,  2906,  2933,  2959,  1245,  1245,  5214,
     484,  3005,   506,  2876,  5582,  4855,   534,  2934,   485,   486,
    2958,   564,  2964,  4377,  2966,   540,  2114,   539,  1242,  1242,
    3997,  2967,  2984,  2973,  2990,  2993,  3012,  1251,  1251,  1250,
    1250,  3013,  2105,  2400,  2106,  2107,  2108,  3038,  2109,  3055,
    2110,  3053,  2105,  3054,  2106,  2107,  2108,  3056,  2109,  2111,
    2110,     4,     5,  3058,   537,  3059,  2731,  2732,  4434,  2111,
    4435,  2401,  4436, -2129,  4437,  3060,  1248,  1248,  3075,  3078,
    3079,   -72,  6219,  3082,  3083,  5822,  3084,  3085,  3086,  3093,
    3102,  3094,  3103,  3106,  3104,  3105,  3107,  3109,   636,  3110,
    3116,  3117,  5943,   797,  2105,  3120,  2106,  2107,  2108,  3121,
    2109,  3125,  2110,  3130,   797,  3137,  3164,  3141,   797,  3166,
    3167,  2111,  3168,   653,   815,  3169,  3172,   538,  3180,  5775,
    3181,  3182,  2932,  3190,  3194,  3195,  3198,  3197,  3205,  1249,
    1249,   654,  3209,  3206,  3210,  3220, -2545,  3245,  3260,  3269,
     815,   815,  3268,  3272,  3271,  6144,  2209,  3273,  4383,  3277,
    3307,  2430,  2112,  3324,  3326,  2105,  2578,  2106,  2107,  2108,
    3363,  2109,  2112,  2110,  3355,  3352,  2115,  2116,  2117,  3386,
    3388,  3402,  2111,   655,  3401,  3406,   656,  3410,  1426,  3413,
    3416,  5044,  3418,  4221,  3425,  4222,  3428,  3431,  3449,  3471,
     815,  3489,  3472,   536,  3492,  3494,  3497,  2969,  3495,  3507,
    5010,  2113,  3506,  3514,   657,  3529,  4496,  2115,  2116,  2117,
    3508,  2113,   658,  3583,  2112,  3511,  3512,  3522,  1472,  3533,
    3536,  3546, -1506,  2210,  4625,  1826,  4626,   709,  3586,  3547,
    3551,  2211,  3559,  3560,  3561,  3565,  3576,  5462,  5465,  5467,
    5469,  3587,  3592,  5472,  5473,  6435,  3594,  3601,  5477,  3605,
    6081,  5483,  5093,  3606,  5487,  3608,  3612,  5462,  3620,  3625,
    3613,  5498,  5462,  2113,  3632,  2139,  3638,  3654,  3645,  3647,
    3661, -1676,  3666,  2054,  4035,  2112,  2080,  2084,  3669,  3671,
    4036,  1818,  3674,  3676,  3677,  3680,  3684,  3685,  3686,  3704,
    3717,  4551,  3720,  3725,  3721,  4457,  4458,  4459,  4460,   535,
    4462,  4463,  6371,  3722,  3744,  3729,  3730,  3732,  3748,  3766,
    2114,  1823,   797,  3759,  3760,  2105,  3756,  2106,  2107,  2108,
    2114,  2109,  3782,  2110,  2113,  3783,  3811,  3813,  3814,   540,
    3815,   539,  2111,  3818,  2444,   815,   815,  3819,  2430,  3850,
     797,  3857,  3875,  3861,  3881,  6179,  4510,  4511,  3885,  4513,
    1822,  4515,  4516,  4517,  4518,  4519,  4520,  4521,  3888,  4523,
    3896,  3895,  4528,  3897,  5754,  5755,  4531,  5757,   537,  3898,
    3953,  3900,  2114,  2105,  3901,  2106,  2107,  2108,  3902,  2109,
    3956,  2110,  3991,  3959,  6203,  3963,  3992,  4987,  3999,  4990,
    2111,  4993,  3967,  3968,  3969,  3970,  3971,  3972,  3973,  3974,
    3975,  3976,  2115,  2116,  2117,  3977,  4017,  4018,  6273,  4024,
    1926,  3978,  3979,  3980,  3981,  6442,  3982,  3983,  4025,  4641,
    4019,  4642,  3984,  3985,  3986,  3987,  3988,  3989,  3990, -1897,
    4065,   538,  4046,  2114,  4044,  2112,  4061,  4067,  4068,  4083,
   -1897,  4088,  4085,  4089,  4097,  4098,  5643,  4020,  4023,  1924,
    4021,  4676,  4099,  4100,  2511,  4112,  4093,  4144,  4071,  4145,
    4146,  2115,  2116,  2117,  5814,  5815,  2105,  4086,  2106,  2107,
    2108,  4087,  2109,  4675,  2110,  2677,  4159,  3649,  6281,  4160,
    2884,  4169,  4179,  2111,  2113,  5215,  4709, -1719,  4217,  1821,
    2429,  2429,  4218,  2112,  4216,  4203,  4204,  4231,  4232,  4239,
     815,  4237,   797, -1897,  4238,  3655,  4247,   536,  4249,  4253,
     815,   815,  1925,  4736,  4255,   511,  4739,  4740,  4256,  4260,
    4263,  4264,  4268,  4269,  4276,  4277,  2996,  3394,  2995,  4301,
    4424,  4315,  3438,  4316,  4317,  4318,  4322,  4324,  4738,  4329,
   -1897,  4330,  2113,  4355,  4361,  4363,  4365,  4366, -1897,  6273,
    4367,  4392,  4393,  4396,  4397,  4422, -1897, -1897,  4476, -2030,
    4477,  5668,  4478, -1897,  4430,  4431, -1897,  4494,  4498,  4780,
    4503, -1897,  4504, -1897,   511,  4505,  5907, -1897,  5908,  5909,
    4536,  4507,  4546,  4552,  4555, -1897,  2112, -1897,  1923,  4562,
    3411,  4567, -1897,  2114,  4574,  2105,  4569,  2106,  2107,  2108,
    2325,  2109,  6352,  2110,  4556,  4575,  4587,  4594,   797,  4596,
     815, -1897,  2111,   797,   797,  4603,  4604,  6281,  4608,  4611,
   -1897,  4666,  4713, -1897,  4612,  4613,  4701,  4677,  4614,   636,
    4716,  4730,  4744,  6424,  4745,  2113,  4679,  4750,  4689,  4735,
    4690, -1897,  4714,   797,   797,  4693,  4763,  6434,  4703,  4710,
    4888,  2114,  4717,  6424,  4768,  4770,  4775,  4769,  4772,  4783,
    6434, -1897,  4781,  4802,  4473, -1897,  4801,  4967,  4803,  4804,
    4805,  4807,  4858,  4810, -1897,  2105, -1810,  2106,  2107,  2108,
    4866,  2109, -1815,  2110,  4886,  4891,  4894,  4898,  4895,  4863,
    4899,  4909,  2111, -1897,  4914,  4927,  4972,  4980,  5001,  5006,
    5007,  5012,  5020,  2105,  5031,  2106,  2107,  2108,  5034,  2109,
   -1897,  2110,  5035,  5037,  5047,  2112, -1897, -1897,  5048,  5085,
    2111,  3617,  4684,  5094,  5096,  4410,  5097,  5099,  4054,  2942,
   -1897,  5100, -1897,    46,  5103,  2105,  5453,  2106,  2107,  2108,
    5125,  2109,  5126,  2110,  2114,  5138,  5146,  5151,  4856,  5147,
    5152,  5153,  2111,  5178,  5158,  2115,  2116,  2117,  5179,  5180,
    5192,  4938,  5222,  5223,  2113,  2115,  2116,  2117,  -247,  5226,
    5227,  5228,  4653,  2105,  4654,  2106,  2107,  2108,  5231,  2109,
    5233,  2110,  4659,  4994,  4660,  5247,  2929,  5258,  4015,  5259,
    2111,  5260,  5275,  5267,  5277,  2112,  5278,  5288,  5289,  5298,
    4055,  5299,  5300,  5003,  5301,  5302,  5005,  5303,  5305,  5306,
    5307,  5308,  5316,  5309,  5319,  5322,  5323,  2115,  2116,  2117,
    5330,  5337,  5011,  2112,  5340,  5341,   511,  5344,   509,  5558,
    5348,  5345,  5350,  5378,  4696,  5368,  4697,  5352,  5356,  5357,
    5362,   511,  5369,  5026,  2113,  5567,  2105,  5370,  2106,  2107,
    2108,  5376,  2109,  5381,  2110,  2112,  5390,  5391,  5700,  5393,
    5400,  5407,  5408,  2111,  5410,  5409,  5422,  5425,  5426,  5430,
    5535,  5433,  2113,  2114,  5544, -1897,  5436,  5458,  2115,  2116,
    2117,  5527,  5546,  5437,  2105,  5537,  2106,  2107,  2108,  5545,
    2109,  5529,  2110,  2112,  5547,  5539,  5554,  3509,  5553,  5555,
    5556,  2111,  5561,  5559,  2113,  5569,  5573,  5574,  5435,  5605,
    5607,  5628,  5630,  4492,  5609,  2105,  5632,  2106,  2107,  2108,
    4034,  2109,  5658,  2110,  5083,  5638,  5634,  5639,  5642,  5667,
    5645,  5666,  2111,  5682,  5681,  2105,  5689,  2106,  2107,  2108,
    5690,  2109,  2113,  2110,  5478,  5685,  5676,  5688,  5693,  5705,
    4039,  4736,  2111,  2114,  5709,  5730,  5707,  5740,  5738,  5742,
    5751,  5756,  5758,  5759,  4709,  5739,  2112,  4541,  5113,  5761,
    5763,  5441,  5777,  5778,  5782,  5788,  5114,   815,  5570,  5445,
    5120,  2114,  5793,  5808,  5823,   511,  5817,  5818,  5825,  4038,
    5824,  5827,  5837,  5828,  2105,  5843,  2106,  2107,  2108,  5859,
    2109,  5847,  2110,  5849,  2112,  5853,  5865,  5446,  4639,  5875,
    2876,  2111,  5885,  2114,  5692,  2113,  5869,  5881,  5697,  5698,
    5910,  5924,  5145,  5883,  5911,  2105,  5913,  2106,  2107,  2108,
    1826,  2109,  5925,  2110,  5926,  2112,  5931,  5934,  2115,  2116,
    2117,  5935,  2111,  5936,  5942,  5944,  5948,  5961,  5957,  5958,
    5979,  2114,  5980,  2113,   797,  2112,  5985,  3510,  5991,  4815,
    5177,  6027,  6048,  6049,   797,  6050,  2105,  6051,  2106,  2107,
    2108,  6056,  2109,  6057,  2110,  6066,  6072,  4735,  6073,  1819,
    6068,  6086,  6069,  2111,  2113,  1820,  6076,  5205,  6089,  6082,
    6094,  5933,  6097,  6110,  6112,  6130,  2115,  2116,  2117,  6124,
    6132,  6134,  6135,  6136,  2113,  1826,  5119,  6138,  6140,  6141,
    6142,  6156,  6155,  6157,  2112,  3519,  6158,  6163,  6165,  6170,
    6205,  6183,  6220,  6235,  2114,  6190,  6241,  6225,  4037,  -771,
     871,  6251,  5265,  3865,  6227,  6228,   872,  6238,  5887,  6258,
    6250,  6264,  2932,  6265,  6266,  2112,  6267,  6270,  4935,  6298,
    6295,  4940,  6301,  6319,  4035,  6309,  6329,  6310,  6327,  6143,
    4036,   815,  2114,  2113,  6332, -1897,  2105,  6366,  2106,  2107,
    2108,  6382,  2109,  6375,  2110,  5154,  6378,  6372,  2678,  6383,
    6384,  6393,  -771,  2111,  6386,   762,  2112,  6392,  6394,  2115,
    2116,  2117,  6395,  2114,  2113, -1897,  6400, -1897,  6399,  3777,
   -1897, -1897,  6398,  6402,  6410,  6404,  6425,  6411,  3520,  5177,
    4281,  6438,  3781,  2114,  3778,  6403,  4530,  5619,  5617,   636,
    4370,  5618,  2256,  5982,  5325,  4907,  5743,  6046,  2105,  6174,
    2106,  2107,  2108,  6325,  2109,  2113,  2110,   511,  1395,  2971,
    5530,  3216,  4997,  4545,  2467,  2111,  4550,  5338,  5424,  5002,
    2950,  3395,  5855,  3792,  4798,  6217,  4571,  4591,  1180,  3481,
    3275,  1510,  3482,  2515,  3483,  1181,  6288,  3259,  5266,   511,
    3415,   799,  2114,  5872,  5871,  -771,  5711,  5312,  4954,  5321,
    1182,  5784,  5102,  5399,  5657,  5256,  2112,  3659,  5107,  6189,
    1183,  1184,  1185,  6275,  5829,  5662,  6374,  6336,  6096,  6376,
    1186,  3891,  2458,  2114,  5562,  5310,  3334,  6029,  6287,  2430,
    1826,  5600,  5687,   764,  4054,  5315,  5768,  2180,  2115,  2116,
    2117,  5452,  1926,  2105,  6249,  2106,  2107,  2108,  6356,  2109,
    6253,  2110,  6181,  5066,  2542,  2113,  4602,  3521,  6187,  6255,
    2111,  3343,  5918,   871,  2114,  4681,  -771,  4709,  2112,   872,
    3353,  5090,  5086,  5088,  6377,   769,   770,  6349,  5989,  1819,
    6350,  1924,  2876,  6216,  4362,  1820,  6224,  6222,   796,  3361,
    5764,  5762,   511,  5892,  5411,  4809,  5313,  5598,  2483,  4346,
    6064,  2668,  3138,  4345,  6185,  3962,  4055,  5917,  4254,  3309,
     869,  4235,  5511,  4967,  4780,  4584,  3773,  2113,  2115,  2116,
    2117,  5019,  4094,  1422,  5973,   815,   798,   910,  5177,  3417,
    5443,  2439,  4219,  4308,  2394,  2169,  5342,  3527,  5098,  2438,
    6328,  1174,  4265,  4182,  1925,   797,  2115,  2116,  2117,  4421,
    4180,  2870,  5267,  4705,  4621,  2930,  2785,  2775,  1826,  1187,
    2720,   815,  1298,  2112,  2114,  3537,  5361,  3189,  2386,  3186,
    2387,  1188,  2388,  2389,  2391,  5753,  5543,  5135,  2115,  2116,
    2117,  5507,  6176,  2105,  4015,  2106,  2107,  2108,  1174,  2109,
    5427,  2110,  4015,  6177,  3179,  3877,  3200,  3538,  2729,  4700,
    2111,  4419,  4699,  5251,  5653,  5250,  6075,  4035,  5923,  5644,
    5421,  4420,  2113,  4036,  5671,  1442,  2115,  2116,  2117,  2446,
    1923,  2433,  5254,  2162,  4063,  5564,  2114,   780,  3869,  3441,
     771,  4092,  5177,   871,  5018,  3543,  1202,  5838,  5579,   872,
    5117,  4454,  5432,  6370,  5145,  3409,  1840,  3750,  5589,  5132,
    3044,  1846,  6151,  1294,  5578,  5592,  2876,  5593,  5594,  5973,
    3751,  4302,   795,   797,  5588,  2440,  1297,  5675,  5870,  5145,
    3128,  5023,  1189,  3786,  6373,  5548,  5145,  6396,  5760,  2673,
    6437,  5177,  6440,  5474,  5475,  1966,  3763,  5663,  4113,  2115,
    2116,  2117,  1327,  5488,  6151,  4293,  5613,  4090,  1253,  4294,
    3488,  6439,  4295,  2112,  3716,  1254,  4290,  5506,  3544,  1190,
    1174,  4287,  4286,  1210,  4743,  3469,  3147,  2661,  2662,  4261,
    5533,  2114,  2972,  1191,  4915,  4364,   910,  2115,  2116,  2117,
    1816,  3952,  2163,  5809,  5347,  4968,  5257,   789,   773,  1343,
    2341,  1414,  5016,   774,   775,  1943,  3545,  3484,  4593,  6259,
     869,  5889,  2113,  1945,  5140,  6364,  6260,  1955,  2115,  2116,
    2117,  3867,  4857,  4371,  5268,  5877,  5882,  5874,  5878,  5873,
    1926,  5661,  2595,  5747,  1834,  4640,  5113,  5665,  2115,  2116,
    2117,  1956,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5145,     0,  6151,     0,  3562,     0,     0,
    5680,     0,     0,  5680,  5680,     0,     0,     0,  5686,  1924,
       0,  5736,  5177,     0,     0,     0,  5606,     0,     0,     0,
    5696,     0,     0,     0,     0,  5704,     0,     0,     0,     0,
    1921,  1921,     0,  1921,  1921,  1921,     0,  2115,  2116,  2117,
    1921,     0,  6436,     0,     0,  1818,     0,     0,     0,     0,
       0,     0,  5765,     0,  5767,     0,  3569,     0,     0,     0,
       0,  2114,     0,     0,     0,     0,     0,     0,  2115,  2116,
    2117,  5269,  1925,     0,     0,  1823,     0,     0,     0,     0,
       0,     0,     0,     0,  2927,     0,     0,  3571,  1174,     0,
       0,     0,  1174,     0,     0,     0,  5716,     0,     0,     0,
       0,     0,     0,     0,  3865,     0,  3865,     0,  5766,  2115,
    2116,  2117,     0,     0,  1822,     0,  1174,     0,     0,     0,
    4034,     0,     0,     0,     0,  1174,  5719,  1915,  3574,     0,
    5177,  5145,  5177,     0,   815,  5177,     0,  5145,     0,     0,
       0,     0,  5177,  5177,     0,     0,  5145,     0,  1923,     0,
    4039,  5785,  5177,  5706,     0,     0,     0,     0,  5177,  5145,
       0,  5145,     0,  6204,     0,  5718,     0,     0,  5794,  5708,
       0,     0,     0,     0,  2105,     0,  2106,  2107,  2108,     0,
    2109,     0,  2110,     0,     0,     0,     0,     0,  5806,  4038,
       0,  2111,     0,     0,     0,     0,     0,   797,     0,     0,
       0,     0,  1174,  1174,  1174,  1174,     0,     0,     0,  2115,
    2116,  2117,     0,     0,  1174,     0,  6324,     0,     0,     0,
       0,     0,  5973,     0,     0,  2430,  2430,  2105,  3575,  2106,
    2107,  2108,     0,  2109,  2876,  2110,     0,     0,     0,  4967,
       0,  5897,     0,  5897,  2111,     0,     0,     0,  5680,     0,
       0,     0,  5852,  1821,     0,     0,     0,     0,   755,  5857,
     797,     0,  2665,     0,  5177,  5177,     0,     0,     0,     0,
       0,  2115,  2116,  2117,   797,     0,     0,     0,  4076,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   511,     0,
    3577,     0,     0,     0,  2112,     0,     0,     0,     0,  2105,
       0,  2106,  2107,  2108,  5717,  2109,  4015,  2110,     0,  5716,
       0,     0,   636,     0,   636,     0,  2111,     0,     0,     0,
       0,     0,  3893,  3894,     0,  1818,     0,     0,  4037,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5177,  5719,
       0,  3905,  5177,  2113,  5920,     0,     0,  2112,     0,  2876,
       0,  3931,  3932,     0,  6335,  1823,     0,     0,  5145,  6011,
       0,     0,     0,  6011,     0,     0,  2115,  2116,  2117,  5937,
    5941,     0,     0,     0,     0,     0,     0,     0,  5718,     0,
    5897,     0,     0,     0,     0,  3580,  5897,   876,     0,  1174,
    6441,     0,  2317,     0,  1822,  5956,  2113,     0,     0,     0,
       0,     0,     0,     0,  5083,     0,     0,     0,     0,     0,
       0,     0,  5680,     0,  3993,  3994,  3995,  3996,     0,  2112,
    5986,     0,  5177,     0,     0,     0,  2105,     0,  2106,  2107,
    2108,     0,  2109,     0,  2110,     0,  6026,     0,     0,     0,
       0,     0,     0,  2111,     0,     0,     0,  6037,     0,  6038,
       0,   636,  2114,  4034,     0,     0,     0,   636,     0,  2105,
       0,  2106,  2107,  2108,     0,  2109,     0,  2110,  2113,     0,
       0,     0,  6059,     0,     0,  2279,  2111,     0,  5177,   870,
       0,  2287,     0,  4039,     0,  6427,     0,     0,     0,     0,
    6429,  6060,  5177,   797,     0,  2105,     0,  2106,  2107,  2108,
    6011,  2109,     0,  2110,     0,  2114,  2115,  2116,  2117,   875,
       0,   539,  2111,     0,     0,     0,     0,  5717,  6011,     0,
       0,     0,  4038,     0,  1174,  3581,  2105,     0,  2106,  2107,
    2108,     0,  2109,  1821,  2110,     0,     0,     0,     0,     0,
       0,     0,     0,  2111,     0,     0,  2112,  6111,   874,     0,
       0,  2105,  6123,  2106,  2107,  2108,     0,  2109,  6129,  2110,
       0,     0,     0,  1414,     0,     0,     0,     0,  2111,  1174,
       0,     0,  2105,     0,  2106,  2107,  2108,  2114,  2109,  2112,
    2110,   815,     0,     0,     0,     0,     0,     0,  2105,  2111,
    2106,  2107,  2108,     0,  2109,  2113,  2110,     0,     0,     0,
       0,     0,     0,     0,     0,  2111,     0,     0,     0,  6171,
       0,   538,   797,     0,     0,  2112,     0,  4780,  4780,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2113,     0,
       0,  2105,     0,  2106,  2107,  2108,     0,  2109,  5941,  2110,
       0,     0,     0,     0,     0,  2470,  2112,  5956,  2111,     0,
       0,     0,     0,     0,     0,     0,  6011,     0,     0,     0,
     815,  4037,     0,  2487,  2113,     0,  2105,     0,  2106,  2107,
    2108,  2112,  2109,     0,  2110,     0,     0,     0,     0,     0,
       0,     0,     0,  2111,     0,     0,     0,   873,     0,     0,
       0,  6226,  2112,     0,  6137,  2113,     0,     0,     0,  5680,
       0,  5680,  5680,     0,  2114,     0,     0,     0,  2112,     0,
    6246,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2113,  2102,     0,     0,     0,  2100,     0,     0,     0,     0,
       0,     0,     0,  1974,     0,     0,     0,  2114,     0,     0,
       0,  2113,     0,     0,     0,     0,     0,     0,     0,     0,
    6011,  2112,     0,  2876,     0,  5897,     0,  2113,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2114,     0,   815,     0,     0,     0,     0,
    6198,  6199,     0,     0,  6294,  2105,  2112,  2106,  2107,  2108,
       0,  2109,  6210,  2110,  5680,  5680,     0,     0,  6302,     0,
    2113,     0,  2111,     0,  2114,  5680,     0,  6011,  6011,     0,
       0,  6362,  6362,  4967,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   636,     0,     0,  2114,
    6322,     0,     0,     0,     0,  2113,  6245,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  6011,
    2114,   815,  2105,     0,  2106,  2107,  2108,     0,  2109,     0,
    2110,     0,     0,     0,     0,     0,  2114,     0,  5680,  2111,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  6361,  6361,     0,     0,  4967,     0,     0,     0,
    6282,     0,     0,  6283,  2876,     0,     0,  2115,  2116,  2117,
    2105,     0,  2106,  2107,  2108,  2112,  2109,     0,  2110,  2114,
    6293,  3496,     0,     0,     0,     0,  3582,  2111,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2105,     0,  2106,  2107,  2108,     0,  2109,     0,
    2110,     0,     0,     0,  2114,     0,     0,     0,     0,  2111,
    2115,  2116,  2117,     0,  2113,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3599,
       0,     0,  2112,     0,     0,  1174,     0,  1174,  2876,     0,
       0,     0,   815,     0,     0,     0,     0,   815,     0,     0,
       0,     0,  2876,     0,     0,     0,     0,     0,  2876,     0,
       0,     0,  2599,     0,  2599,  2876,     0,     0,     0,     0,
       0,     0,  4443,  4444,     0,  4446,  4448,     0,     0,     0,
    2112,  2113,  2115,  2116,  2117,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1174,  1174,     0,     0,  3515,
       0,  1174,     0,     0,     0,  1174,  1174,  1174,     0,     0,
       0,     0,  2112,     0,     0,     0,  1174,  1174,     0,     0,
       0,     0,  1174,  2114,     0,     0,  1174,  1174,  1174,  2113,
    1174,  1174,  1174,     0,     0,     0,     0,     0,     0,     0,
    1174,     0,  1174,     0,     0,  1174,  1174,  1174,  1174,     0,
    1174,     0,  1174,  1174,  1174,     0,     0,     0,     0,  1174,
       0,  2113,  1174,     0,  4537,     0,     0,     0,  1174,  1174,
       0,  1174,  1174,  1174,  1174,  1174,  1174,  1174,  1174,  1174,
    1174,     0,  1174,  1174,  1174,  1174,  1174,     0,  1174,  1174,
    2114,  1174,  1174,  1174,     0,     0,  1174,  1174,  1174,     0,
    1174,  1174,  1174,     0,  1174,     0,  1174,     0,  1174,  2115,
    2116,  2117,  1174,  1174,  1174,     0,     0,  1174,  1174,  1174,
    1174,  1174,     0,  1174,     0,     0,     0,     0,  3602,     0,
    1174,     0,     0,  1174,     0,     0,     0,     0,  2114,     0,
       0,  1174,  2115,  2116,  2117,  1174,  1174,  1174,  1174,     0,
    1174,  1174,     0,     0,  1174,  1174,  1174,  1174,  1174,  1174,
    1174,  1174,  1174,  1174,  1174,  1174,  1174,     0,     0,  1174,
    2114,  -671,     0,     0, -1120,     0,     0,     0,  2115,  2116,
    2117,     0,  4815,     4,     5,  4815,     4,     5,  2849,     0,
       0,     0,     0,  2854,     0,     0,     0,  3609,     0,     0,
       0,     0,     0,  2864,     0,     0,  1174,     0,     0,  2115,
    2116,  2117,     0,  4928,     0,  4929,  4930,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4115,     0,
       0,     0,     0,     0,  2115,  2116,  2117,  4931,     0,  4932,
       0,     0,     0,     0,  2105,  4933,  2106,  2107,  2108,     0,
    2109,     0,  2110,  4150,     0,  2115,  2116,  2117,     0,     0,
       0,  2111,     0,  2456,     0,     0,  2456,     0,     0,     0,
       0,  2115,  2116,  2117,  4623,     0,     0,  4934,     0,     0,
       0,     0,     0,     0,  2962,     0,     0,     0,     0,     0,
    4624,     0,     0,  1174,     0,     0,  2105,     0,  2106,  2107,
    2108,     0,  2109,     0,  2110,     0,  4816,     0,     0,  4816,
       0,     0,     0,  2111,  2115,  2116,  2117,     0,     0,     0,
       0,  1174,  2105,  1174,  2106,  2107,  2108,     0,  2109,  3018,
    2110,     0,     0,  4637,  3024,     0,  3026,  4935,     0,  2111,
    2105,     0,  2106,  2107,  2108,     0,  2109,     0,  2110,  2115,
    2116,  2117,     0,     0,     0,     0,     0,  2111,  1174,     0,
       0,     0,     0,     0,  2112,     0,  4936,     0,  4937,     0,
       0,     0,     0,  4818,     0,     0,  4818,     0,  4938,     0,
       0,     0,     0,     0,  3061,     0,  2105,     0,  2106,  2107,
    2108,     0,  2109,     0,  2110,     0,  3071,     0,     0,     0,
    4939,     0,     0,  2111,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2113,     0,     0,  2112,     0,     0,     0,
    2105,     0,  2106,  2107,  2108,     0,  2109,     0,  2110,  4784,
    4819,  4820,  4821,  4819,  4820,  4821,  4785,  2111,     0,     0,
       0,     0,  2112,     0,  1174,     0,     0,     0,     0,     0,
       0,  4786,  4822,     0,     0,  4822,     0,     0,     0,     0,
    2112,  4787,  4788,  4789,     0,  2113,     0,     0,  2115,  2116,
    2117,  4790,     0,     0,     0,  1174,     0,  2105,     0,  2106,
    2107,  2108,     0,  2109,     0,  2110,     0,  4656,     0,     0,
       0,  2113,     0,     0,  2111,     0,     0,  4940,     0,     0,
    3153,     0,  4823,     0,  4824,  4823,  2112,  4824,  2105,  2113,
    2106,  2107,  2108,     0,  2109,     0,  2110,  1414,     0,     0,
       0,     0,  2114,  4825,     0,  2111,  4825,     0,  1414,  1414,
       0,     0,     0,  4941,     0,  2115,  2116,  2117,     0,     0,
    2112,  4826,     0,     0,  4826,     0,     0,     0,  4827,     0,
       0,  4827,     0,     0,  4672,  2113,     0,     0,     0,     0,
       0,     0,     0,  4828,     0,     0,  4828,     0,     0,     0,
       0,     0,     0,  4829,  2114,     0,  4829,     0,     0,     0,
    4942,  4943,     0,  2115,  2116,  2117,     0,  4944,  4830,  2113,
       0,  4830,     0,     0,     0,   910,     0,  2112,     0,  4945,
    2114,     0,  4673,     0,     0,     0,     0,  3264,     0,     0,
    4791,     0,     0,  3267,     0,  2115,  2116,  2117,  2114,     0,
    4946,     0,  4792,     0,     0,     0,     0,     0,  2112,     0,
       0,     0,     0,     0,  5366,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4947,  4831,  2113,     0,  4831,     0,
       0,     0,     0,     0,     0,  4832,     0,     0,  4832,     0,
       0,     0,     0,  2105,  2114,  2106,  2107,  2108,     0,  2109,
       0,  2110,     0,     0,     0,     0,     0,  2113,     0,     0,
    2111,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4833,     0,     0,  4833,     0,  1174,     0,  2114,     0,
       0,     0,     0,     0,  4834,     0,  3452,  4834,  4793,  4948,
       0,     0,  4815,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,  4794,     0,     0,     0,     0,     0,   910,
       0,     0,     0,   869,     0,  2105,     0,  2106,  2107,  2108,
    1174,  2109,     0,  2110,  4835,     0,     0,  4835,  1174,  1174,
    4836,     0,  2111,  4836,     0,  2114,     0,     0,     0,     0,
    4795,     0,     0,     0,     0,  -960,     0,  -960,     0,     0,
       0,  3433,  3433,     0,  4796,     0,     0,     0,  4949,     0,
       0,     0,     0,  2112,     0,     0,  2114,     0,     0,  4950,
    4951,  4952,     0,  2456,     0,     0,     0,     0,     0,  3448,
       0,     0,     0,  1174,     0,     0,     0,     0,  4837,  1915,
       0,  4837,     0,     0,     0,  4838,     0,     0,  4838,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2113,     0,     0,     0,  4816,     0,     0,  1174,
    1174,  1174,     0,     0,     0,     0,  4839,     0,     0,  4839,
       0,     0,     0,     0,     0,  2112,     0,     0,     0,     0,
       0,  4840,  4841,     0,  4840,  4841,     0,     0,     0,     0,
       0,     0,     0,     0,  4842,     0,     0,  4842,     0,     0,
       0,  4953,  5182,  5183,  5184,  5185,  5186,  5187,  5188,  5189,
    5190,  5191,     0,  5193,  5194,  5195,  5196,  5197,  5198,  5199,
    5200,  5201,  5202,  4818,  2113,  5206,  5207,     0,     0,     0,
       0,  1174,     0,     0,     0,  2105,     0,  2106,  2107,  2108,
       0,  2109,     0,  2110,     0,     0,     0,     0,     0,  1174,
       0,     0,  2111,  1174,  1174,     0,  1174,  1174,     0,     0,
       0,  2114,     0,  -671,     0,  1174, -1120,  1174,  2105,     0,
    2106,  2107,  2108,     0,  2109,     0,  2110,     0,     0,     0,
    4819,  4820,  4821,     0,     0,  2111,     0,  2115,  2116,  2117,
       0,     0,     0,     0,     0,  1174,     0,     0,  3591,     0,
       0,     0,  4822,  3596,  3534,  2105,     0,  2106,  2107,  2108,
       0,  2109,  2105,  2110,  2106,  2107,  2108,     0,  2109,  5287,
    2110,     0,  2111,  1174,  5297,     0,     0,  3691,     0,  2111,
       0,     0,     0,  2114,     0,     0,  1174,     0,     0,  2115,
    2116,  2117,  2105,     0,  2106,  2107,  2108,     0,  2109,  1174,
    2110,     0,  4823,     0,  4824,  2112,  3539,     0,     0,  2111,
       0,     0,     0,     0,     0,  2115,  2116,  2117,     0,     0,
       0,  -960,     0,  4825,     0,  1174,     0,     0,     0,     0,
       0,     0,  3540,  2115,  2116,  2117,     0,     0,  2112,     0,
       0,  4826,     0,     0,     0,     0,     0,     0,  4827,     0,
    3541,     0,     0,  2105,  2113,  2106,  2107,  2108,     0,  2109,
       0,  2110,     0,  4828,     0,     0,  3433,  3433,     0,  1174,
    2111,     0,     0,  4829,     0,  2112,     0,     0,     0,  2115,
    2116,  2117,  2112,     0,     0,     0,     0,  2113,  4830,     0,
       0,     0,     0,     0,     0,     0,  3563,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2317,     0,     0,
       0,     0,  2112,  2115,  2116,  2117,     0,  2105,     0,  2106,
    2107,  2108,     0,  2109,  2113,  2110,     0,     0,     0,     0,
    3566,  2113,     0,     0,  2111,  2105,     0,  2106,  2107,  2108,
       0,  2109,     0,  2110,     0,  4831,     0,     0,     0,     0,
       0,     0,  2111,     0,     0,  4832,     0,  3753,     0,     0,
       0,  2113,     0,  2114,     0,     0,     0,     0,     0,     0,
    2115,  2116,  2117,  2112,     0,  2105,     0,  2106,  2107,  2108,
    3774,  2109,  2105,  2110,  2106,  2107,  2108,  3568,  2109,     0,
    2110,  4833,  2111,     0,  1174,     0,  2114,     0,     0,  2111,
       0,  2115,  2116,  2117,  4834,     0,     0,     0,  1174,     0,
    1174,  1174,     0,  2105,  5460,  2106,  2107,  2108,  3570,  2109,
       0,  2110,  2113,     0,     0,     0,  5476,     0,     0,     0,
    2111,     0,     0,  2114,     0,     0,     0,  2112,     0,     0,
    2114,     0,     0,     0,  4835,     0,     0,  3833,     0,     0,
    4836,     0,     0,     0,     0,  2112,  3842,     0,     0,     0,
    1414,     0,     0,     0,     0,     0,  1414,     0,     0,  1174,
    2114,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1414,     0,     0,     0,     0,  2113,     0,     0,     0,
       0,     0,     0,     0,     0,  2112,     0,     0,     0,     0,
       0,     0,  2112,     0,  2113,     0,     0,     0,  4837,     0,
       0,     0,     0,     0,     0,  4838,     0,     0,     0,     0,
    2105,     0,  2106,  2107,  2108,     0,  2109,     0,  2110,     0,
       0,  2114,     0,  2112,     0,     0,     0,  2111,     0,     0,
       0,     0,     0,     0,  2113,     0,  4839,     0,     0,     0,
       0,  2113,     0,     0,     0,     0,  2115,  2116,  2117,     0,
       0,  4840,  4841,     0,     0,  4033,     0,  1174,  1174,     0,
       0,     0,     0,  3578,  4842,     0,     0,     0,     0,     0,
       0,     0,  2113,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2114,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2114,     0,     0,  2105,     0,  2106,  2107,
    2108,     0,  2109,     0,  2110,     0,     0,     0,  2115,  2116,
    2117,     0,     0,  2111,     0,     0,     0,     0,     0,  5211,
    2112,     0,     0,     0,     0,  3579,     0,     0,     0,     0,
       0,     0,     0,  2114,     0,  2105,     0,  2106,  2107,  2108,
    2114,  2109,     0,  2110,     0,     0,     0,  2105,     0,  2106,
    2107,  2108,  2111,  2109,     0,  2110,     0,     0,     0,  1921,
    1921,  1921,     0,     0,  2111,  3691,  1174,     0,     0,  2113,
    1174,  2114,     0,  1174,     0,     0,     0,  4137,     0,     0,
       0,  4137,  1174,     0,     0,  1414,     0,     0,  4073,     0,
       0,  1174,     0,  1174,  1174,     0,  1174,  1174,  1174,  1174,
       0,  1174,     0,  1174,  1174,     0,  1174,     0,     0,     0,
       0,     0,     0,     0,  1174,  1174,  2112,     0,     0,  1174,
    1174,  1174,  1174,     0,     0,  1174,  1174,     0,     0,  1174,
       0,  1174,     0,  1174,     0,  1174,     0,     0,     0,  1174,
       0,     0,     0,     0,     0,     0,  1174,     0,  1174,     0,
    1174,  1174,  1174,     0,  1174,  2112,     0,  1174,  1174,  1174,
    1174,     0,     0,  1174,     0,  2113,     0,  2112,     0,     0,
       0,     0,     0,     0,     0,     0,  1174,     0,  2114,  1174,
       0,  1174,  1174,  1174,     0,     0,  1174,     0,  2115,  2116,
    2117,  2105,  1174,  2106,  2107,  2108,     0,  2109,     0,  2110,
       0,     0,     0,     0,  2113,  3584,     0,     0,  2111,     0,
    1174,     0,  1174,     0,     0,  1174,  2113,     0,     0,     0,
       0,  2115,  2116,  2117,     0,  1174,     0,  1174,     0,     0,
       0,     0,  1174,  2105,     0,  2106,  2107,  2108,  3585,  2109,
       0,  2110,     0,     0,     0,  2105,     0,  2106,  2107,  2108,
    2111,  2109,     0,  2110,     0,     0,     0,     0,  2115,  2116,
    2117,     0,  2111,     0,     0,  2115,  2116,  2117,     0,     0,
       0,     0,     0,     0,  2114,  3588,     0,     0,     0,     0,
    1174,  2105,  3589,  2106,  2107,  2108,     0,  2109,     0,  2110,
       0,     0,  1174,     0,     0,  2115,  2116,  2117,  2111,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2112,  3590,  2114,  2105,     0,  2106,  2107,  2108,     0,
    2109,     0,  2110,     0,  2105,  2114,  2106,  2107,  2108,     0,
    2109,  2111,  2110,     0,     0,     0,     0,     0,  1174,     0,
       0,  2111,     0,     0,  2962,     0,     0,     0,  4259,     0,
       0,     0,     0,  2112,     0,     0,  2115,  2116,  2117,  1174,
    2113,     0,     0,     0,     0,  2112,     0,     0,  2105,     0,
    2106,  2107,  2108,  3593,  2109,     0,  2110,     0,  2105,     0,
    2106,  2107,  2108,     0,  2109,  2111,  2110,     0,     0,     0,
       0,     0,     0,     0,     0,  2111,     0,     0,     0,     0,
       0,  2112,  2113,     0,     0,     0,     0,  2105,     0,  2106,
    2107,  2108,     0,  2109,  2113,  2110,     0,     0,     0,     0,
    2115,  2116,  2117,     0,  2111,     0,     0,     0,     0,     0,
    1174,     0,     0,     0,  2112,     0,     0,  3595,  2115,  2116,
    2117,     0,     0,     0,  2112,     0,     0,     0,     0,     0,
    2113,  1174,     0,     0,     0,  3597,     0,     0,     0,  2105,
       0,  2106,  2107,  2108,     0,  2109,     0,  2110,     0,  2114,
       0,     0,     0,     0,     0,     0,  2111,     0,  2115,  2116,
    2117,     0,  4441,  2113,     0,  2115,  2116,  2117,  2112,     0,
       0,     0,     0,  2113,     0,  3598,     0,     0,  2112,     0,
       0,     0,  3600,     0,     0,     0,     0,     0,  4441,  4441,
       0,  2114,     0,     0,     0,     0,  2115,  2116,  2117,  1176,
       0,  4388,  2105,  2114,  2106,  2107,  2108,  2112,  2109,     0,
    2110,     0,  1414,  3607,     0,     0,  1414,  2113,     0,  2111,
    2105,     0,  2106,  2107,  2108,     0,  2109,  2113,  2110,     0,
       0,     0,     0,     0,     0,     0,     0,  2111,     0,  2114,
       0,     0,     0,     0,     0,     0,  1176,     0,     0,     0,
       0,     0,  4441,  4441,     0,     0,  2113,  6087,  6088,  2112,
    6090,  6091,  6092,  6093,     0,     0,     0,     0,     0,     0,
    1816,     0,  2114,     0,     0,     0,     0,  2105,     0,  2106,
    2107,  2108,  2114,  2109,     0,  2110,     0,     0,   910,     0,
       0,     0,     0,     0,  2111,     0,     0,     0,     0,     0,
       0,     0,     0,  2115,  2116,  2117,     0,  2105,  2113,  2106,
    2107,  2108,     0,  2109,     0,  2110,     0,     0,     0,     0,
    3621,     0,  2112,     0,  2111,  2105,  2114,  2106,  2107,  2108,
       0,  2109,     0,  2110,     0,     0,  2114,     0,     0,  1174,
    2112,     0,  2111,  2105,     0,  2106,  2107,  2108,     0,  2109,
       0,  2110,     0,  2105,     0,  2106,  2107,  2108,  1174,  2109,
    2111,  2110,     0,     0,     0,  2114,     0,     0,  1176,  1921,
    2111,  2113,  1174,     0,     0,  1174,     0,     0,     0,     0,
    6197,     0,     0,  6200,     0,     0,     0,     0,     0,  2113,
       0,  6208,     0,     0,  6211,     0,     0,  2112,     0,  2115,
    2116,  2117,  1174,  1174,     0,     0,     0,  1174,     0,     0,
       0,     0,     0,     0,     0,     0,  4618,  2114,     0,     0,
    1414,     0,     0,     0,     0,     0,     0,  2112,  1174,     0,
    1174,     0,  1174,     0,  1174,     0,     0,     0,  2115,  2116,
    2117,     0,     0,     0,     0,  2112,  2113,     0,  4585,     0,
    2115,  2116,  2117,     0,  1174,  4627,     0,     0,     0,     0,
       0,     0,     0,  2112,     0,     0,     0,  4628,     0,     0,
       0,     0,     0,  2112,  1174,  1174,  2113,     0,     0,  1174,
    2114,  1174,     0,  1174,     0,     0,     0,     0,  1174,     0,
       0,     0,     0,     0,  2113,     0,     0,     0,  2114,  2105,
    1174,  2106,  2107,  2108,     0,  2109,     0,  2110,     0,     0,
       0,     0,  2113,     0,     0,     0,  2111,     0,     0,     0,
       0,  2105,  2113,  2106,  2107,  2108,     0,  2109,     0,  2110,
    1964,  1174,     0,     0,     0,     0,     0,     0,  2111,     0,
       0,     0,     0,     0,     0,  1174,  1176,     0,     0,  1174,
    1176,     0,     0,     0,  2105,  2114,  2106,  2107,  2108,     0,
    2109,     0,  2110,     0,     0,     0,     0,  1174,     0,     0,
       0,  2111,     0,     0,  1176,     0,     0,     0,  1964,     0,
       0,     0,     0,  1176,     0,  2114,     0,     0,     0,     0,
       0,     0,     0,     0,  2115,  2116,  2117,     0,     0,     0,
       0,     0,     0,  2114,     0,     0,     0,     0,     0,     0,
    4720,  4629,     0,     0,     0,     0,     0,     0,     0,  2112,
       0,  2114,     0,     0,     0,  4852,  4852,     0,     0,     0,
       0,  2114,     0,     0,     0,     0,  2115,  2116,  2117,     0,
       0,  2112,     0,     0,     0,     0,     0,     0,  2115,  2116,
    2117,     0,     0,  4633,     0,     0,     0,  1174,     0,     0,
    1176,  1176,  1176,  1176,     0,  4634,  1964,  1174,  2113,     0,
       0,     0,  1176,     0,  2112,     0,     0,     0,     0,  1174,
       0,  1174,     0,     0,  2115,  2116,  2117,     0,     0,  2105,
    2113,  2106,  2107,  2108,     0,  2109,  2105,  2110,  2106,  2107,
    2108,  4635,  2109,     0,  2110,     0,  2111,     0,     0,     0,
       0,     0,     0,  2111,     0,     0,  4806,  2115,  2116,  2117,
       0,  4811,  4812,  2113,     0,     0,     0,  2115,  2116,  2117,
       0,     0,     0,  2105,  4636,  2106,  2107,  2108,     0,  2109,
       0,  2110,     0,     0,  4638,     0,     0,     0,  4852,     0,
    2111,  1414,  1414,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1964,     0,     0,     0,     0,     0,     0,
       0,  2115,  2116,  2117,     0,     0,     0,  2114,     0,     0,
       0,  2115,  2116,  2117,     0,     0,     0,     0,  4647,     0,
       0,     0,     0,     0,  4441,     0,     0,     0,  4655,  2114,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2112,
    2115,  2116,  2117,     0,     0,     0,  2112,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4661,     0,     0,
       0,     0,  2114,     0,     0,     0,     0,     0,  2105,     0,
    2106,  2107,  2108,     0,  2109,     0,  2110,  1176,     0,     0,
       0,  1964,     0,  2112,     0,  2111,     0,     0,  2113,     0,
       0,     0,  2115,  2116,  2117,  2113,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4662,
    1174,  1174,     0,  1174,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1174,     0,  1174,     0,     0,  1174,
       0,     0,  2113,     0,     0,     0,     0,     0,     0,  4137,
       0,  1174,     0,  1174,     0,  1174,     0,  1174,     0,     0,
       0,     0,     0,     0,     0,  2115,  2116,  2117,     0,  1174,
    1174,     0,  3558,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4670,  2115,  2116,  2117,     0,     0,     0,  1964,
       0,     0,     0,  2105,  1174,  2106,  2107,  2108,  2112,  2109,
    4671,  2110,     0,     0,     0,     0,     0,  2114,     0,     0,
    2111,     0,     0,     0,  2114,  2105,     0,  2106,  2107,  2108,
       0,  2109,  1176,  2110,     0,     0,     0,     0,     0,     0,
       0,     0,  2111,     0,     0,     0,     0,     0,  1174,     0,
    2115,  2116,  2117,  1174,  1174,     0,     0,  2113,     0,     0,
       0,  2114,     0,     0,     0,     0,     0,  4674,     0,     0,
       0,     0,  1174,     0,     0,     0,  1174,  1176,     0,     0,
    2115,  2116,  2117,     0,     0,     0,  5998,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,  4678,  2115,  2116,
    2117,     0,     0,     0,     0,     0,     0,     0,   709,     0,
       0,     0,     0,     0,     0,  5041,  2115,  2116,  2117,     0,
       0,  -796,     0,  2112,     0,     0,  2115,  2116,  2117,     0,
       0,     0,  2105,  5365,  2106,  2107,  2108,     0,  2109,     0,
    2110,  6014,     0,  5371,     0,  2112,     0,     0,     0,  2111,
       0,   963,  3500,     0,  4852,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2114,  6015,     0,     0,
       0,     0,  2113,     0,     0,     0,     9,     0,  2105,     0,
    2106,  2107,  2108,     0,  2109,   964,  2110,     0,     0,     0,
       0,     0,   761,     0,  2113,  2111,     0,     0,     0,  2105,
       0,  2106,  2107,  2108,     0,  2109,    13,  2110,     0,     0,
       0,     0,  5157,     0,     0,     0,  2111,     0,     0,     0,
       0,     0,  5181,     0,     0,  -994,     0,     0,     0,     0,
     965,     0,   762,     0,    18,     0,  2105,   966,  2106,  2107,
    2108,     0,  2109,     0,  2110,     0,   763,    20,     0,     0,
       0,     0,  2112,  2111,     0,     0,     0,     0,     0,   710,
       0,     0,   967,  4852,  6016,     0,  6017,     0,     0,     0,
     968,     0,  2115,  2116,  2117,     0,  1174,  1174,     0,     0,
       0,  2114,    25,     0,     0,     0,  5999,     0,     0,  5372,
       0,     0,     0,  4171,  2115,  2116,  2117,     0,  2112,     0,
       0,  2113,     0,  2114,   969,     0,  2105,     0,  2106,  2107,
    2108,  5373,  2109,     0,  2110,  5998,     4,     5,     0,  2112,
       0,     0,     0,  2111,     0,     0,     0,  2115,  2116,  2117,
    4173,  1921,     0,     0,     0,     0,     0,   709,     0,     0,
       0,  1174,    33,     0,  5382,     0,     0,  2113,   970,   971,
       0,     0,     0,     0,     0,     0,  2112,  6000,     0,     0,
     764,     0,     0,     0,     0,     0,     0,     0,  2113,     0,
    6014,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -2079,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   765,     0,     0,  6015,     0,     0,     0,
    4175,     0,     0,  1174,     0,  2113,  6018,     0,     0,     0,
    2114,     0,     0,     0,     0,     0,     0,    45,     0,     0,
       0,     0,     0,  4118,     0,     0,  2112,     0,     0,     0,
       0,     0,     0,     0,   617,     0,  1174,  1174,     0,     0,
    2105,     0,  2106,  2107,  2108,  6001,  2109,     0,  2110,     0,
       0,     0,    76,     0,  -994,     0,  2114,  2111,     0,     0,
    1174,     0,  2115,  2116,  2117,     0,     0,     0,     0,  2115,
    2116,  2117,     0,   972,  1964,  2113,     0,  2114,     0,  5383,
       0,     0,     0,  1176,     0,  1176,  5387,     0,   710,     0,
       0,     0,     0,  6016,     0,  6017,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2115,  2116,  2117,     0,
       0,   618,     0,     0,  2114,  5999,     0,     0,  4852,     0,
    4852,     0,     0,  5388,     0,     0,     0,  6019,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1174,     0,  1174,
       0,     0,     0,  1176,  1176,     0,   973,     0,     0,  1176,
       0,     0,     0,  1176,  1176,  1176,     0,  6002,     0,     0,
    2112,     0,     0,     0,  1176,  1176,  1964,     0,     0,     0,
    1176,     0,     0,     0,  1176,  1176,  1176,     0,  1176,  1176,
    1176,  1964,  1964,  5459,  2114,     0,  6000,     0,  1176,     0,
    1176,     0,     0,  1176,  1176,  1176,  1176,     0,  1176,     0,
    1176,  1176,  1176,     0,     0,     0,     0,  1176,     0,  2113,
    1176,  2115,  2116,  2117,     0,     0,  1176,  1176,  4852,  1176,
    1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,     0,
    1176,  1176,  1176,  1176,  1176,  6018,  1176,  1176,     0,  1176,
    1176,  1176,     0,     0,  1176,  1176,  1176,  1174,  1176,  1176,
    1176,     0,  1176,     0,  1176,     0,  1176,     0,     0,  1921,
    1176,  1176,  1176,     0,     0,  1176,  1176,  1176,  1176,  1176,
       0,  1176,     0,  1174,  6001,     0,     0,     0,  1176,  6159,
       0,  1176,     0,   974,     0,     0,     0,     0,     0,  1176,
       0,     0,     0,  1176,  1176,  1176,  1176,     0,  1176,  1176,
    1174,  5586,  1176,  1176,  1176,  1176,  1176,  1176,  1176,  1176,
    1176,  1176,  1176,  1176,  1176,     0,     0,  1176,  2114,     0,
       0,  6020,  1964,     0,  1174,  1174,  2115,  2116,  2117,  1964,
    1009,  1010,  1011,  1012,  1013,  1014,  1015,  1016,  1017,  1018,
    1019,   766,     0,  5816,     0,     0,     0,     0,  2115,  2116,
    2117,     0,     0,     0,  1176, -2079,     0,     0,     0,  -163,
       0,     0,     0,  5646,  1816,  5987,     0,  2105,     0,  2106,
    2107,  2108,  1964,  2109,     0,  2110,     0,     0,     0,     0,
       0,     0,     0,     0,  2111,     0,  6002,  4649,     0,  2105,
       0,  2106,  2107,  2108,     0,  2109,     0,  2110,     0,     0,
       0,     0,     0,     0,   656,     0,  2111,     0,  2105,     0,
    2106,  2107,  2108,  6003,  2109,  5715,  2110,     0,     0,     0,
       0,     0,     0,     0,     0,  2111,     0,     0,  4652,  1042,
       0,     0,   767,     0,     0,     0,     0,     0,     0,  4033,
       0,  1176,     0,     0,     0,     0,     0,     0,  2750,  2751,
    2752,  2753,     0,     0,     0,  2115,  2116,  2117,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1176,
       0,  1176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4553,     0,     0,     0,  2112,     0,     0,
       0,     0,  2754,  2755,  2756,  1964,     0,     0,     0,     0,
       0,  2115,  2116,  2117,  1062,     0,  1176,     0,     0,  2112,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2115,  2116,  2117,     0,     0,     0,  2112,     0,
       0,     0,     0,     0,     0,     0,  2113,     0,     0,  1174,
       0,  2757,  2758,     0,     0,     0,     0,     0,     0,     0,
    6020,     0,     0,     0,     0,     0,     0,     0,  2113,  2115,
    2116,  2117,     0,     0,     0,  1174,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1174,     0,  2113,  1009,  1010,
    1011,  1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,     0,
       0,     0,  1176,     0,  1079,  1174,     0,  1964,     0,     0,
       0,     0,     0,  2759,     0,     0,     0,     0,     0,     0,
    1009,  1010,  1011,  1012,  1013,  1014,  1015,  1016,  1017,  1018,
    1019,     0,     0,  1176,  1144,     0,     0,     0,  5715,  2115,
    2116,  2117,     0,     0,     0,  5812,     0,     0,     0,     0,
       0,     0,  6003,     0,  1816,  2114,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   963,     0,
       0,     0,     0,     0,     0,     0,     0,  2114,  2760,     0,
       0,     0,     0,     0,     0,     0,     0,  1042,     0,     0,
       0,     0,     0,     9,     0,     0,  2114,     0,     0,     4,
       5,     0,   964,     0,     0,     0,     0,     0,  5858,     0,
       0,     0,  5647,     0,     0,     0,     0,     0,     0,  1042,
    5648,     0,     0,    13,  1174,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2297,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   965,     0,     0,
       0,    18,     0,     0,   966,     0,     0,     0,     4,     5,
       0,   963,  1062,     0,    20,     0,     0,     0,     0,  2761,
       0,     0,     0,  2115,  2116,  2117,     0,     0,     0,   967,
       0,  6012,  4033,     0,     0,  6012,     9,   968,     0,     0,
       0,     0,     0,     0,  1062,   964,  2297,     0,  4813,    25,
    4814,     0,     0,  1507,     0,  4815,     4,     5,   869,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,   969,     0,  2750,  2751,  2752,  2753,     0,     0,     0,
       0, -3666, -3666, -3666,     0,     0,     0,     0,  2762,     0,
     965,     0,     0,     0,    18,     0,     0,   966,  1174,     0,
       0,     0,  1079,     0,  1176,     0,     0,    20,  -960,    33,
    -960,     0,     0,     0,     0,   970,   971,  2754,  2755,  2756,
       0,     0,   967,     0,     0,     0,     0,     0,     0,     0,
     968,     0,     0,     0,  1079,     0,  2456,     0,     0,     0,
       0,     0,    25,     0,  6108,     0,     0,  1964,  1176,     0,
    6108,  6108,  2763,     0,  2764,     0,  1176,  1176,     0,     0,
    2765,     0,     0,     0,   969,     0,  2757,  2758,     0,     0,
       0,     0,  6012,     0,     0,     0,     0,     0,     0,  4816,
       0,     0,  6154,     0,    45,     0,     0,     0,     0,     0,
    6012,  6062,     0,     0,  2298,     0,     0,     0,     0,     0,
       0,  4817,    33,     0,     0,     0,   669,     0,   970,   971,
    5647,  1176,     0,     0,     0,     0,     0,     0,  5648,    76,
       0,  2766,  1964,  1964,  6154,     0,     0,     0,  2759,     0,
       0,     0,     0,  1174,     0,  1975,     0,     0,     0,     0,
     972,     0,     0,     0,     0,     0,  4818,  1176,  1176,  1176,
    5648,     0,     0,  2298,     0,     0,     0,     0,     0,  2002,
       0,     0,     0,     0,     0,  2767,     0,     0,  2016,     0,
       0,  6108,     0,  5649,     0, -3666,  5650,    45,     0,     0,
       0,     0,     0,  6108,     0,     0,  5651,  6108,     0,     0,
       0,     0,     0,  2760,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4819,  4820,  4821,     0,     0,  1964,     0,
    6173,     0,    76,   973,  1174,     0,     0,     0,     0,  1176,
       0,     0,  1964,     0,     0,  4822,     0,     0,  6012,     0,
       0,     0,     0,   972,     0,     0,     0,  1176,     0,     0,
    2299,  1176,  1176,     0,  1176,  1176,     0,     0,  2101,     0,
    2115,  2116,  2117,  1176,  2300,  1176,  2301,  2768,     0,     0,
    1174,     0,     0,     0,     0,     0,     0,     0,  2769,     0,
       0,     0,  2115,  2116,  2117,  4823,     0,  4824,     0,     0,
       0,     0,     0,  1176,  2761,     0,  6108,  6297,  2302, -3666,
       0,  2115,  2116,  2117,  -960,     0,  4825,     0,     0,  2299,
       0,  2303,     0,     0,     0,     0,   973,     0,     0,     0,
       0,  1176,     0,  2300,  4826,  2301,     0,     0,     0,     0,
       0,  4827,  6012,     0,  1176,     0,     0,     0,  1964,     0,
       0,     0,  3278,  2304,     0,     0,  4828,  1176,     0,     0,
       0,     0,     0,     0,     0,     0,  4829,  2302,     0,     0,
     974,  2305,     0,  2762,     0,     0,     0,     0,     0,     0,
    2303,  4830,     0,  1176,  3279,     0,     0,     0,     0,     0,
       0,     0,  6108,     0,  6108,  6108,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2304,     0,     0,  1174,     0,     0,     0,  1174,
    3280,     0,     0,     0,     0,     0,     0,  1176,     0,     0,
    2305,     0,     0,     0,  1964,  6108,     0,  2763,  4831,  2764,
       0,  5649,     0,     0,  5650,  2765,     0,     0,  4832,  2306,
       0,     0,  2295,     0,  5819,     0,  2307,     0,     0,     0,
       0,     0,     0,   974,     0,  6108,  2308,     0,     0,     0,
    1964,  1964,     0,  5649,     0,     0,  5650,     0,     0,     0,
    2309,     0,     0,     0,  4833,  6108,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4834,     0,   963,
       0,     0,     0,     0,     0,     0,  2766,     0,  2306,     0,
       0,  2310,     0,     0,  2311,  2307,     0,   963,     0,     0,
       0,  2160,     0,     0,     9,  2308,     0,     0,  1174,     0,
    2312,     0,     0,   964,     0,     0,     0,  4835,     0,  2309,
       0,     0,     9,  4836,     0,     0,   670,     0,     0,     0,
    2767,   964,  1176,     0,    13,     0,     0,     0,     0,     0,
    1964,  2313,  1964,  1964,  1964,     0,  1176,     0,  1176,  1176,
    2310,     0,    13,  2311,     0,     0,     0,     0,   965,     0,
       0,     0,    18,     0,     0,   966,     0,  2451,     0,  2312,
       0,     0,     0,     0,     0,    20,   965,     0,     0,     0,
      18,  4837,     0,   966,     0,     0,     0,     0,  4838,     0,
     967,     0,     0,    20,     0,     0,     0,     0,   968,     0,
    2313,     0,     0,     0,     0,     0,     0,  1176,   967,     0,
      25,     0,  2494,     0,     0,     0,   968,     0,     0,  4839,
       0,     0,  2768,     0,     0,     0,     0,     0,    25,     0,
       0,     0,   969,  2769,  4840,  4841,     0,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,  4842,     0,     0,
     969,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1256,     0,     0,     0,     0,
      33,     0,     0,     0,     0,   676,   970,   971,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    33,  1227,
       0,     0,     0,     0,   970,   971,     0,  1257,  1258,  3281,
       0,     0,     0,     0,     0,  1176,  1176,  1259,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    15,    16,     0,     0,     0,     0,     0,  3282,  3283,
       0,  3284,  3285,  3286,  3287,  3288,     0,  3289,  3290,  3291,
    3292,  3293,  3294,  3295,  3296,    45,  3297,  3298,  3299,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1260,     0,     0,    45,     0,     0,     0,     0,     0,     0,
       0, -3825,     0,  1964,  1261,     0,     0,     0,     0,     0,
      76,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    76,     0,
       0,   972,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   972,
       0,     0,     0,     0,  1176,     0,  1262,     0,  1176,     0,
       0,  1176,     0,     0,     0,     0,     0,  1263,     0,     0,
    1176,     0,  3300,  3301,     0,     0,     0,     0,     0,  1176,
       0,  1176,  1176,     0,  1176,  1176,  1176,  1176,     0,  1176,
       0,  1176,  1176,     0,  1176,     0,     0,     0,     0,     0,
       0,     0,  1176,  1176,   973, -3825,     0,  1176,  1176,  1176,
    1176,     0,     0,  1176,  1176,     0,     0,  1176,     0,  1176,
       0,  1176,   973,  1176,  1264,     0,     0,  1176,     0,     0,
       0,     0,     0,     0,  1176,     0,  1176,     0,  1176,  1176,
    1176,     0,  1176,     0,     0,  1176,  1176,  1176,  1176,     0,
       0,  1176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1176,     0,     0,  1176,  1265,  1176,
    1176,  1176,     0,     0,  1176,     0,     0,     0,     0,     0,
    1176,     0,     0,     0,  1266,     0,     0,     0,     0,     0,
       0,     0,     0,  1267,     0,     0,     0,     0,  1176,     0,
    1176,     0,     0,  1176,     0,  1268,     0,     0,     0,     0,
       0,     0,     0,  1176,  1964,  1176,  1269,     0,     0,     0,
    1176,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1964,     0,     0,     0,     0,     0,     0,     0,  1270,
       0,   974,     0,     0,     0,     0,     0,     0,  2671,     0,
    2671,     0,     0,     0,     0,     0,     0,     0,     0,   974,
       0,     0,     0,     0,     0,     0,     0,     0,  1176,     0,
       0, -2279,  1271,     0,     0,  1272,     0,  1273,     0,     0,
    1176,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1964,     0,     0,     0,
       0,     0,     0,     0,  1274,  1275,     0,     0,     0,     0,
    1276,  1277,     0,     0,  2719,     0,     0,     0,  2724,     0,
    2726,     0,     0,     0,     0,     0,  1176,  1278,     0,  2742,
    2743,     0,     0,     0,     0,  2772,     0,     0,     0,  2777,
    2778,  2779,     0,  2781,  2782,  2783,     0,  1176,  1279,     0,
       0,     0,     0,  2791,     0,  2794,     0,     0,  2795,  2796,
    2797,  2798,     0,     0,     0,  2802,  2803,  2804,     0,  1280,
       0,     0,  2809,     0,     0,  2815,     0,     0,     0,     0,
       0,  2819,  2820,     0,  2823,     0,  2825,  2826,  2827,  2828,
    2831,  2832,     0,  2835,     0,  2836,  2837,  2838,  2839,  2840,
       0,  2846,  2847,     0,  2850,  2851,  2852,     0,     0,  2855,
       0,  2857,     0,  2859,  2860,  2861,     0,  2863,  1176,  2865,
       0,  2866,     0,  1281,     0,  2869,  2815,  2871,     0,     0,
    2877,  2878,     0,  2880,  2881,     0,  2882,     0,  1282,  1176,
       0,     0,     0,  2886,     0,     0,  1964,  1283,     0,     0,
    1284,  1285,     0,     0,  2894,     0,     0,     0,  2895,  2896,
       0,     0,     0,     0,     0,  1286,   963,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4815,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     9,     0,     0,     0,     0,     0,     0,     0,     0,
     964,     0,  1287,  4815,     4,     5,  4815,     4,     5,  1288,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2986,
       0, -3651,     0,     0,     0,     0,     0,     0, -3283,     0,
    1289,  5596,  -960,  4929,  -960,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   965,     0,     0,     0, -3650,
       0,     0,   966,     0,     0,  4931,     0,     0,     0,     0,
    2456,     0,    20,  4933,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   967,     0,     0,
       0, -3283,     0,     0,  2456,   968,     0,  2456,  1290,     0,
       0,     0,     0,     0,     0,  5597,     0, -3650,     0,     0,
       0,     0,     0,  4816,     0,     0,  3065,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   969,
       0,     0,     0,     0,     0,     0,     0,  4816,     0,     0,
    4816,     0,     0,  1964,  3095,     0,  3100,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1176,     0,     0,
       0,     0,     0,     0,     0,  4935,     0, -3650,     0,     0,
       0,     0,     0,   970,   971,     0,  1176,     0,     0,     0,
    4818,  3122,     0,     0,     0,     0,     0,     0,     0,     0,
    1176,     0,     0,  1176,     0,     0,  4937,     0,     0,     0,
       0,     0,     0,     0,  4818,     0,     0,  4818,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1176,  1176,     0,     0,     0,  1176,     0,     0,  4939,     0,
       0,     0,     0,     0,     0,     0,     0,  4819,  4820,  4821,
       0,     0, -3650,     0,     0,     0,  1176,     0,  1176,     0,
    1176,     0,  1176,     0,     0,     0,     0,     0,     0,  4822,
       0,  4819,  4820,  4821,  4819,  4820,  4821,  3196,     0,     0,
       0,     0,  1176,     0,     0,     0,     0, -3651,  1964,     0,
       0,     0,     0,  4822,     0,     0,  4822,     0,     0,     0,
       0,     0,  1176,  1176,     0,     0,     0,  1176,   972,  1176,
       0,  1176,     0,     0,     0,     0,  1176,     0,     0,  4823,
       0,  4824,     0,     0,     0,     0,     0,     0,  1176,     0,
       0,     0,     0,     0,   914,  4940,     0,     0,  -960,     0,
    4825,     0,     0,  4823,     0,  4824,  4823,     0,  4824,     0,
       0,     0,     0,  1964,     0,     0,     0,     0,  4826,  1176,
       0,     0,     0,     0,  4825,  4827,   915,  4825,     0,     0,
       0,     0,     0,  1176,     0,     0,     0,  1176,     0,     0,
    4828,   973,  4826,     0,     0,  4826,     0,   917,     0,  4827,
    4829,     0,  4827,     0,     0,  1176,   918,     0,     0,     0,
       0,     0,     0,     0,  4828,  4830,     0,  4828,     0,     0,
       0,     0,     0,     0,  4829,  1964,   919,  4829,  4942,     0,
       0,     0,     0,     0,     0,  4944,     0,     0,   920,  4830,
       0,     0,  4830,   921,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   922,     0,  4946,     0,
       0,     0,  4831,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4832,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1176,  4831,     0,     0,  4831,
       0,     0,     0,     0,     0,  1176,  4832,   963,     0,  4832,
       0,     0,     0,     0,     0,     0,     0,  1176,  4833,  1176,
       0,   923,     0,     0,     0,   924,     0,     0,   974,     0,
       0,  4834,     9,     0,     0,     0,     0,     0,     0,  3442,
       0,   964,  4833,     0,   925,  4833,     0,     0,   926,   927,
       0,     0,     0,     0,     0,  4834,     0,  4948,  4834,     0,
       0,     0,    13,     0,     0,     0,     0,     0,     0,     0,
       0,  4835,     0,     0,     0,     0,     0,  4836,     0,     0,
     928,     0,     0,  3491,     0,     0,   965,     0,   929,   930,
      18,  3498,  3499,   966,     0,  4835,     0,     0,  4835,     0,
       0,  4836,     0,    20,  4836,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,   968,     0,     0,     0,
       0,     0,     0,     0,     0,  4837,     0,     0,    25,     0,
       0,  2648,  4838,     0,     0,     0,  3518,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4837,
     969,     0,  4837,     0,     0,     0,  4838,     0,     0,  4838,
       0,     0,     0,  4839,     0,     0,     0,     0,     0,     0,
    2649,     0,  3553,  3555,  3557,     0,     0,     0,  4840,  4841,
       0,     0,     0,     0,     0,   963,     0,  4839,    33,     0,
    4839,  4842,     0,     0,   970,   971,     0,     0,     0,     0,
       0,     0,  4840,  4841,   963,  4840,  4841,     0,  1176,  1176,
       9,  1176,     0,     0,     0,  4842,  2650,     0,  4842,   964,
       0,  2651,  1176,     0,  1176,     0,     0,  1176,     0,     9,
       0,     0,  2652,  2653,     0,     0,     0,     0,   964,  1176,
      13,  1176,     0,  1176,     0,  1176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1176,  1176,    13,
       0,     0,  3634,    45,   965,     0,     0,     0,    18,     0,
       0,   966,     0,     0,     0,     0,     0,     0,  3642,     0,
    3643,    20,  1176,   965,     0,     0,     0,    18,     0,     0,
     966,     0,     0,     0,     0,     0,   967,     0,    76,     0,
      20,     0,     0,     0,   968,     0,     0,     0,  3665,     0,
       0,     0,     0,     0,     0,   967,    25,     0,     0,   972,
       0,     0,     0,   968,     0,     0,  1176,     0,     0,     0,
       0,  1176,  1176,     0,     0,    25,  3681,     0,   969,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2451,
    1176,     0,     0,     0,  1176,     0,     0,   969,     0,     0,
       0,     0,  2451,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1941,    33,     0,     0,     0,
       0,     0,   970,   971,     0,     0,  2654,     0,  3737,     0,
       0,     0,   973,     0,     0,    33,  2655,     0,     0,     0,
       0,   970,   971,     0,     0,     0,     0,  2656,     0,     0,
       0,     0,     0,  2657,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3100,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2658,     0,     0,  2659,     0,     0,
       0,    45,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      45,     0,     0,     0,     0,     0,  2660,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    76,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    76,     0,   972,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   972,     0,     0,   974,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1176,  1176,     0,  3871,     0,     0,
       0,     0,     0,  4079,     0,     0,     0,     0,     0,     0,
       0,  3871,     0,  2451,  2451,     0,     0,     0,     0,     0,
     973,     0,  4314,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   973,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1176,
       0,     0,     0,     0,  1964,     0,     0,     0,     0,     0,
       0,     0,  3964,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1964,     0,     0,     0,
       0,     0,     0,     0,  1176,  1176,     0,   974,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4040,  4041,     0,     0,     0,     0,   974,     0,  1176,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1176,     0,  1176,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4114,
       0,     0,     0,  4116,     0,     0,  4117,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4147,     0,     0,     0,     0,  4151,
    4152,  4153,  4154,     0,  4155,     0,  4156,  4157,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4161,  4162,     0,
       0,     0,  4163,  4164,  4165,  4166,     0,     0,  4167,  4168,
       0,     0,  4170,     0,  4172,     0,  4174,     0,  4176,     0,
       0,     0,  4178,     0,     0,  1176,     0,     0,     0,  2828,
       0,  4181,     0,  2828,     0,  4184,     0,  4185,     0,     0,
    4186,  4187,  4189,  4190,     0,     0,  4191,     0,     0,     0,
       0,  1176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4198,     0,  4199,  4200,  4201,     0,     0,  4202,
       0,     0,     0,     0,     0,  4206,     0,     0,  1176,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4225,     0,
       0,     0,  1176,  1176,     0,     0,     0,     0,     0,     0,
    4236,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4272,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2451,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3100,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3100,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1176,     0,     0,
    1964,  1964,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4415,     0,     0,     0,     0,     0,
       0,     0,     0,  1176,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1176,     0,     0,     0,  1964,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1176,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1176,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4570,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4590,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4597,     0,     0,  4598,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4616,  4617,     0,     0,     0,
    4622,     0,     0,     0,     0,     0,  1176,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4643,     0,  4644,     0,  4645,     0,  4646,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4669,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4691,  4692,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3871,     0,     0,     0,     0,     0,     0,     0,     0,
    1964,     0,     0,  4711,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2451,     0,     0,     0,     0,     0,
       0,     0,  1964,     0,     0,     0,     0,     0,  2451,     0,
       0,  1176,  2451,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3100,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1176,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4885,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3871,     0,     0,     0,     0,     0,     0,     0,  1176,     0,
       0,     0,  3871,     0,  4897,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1176,     0,     0,     0,  1176,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5042,  5043,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5050,     0,  5051,
       0,     0,  5052,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5072,     0,  5073,     0,  5074,     0,
    5075,     0,     0,     0,     0,     0,  1176,     0,     0,     0,
       0,     0,  5081,  5082,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2451,     0,     0,     0,     0,  2451,  2451,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3100,     0,     0,     0,  3100,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5317,
    5318,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3871,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3871,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2451,
    2451,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3100,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5536,     0,  5538,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5637,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3871,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2451,  2451,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3871,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3100,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5854,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  6065,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1004,     0,     0,
       0,  1005,  1006,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1007,  1008,     0,  1009,  1010,  1011,  1012,  1013,
    1014,  1015,  1016,  1017,  1018,  1019,  6184,     0,     0,     0,
       0,     0,     0,  1020,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1021,  1022,  1023,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,  1027,     0,     0,     0,     0,     0,
       0,  1028,  1029,     0,     0,  1030,  1031,  1032,  1033,     0,
    1034,  1035,     0,  1036,  1037,     0,     0,     0,     0,     0,
       0,     0,  1038,     0,     0,  1039,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2101,     0,     0,
       0,     0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,
       0,     0,     0,     0,  1044,  1045,  1046,     0,     0,     0,
       0,     0,  1047,     0,     0,     0,     0,     0,     0,     0,
    1048,     0,     0,  1049,     0,     0,     0,     0,     0,     0,
       0,     0,  1050,     0,  1051,     0,  1052,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1053,  1054,     0,  1055,     0,     0,     0,  1056,     0,     0,
       0,  1057,     0,     0,  1058,     0,  1059,  1060,  1061,  1062,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1063,  1064,  1065,     0,  1066,
       0,     0,     0,     0,     0,     0,  1067,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1068,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,    37,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1078,  1079,
       0,     0,     0,     0,     0,     0,     0,     0,  3100,  1080,
    1081,  1082,     0,     0,    44,     0,     0,  1083,  1084,     0,
       0,     0,     0,    46,     0,     0,     0,    47,    48,    49,
     565,    50,    51,    52,    53,    54,    55,    56,    57,  1085,
      59,    60,    61,    62,    63,    64,  1086,    66,    67,    68,
      69,    70,    71,    72,  1087,   566,     0,   567,   568,    78,
      79,    80,    81,    82,    83,   569,    85,    86,    87,    88,
    1088,    89,   571,    91,    92,    93,    94,    95,   572,  1089,
      97,  1090,    99,  1091,  1092,  1093,  1094,  1095,     0,   105,
     106,   107,   573,   109,   110,   111,   112,   113,   114,   115,
     116,   117,  1096,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,  1097,  1098,  1099,   575,  1100,  1101,
     135,  3100,   136,   137,   138,   139,   140,   141,   142,   576,
     144,   145,   146,   147,   577,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   578,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   579,   580,   175,     0,  1102,   177,   178,
     581,   180,   181,  1103,   582,   184,   185,   583,   187,   188,
     584,     0,   190,   191,   192,  1104,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   585,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   586,   213,  1105,  1106,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,  1107,
     257,  1108,   259,   260,   261,   262,   263,  1109,   265,   266,
     267,   268,   269,   270,   271,   272,   273,  1110,  1111,   276,
     277,   278,   279,   280,   587,   281,   282,   283,   284,   285,
     286,   287,   288,   289,  1112,   291,   292,   293,   588,   294,
     295,  1113,   297,   298,   299,   300,   301,   302,   303,  1114,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,  1115,   316,   317,   318,   319,   320,   321,  1116,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     344,   592,   346,   347,   348,   349,   350,   351,   352,  1117,
     354,   593,   356,   357,   358,  1118,  1119,   361,   362,   594,
     364,   365,  1120,   367,   368,   369,   370,   371,   372,  1121,
     374,   595,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,     0,   390,   391,   392,
     393,   596,   395,   396,   597,   398,   399,   400,   401,  1122,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,  1123,  1124,
    1125,  1126,   425,   426,   427,   428,  1127,  1128,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   599,   441,   442,
     443,  1129,   445,  1130,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,  1131,  1132,   600,  1133,   461,   462,
     463,     0,   464,   601,   466,  1134,     0,     0,     0,     0,
       0,     0,     0,     0,  1135,  1136,     0,     0,     0,  1004,
    1137,     0,     0,  1005,  1006,  1138,     0,     0,     0,  1139,
    1140,     0,     0,  1141,  1007,  1008,     0,  1009,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,     0,     0,
       0,     0,     0,     0,     0,  1020,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1021,  1022,  1023,  1024,     0,     0,     0,  2812,
       0,     0,     0,  1025,  1026,     0,  1027,     0,     0,     0,
       0,     0,     0,  1028,  1029,     0,     0,  1030,  1031,  1032,
    1033,     0,  1034,  1035,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,  1038,     0,     0,  1039,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1040,  1041,  1042,     0,  1043,     0,
       0,     0,     0,     0,     0,     0,  1044,  1045,  1046,     0,
       0,     0,     0,     0,  1047,     0,     0,     0,     0,     0,
       0,     0,  1048,     0,     0,  1049,     0,     0,     0,     0,
       0,     0,     0,     0,  1050,  2813,  1051,     0,  1052,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1053,  1054,     0,  1055,     0,     0,     0,  1056,
       0,     0,     0,  1057,     0,     0,  1058,     0,  1059,  1060,
    1061,  1062,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1063,  1064,  1065,
       0,  1066,     0,     0,     0,     0,     0,     0,  1067,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1068,
    1069,     0,     0,     0,     0,     0,     0,     0,  1070,  1071,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1072,     0,     0,
       0,     0,     0,     0,  1073,  1074,     0,  1075,  1076,  1077,
       0,     0,     0,     0,     0,     0,     0,     0,  2814,     0,
    1078,  1079,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1080,  1081,  1082,     0,     0,     0,     0,     0,  1083,
    1084,     0,     0,     0,     0,     0,     0,     0,     0,    47,
      48,    49,   565,    50,    51,    52,    53,    54,    55,    56,
      57,  1085,    59,    60,    61,    62,    63,    64,  1086,    66,
      67,    68,    69,    70,    71,    72,  1087,   566,     0,   567,
     568,    78,    79,    80,    81,    82,    83,   569,    85,    86,
      87,    88,  1088,    89,   571,    91,    92,    93,    94,    95,
     572,  1089,    97,  1090,    99,  1091,  1092,  1093,  1094,  1095,
       0,   105,   106,   107,   573,   109,   110,   111,   112,   113,
     114,   115,   116,   117,  1096,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,  1097,  1098,  1099,   575,
    1100,  1101,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   576,   144,   145,   146,   147,   577,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     578,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   579,   580,   175,     0,  1102,
     177,   178,   581,   180,   181,  1103,   582,   184,   185,   583,
     187,   188,   584,     0,   190,   191,   192,  1104,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   585,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   586,   213,  1105,
    1106,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,  1107,   257,  1108,   259,   260,   261,   262,   263,  1109,
     265,   266,   267,   268,   269,   270,   271,   272,   273,  1110,
    1111,   276,   277,   278,   279,   280,   587,   281,   282,   283,
     284,   285,   286,   287,   288,   289,  1112,   291,   292,   293,
     588,   294,   295,  1113,   297,   298,   299,   300,   301,   302,
     303,  1114,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,  1115,   316,   317,   318,   319,   320,   321,
    1116,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   344,   592,   346,   347,   348,   349,   350,   351,
     352,  1117,   354,   593,   356,   357,   358,  1118,  1119,   361,
     362,   594,   364,   365,  1120,   367,   368,   369,   370,   371,
     372,  1121,   374,   595,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   596,   395,   396,   597,   398,   399,   400,
     401,  1122,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
    1123,  1124,  1125,  1126,   425,   426,   427,   428,  1127,  1128,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   599,
     441,   442,   443,  1129,   445,  1130,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,  1131,  1132,   600,  1133,
     461,   462,   463,     0,   464,   601,   466,  1134,     0,     0,
       0,     0,     0,     0,     0,     0,  1135,  1136,     0,     0,
       0,  1004,  1137,     0,     0,  1005,  1006,  1138,     0,     0,
       0,  1139,  1140,     0,     0,  1141,  1007,  1008,     0,  1009,
    1010,  1011,  1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,
       0,     0,     0,     0,     0,     0,     0,  1020,     0,     0,
       0,     0,     0,     0,  2447,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2448,  1022,  1023,  1024,     0,     0,
       0,     0,     0,     0,     0,  1025,  1026,     0,  1027,     0,
       0,     0,     0,     0,     0,  1028,  1029,     0,     0,  1030,
    1031,  1032,  1033,     0,  1034,  1035,     0,  1036,  1037,     0,
       0,     0,     0,     0,     0,     0,  2449,     0,     0,  1039,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,     0,     0,     0,     0,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,  1048,     0,     0,  1049,     0,     0,
       0,     0,     0,     0,     0,     0,  1050,     0,  1051,     0,
    1052,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1053,  1054,     0,  1055,     0,     0,
       0,  1056,     0,     0,     0,  1057,     0,     0,  1058,     0,
    1059,  1060,  1061,  1062,     0,  2450,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1063,
    1064,  1065,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1068,  1069,     0,     0,     0,     0,     0,     0,     0,
    1070,  1071,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1072,
       0,     0,     0,     0,     0,     0,  1073,  1074,     0,  1075,
    1076,  1077,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1080,  1081,  1082,     0,     0,     0,     0,
       0,  1083,  1084,     0,     0,     0,     0,     0,     0,     0,
       0,    47,    48,    49,   565,    50,    51,    52,    53,    54,
      55,    56,    57,  1085,    59,    60,    61,    62,    63,    64,
    1086,    66,    67,    68,    69,    70,    71,    72,  1087,   566,
       0,   567,   568,    78,    79,    80,    81,    82,    83,   569,
      85,    86,    87,    88,  1088,    89,   571,    91,    92,    93,
      94,    95,   572,  1089,    97,  1090,    99,  1091,  1092,  1093,
    1094,  1095,     0,   105,   106,   107,   573,   109,   110,   111,
     112,   113,   114,   115,   116,   117,  1096,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,  1097,  1098,
    1099,   575,  1100,  1101,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   576,   144,   145,   146,   147,   577,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   578,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   579,   580,   175,
       0,  1102,   177,   178,   581,   180,   181,  1103,   582,   184,
     185,   583,   187,   188,   584,     0,   190,   191,   192,  1104,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   585,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   586,
     213,  1105,  1106,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,  1107,   257,  1108,   259,   260,   261,   262,
     263,  1109,   265,   266,   267,   268,   269,   270,   271,   272,
     273,  1110,  1111,   276,   277,   278,   279,   280,   587,   281,
     282,   283,   284,   285,   286,   287,   288,   289,  1112,   291,
     292,   293,   588,   294,   295,  1113,   297,   298,   299,   300,
     301,   302,   303,  1114,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,  1115,   316,   317,   318,   319,
     320,   321,  1116,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   344,   592,   346,   347,   348,   349,
     350,   351,   352,  1117,   354,   593,   356,   357,   358,  1118,
    1119,   361,   362,   594,   364,   365,  1120,   367,   368,   369,
     370,   371,   372,  1121,   374,   595,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   596,   395,   396,   597,   398,
     399,   400,   401,  1122,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,  1123,  1124,  1125,  1126,   425,   426,   427,   428,
    1127,  1128,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   599,   441,   442,   443,  1129,   445,  1130,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,  1131,  1132,
     600,  1133,   461,   462,   463,     0,   464,   601,   466,  1134,
       0,     0,     0,     0,     0,     0,     0,     0,  1135,  1136,
       0,     0,     0,  1004,  1137,     0,     0,  1005,  1006,  1138,
       0,     0,     0,  1139,  1140,     0,     0,  1141,  1007,  1008,
       0,  1009,  1010,  1011,  1012,  1013,  1014,  1015,  1016,  1017,
    1018,  1019,     0,     0,     0,     0,     0,     0,     0,  1020,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1021,  1022,  1023,  1024,
       0,     0,     0,     0,     0,     0,     0,  1025,  1026,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
       0,  1030,  1031,  1032,  1033,     0,  1034,  1035,     0,  1036,
    1037,     0,     0,     0,     0,     0,     0,     0,  1038,     0,
       0,  1039,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1040,  1041,
    1042,     0,  1043,     0,     0,     0,     0,     0,     0,     0,
    1044,  1045,  1046,     0,     0,     0,     0,     0,  1047,     0,
       0,     0,     0,     0,     0,     0,  1048,     0,     0,  1049,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1053,  1054,     0,  1055,
       0,     0,     0,  1056,     0,     0,     0,  1057,     0,     0,
    1058,     0,  1059,  1060,  1061,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,  1064,  1065,     0,  1066,     0,     0,     0,     0,
       0,     0,  1067,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1068,  1069,     0,     0,     0,     0,     0,
       0,     0,  1070,  1071,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1072,     0,     0,     0,     0,     0,     0,  1073,  1074,
       0,  1075,  1076,  1077,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1078,  1079,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1080,  1081,  1082,     0,     0,
       0,     0,     0,  1083,  1084,     0,  1974,     0,     0,     0,
       0,     0,     0,    47,    48,    49,   565,    50,    51,    52,
      53,    54,    55,    56,    57,  1085,    59,    60,    61,    62,
      63,    64,  1086,    66,    67,    68,    69,    70,    71,    72,
    1087,   566,     0,   567,   568,    78,    79,    80,    81,    82,
      83,   569,    85,    86,    87,    88,  1088,    89,   571,    91,
      92,    93,    94,    95,   572,  1089,    97,  1090,    99,  1091,
    1092,  1093,  1094,  1095,     0,   105,   106,   107,   573,   109,
     110,   111,   112,   113,   114,   115,   116,   117,  1096,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
    1097,  1098,  1099,   575,  1100,  1101,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   576,   144,   145,   146,   147,
     577,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   578,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   579,
     580,   175,     0,  1102,   177,   178,   581,   180,   181,  1103,
     582,   184,   185,   583,   187,   188,   584,     0,   190,   191,
     192,  1104,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   585,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   586,   213,  1105,  1106,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,  1107,   257,  1108,   259,   260,
     261,   262,   263,  1109,   265,   266,   267,   268,   269,   270,
     271,   272,   273,  1110,  1111,   276,   277,   278,   279,   280,
     587,   281,   282,   283,   284,   285,   286,   287,   288,   289,
    1112,   291,   292,   293,   588,   294,   295,  1113,   297,   298,
     299,   300,   301,   302,   303,  1114,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,  1115,   316,   317,
     318,   319,   320,   321,  1116,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   344,   592,   346,   347,
     348,   349,   350,   351,   352,  1117,   354,   593,   356,   357,
     358,  1118,  1119,   361,   362,   594,   364,   365,  1120,   367,
     368,   369,   370,   371,   372,  1121,   374,   595,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   596,   395,   396,
     597,   398,   399,   400,   401,  1122,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,  1123,  1124,  1125,  1126,   425,   426,
     427,   428,  1127,  1128,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   599,   441,   442,   443,  1129,   445,  1130,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
    1131,  1132,   600,  1133,   461,   462,   463,     0,   464,   601,
     466,  1134,     0,     0,     0,     0,     0,     0,     0,     0,
    1135,  1136,     0,     0,     0,  1004,  1137,     0,     0,  1005,
    1006,  1138,     0,     0,     0,  1139,  1140,     0,     0,  1141,
    1007,  1008,     0,  1009,  1010,  1011,  1012,  1013,  1014,  1015,
    1016,  1017,  1018,  1019,     0,     0,     0,     0,     0,     0,
       0,  1020,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
    1023,  1024,     0,     0,     0,     0,     0,     0,     0,  1025,
    1026,     0,  1027,     0,     0,     0,     0,     0,     0,  1028,
    1029,     0,     0,  1030,  1031,  1032,  1033,     0,  1034,  1035,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    3097,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,     0,
       0,     0,  1044,  1045,  1046,     0,     0,     0,     0,     0,
    1047,     0,  3098,     0,     0,     0,     0,     0,  1048,     0,
       0,  1049,     0,     0,     0,     0,     0,     0,     0,     0,
    1050,     0,  1051,     0,  1052,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1053,  1054,
       0,  1055,     0,     0,     0,  1056,     0,     0,     0,  1057,
       0,     0,  1058,     0,  1059,  1060,  1061,  1062,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1063,  1064,  1065,     0,  1066,     0,     0,
       0,     0,     0,     0,  1067,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1068,  1069,     0,     0,     0,
       0,     0,     0,     0,  1070,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1072,     0,     0,     0,     0,     0,     0,
    1073,  1074,     0,  1075,  1076,  1077,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1078,  1079,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1080,  1081,  1082,
       0,     0,     0,     0,     0,  1083,  1084,     0,     0,     0,
       0,     0,     0,     0,     0,    47,    48,    49,   565,    50,
      51,    52,    53,    54,    55,    56,    57,  1085,    59,    60,
      61,    62,    63,    64,  1086,    66,    67,    68,    69,    70,
      71,    72,  1087,   566,     0,   567,   568,    78,    79,    80,
      81,    82,    83,   569,    85,    86,    87,    88,  1088,    89,
     571,    91,    92,    93,    94,    95,   572,  1089,    97,  1090,
      99,  1091,  1092,  1093,  1094,  1095,     0,   105,   106,   107,
     573,   109,   110,   111,   112,   113,   114,   115,   116,   117,
    1096,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,  1097,  1098,  1099,   575,  1100,  1101,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   576,   144,   145,
     146,   147,   577,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   578,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   579,   580,   175,     0,  1102,   177,   178,   581,   180,
     181,  1103,   582,   184,   185,   583,   187,   188,   584,     0,
     190,   191,   192,  1104,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   585,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   586,   213,  1105,  1106,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,  1107,   257,  1108,
     259,   260,   261,   262,   263,  1109,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1110,  1111,   276,   277,   278,
     279,   280,   587,   281,   282,   283,   284,   285,   286,   287,
     288,   289,  1112,   291,   292,   293,   588,   294,   295,  1113,
     297,   298,   299,   300,   301,   302,   303,  1114,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,  1115,
     316,   317,   318,   319,   320,   321,  1116,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   344,   592,
     346,   347,   348,   349,   350,   351,   352,  1117,   354,   593,
     356,   357,   358,  1118,  1119,   361,   362,   594,   364,   365,
    1120,   367,   368,   369,   370,   371,   372,  1121,   374,   595,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   596,
     395,   396,   597,   398,   399,   400,   401,  1122,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,  1123,  1124,  1125,  1126,
     425,   426,   427,   428,  1127,  1128,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   599,   441,   442,   443,  1129,
     445,  1130,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,  1131,  1132,   600,  1133,   461,   462,   463,     0,
     464,   601,   466,  1134,     0,     0,     0,     0,     0,     0,
       0,     0,  1135,  1136,     0,     0,     0,  1004,  1137,     0,
       0,  1005,  1006,  1138,     0,     0,     0,  1139,  1140,     0,
       0,  1141,  1007,  1008,     0,  1009,  1010,  1011,  1012,  1013,
    1014,  1015,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1021,  1022,  1023,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,  1027,     0,     0,     0,     0,     0,
       0,  1028,  1029,     0,     0,  1030,  1031,  1032,  1033,     0,
    1034,  1035,     0,  1036,  1037,     0,     0,     0,     0,     0,
       0,     0,  1038,     0,     0,  1039,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,
    3552,     0,     0,     0,  1044,  1045,  1046,     0,     0,     0,
       0,     0,  1047,     0,     0,     0,     0,     0,     0,     0,
    1048,     0,     0,  1049,     0,     0,     0,     0,     0,     0,
       0,     0,  1050,     0,  1051,     0,  1052,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1053,  1054,     0,  1055,     0,     0,     0,  1056,     0,     0,
       0,  1057,     0,     0,  1058,     0,  1059,  1060,  1061,  1062,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1063,  1064,  1065,     0,  1066,
       0,     0,     0,     0,     0,     0,  1067,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1068,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1078,  1079,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1080,
    1081,  1082,     0,     0,     0,     0,     0,  1083,  1084,     0,
       0,     0,     0,     0,     0,     0,     0,    47,    48,    49,
     565,    50,    51,    52,    53,    54,    55,    56,    57,  1085,
      59,    60,    61,    62,    63,    64,  1086,    66,    67,    68,
      69,    70,    71,    72,  1087,   566,     0,   567,   568,    78,
      79,    80,    81,    82,    83,   569,    85,    86,    87,    88,
    1088,    89,   571,    91,    92,    93,    94,    95,   572,  1089,
      97,  1090,    99,  1091,  1092,  1093,  1094,  1095,     0,   105,
     106,   107,   573,   109,   110,   111,   112,   113,   114,   115,
     116,   117,  1096,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,  1097,  1098,  1099,   575,  1100,  1101,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   576,
     144,   145,   146,   147,   577,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   578,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   579,   580,   175,     0,  1102,   177,   178,
     581,   180,   181,  1103,   582,   184,   185,   583,   187,   188,
     584,     0,   190,   191,   192,  1104,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   585,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   586,   213,  1105,  1106,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,  1107,
     257,  1108,   259,   260,   261,   262,   263,  1109,   265,   266,
     267,   268,   269,   270,   271,   272,   273,  1110,  1111,   276,
     277,   278,   279,   280,   587,   281,   282,   283,   284,   285,
     286,   287,   288,   289,  1112,   291,   292,   293,   588,   294,
     295,  1113,   297,   298,   299,   300,   301,   302,   303,  1114,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,  1115,   316,   317,   318,   319,   320,   321,  1116,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     344,   592,   346,   347,   348,   349,   350,   351,   352,  1117,
     354,   593,   356,   357,   358,  1118,  1119,   361,   362,   594,
     364,   365,  1120,   367,   368,   369,   370,   371,   372,  1121,
     374,   595,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,     0,   390,   391,   392,
     393,   596,   395,   396,   597,   398,   399,   400,   401,  1122,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,  1123,  1124,
    1125,  1126,   425,   426,   427,   428,  1127,  1128,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   599,   441,   442,
     443,  1129,   445,  1130,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,  1131,  1132,   600,  1133,   461,   462,
     463,     0,   464,   601,   466,  1134,     0,     0,     0,     0,
       0,     0,     0,     0,  1135,  1136,     0,     0,     0,  1004,
    1137,     0,     0,  1005,  1006,  1138,     0,     0,     0,  1139,
    1140,     0,     0,  1141,  1007,  1008,     0,  1009,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,     0,     0,
       0,     0,     0,     0,     0,  1020,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1021,  1022,  1023,  1024,     0,     0,     0,     0,
       0,     0,     0,  1025,  1026,     0,  1027,     0,     0,     0,
       0,     0,     0,  1028,  1029,     0,     0,  1030,  1031,  1032,
    1033,     0,  1034,  1035,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,  1038,     0,     0,  1039,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1040,  1041,  1042,     0,  1043,     0,
       0,     0,  3554,     0,     0,     0,  1044,  1045,  1046,     0,
       0,     0,     0,     0,  1047,     0,     0,     0,     0,     0,
       0,     0,  1048,     0,     0,  1049,     0,     0,     0,     0,
       0,     0,     0,     0,  1050,     0,  1051,     0,  1052,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1053,  1054,     0,  1055,     0,     0,     0,  1056,
       0,     0,     0,  1057,     0,     0,  1058,     0,  1059,  1060,
    1061,  1062,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1063,  1064,  1065,
       0,  1066,     0,     0,     0,     0,     0,     0,  1067,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1068,
    1069,     0,     0,     0,     0,     0,     0,     0,  1070,  1071,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1072,     0,     0,
       0,     0,     0,     0,  1073,  1074,     0,  1075,  1076,  1077,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1078,  1079,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1080,  1081,  1082,     0,     0,     0,     0,     0,  1083,
    1084,     0,     0,     0,     0,     0,     0,     0,     0,    47,
      48,    49,   565,    50,    51,    52,    53,    54,    55,    56,
      57,  1085,    59,    60,    61,    62,    63,    64,  1086,    66,
      67,    68,    69,    70,    71,    72,  1087,   566,     0,   567,
     568,    78,    79,    80,    81,    82,    83,   569,    85,    86,
      87,    88,  1088,    89,   571,    91,    92,    93,    94,    95,
     572,  1089,    97,  1090,    99,  1091,  1092,  1093,  1094,  1095,
       0,   105,   106,   107,   573,   109,   110,   111,   112,   113,
     114,   115,   116,   117,  1096,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,  1097,  1098,  1099,   575,
    1100,  1101,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   576,   144,   145,   146,   147,   577,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     578,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   579,   580,   175,     0,  1102,
     177,   178,   581,   180,   181,  1103,   582,   184,   185,   583,
     187,   188,   584,     0,   190,   191,   192,  1104,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   585,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   586,   213,  1105,
    1106,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,  1107,   257,  1108,   259,   260,   261,   262,   263,  1109,
     265,   266,   267,   268,   269,   270,   271,   272,   273,  1110,
    1111,   276,   277,   278,   279,   280,   587,   281,   282,   283,
     284,   285,   286,   287,   288,   289,  1112,   291,   292,   293,
     588,   294,   295,  1113,   297,   298,   299,   300,   301,   302,
     303,  1114,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,  1115,   316,   317,   318,   319,   320,   321,
    1116,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   344,   592,   346,   347,   348,   349,   350,   351,
     352,  1117,   354,   593,   356,   357,   358,  1118,  1119,   361,
     362,   594,   364,   365,  1120,   367,   368,   369,   370,   371,
     372,  1121,   374,   595,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   596,   395,   396,   597,   398,   399,   400,
     401,  1122,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
    1123,  1124,  1125,  1126,   425,   426,   427,   428,  1127,  1128,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   599,
     441,   442,   443,  1129,   445,  1130,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,  1131,  1132,   600,  1133,
     461,   462,   463,     0,   464,   601,   466,  1134,     0,     0,
       0,     0,     0,     0,     0,     0,  1135,  1136,     0,     0,
       0,  1004,  1137,     0,     0,  1005,  1006,  1138,     0,     0,
       0,  1139,  1140,     0,     0,  1141,  1007,  1008,     0,  1009,
    1010,  1011,  1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,
       0,     0,     0,     0,     0,     0,     0,  1020,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1021,  1022,  1023,  1024,     0,     0,
       0,     0,     0,     0,     0,  1025,  1026,     0,  1027,     0,
       0,     0,     0,     0,     0,  1028,  1029,     0,     0,  1030,
    1031,  1032,  1033,     0,  1034,  1035,     0,  1036,  1037,     0,
       0,     0,     0,     0,     0,     0,  1038,     0,     0,  1039,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,  3556,     0,     0,     0,  1044,  1045,
    1046,     0,     0,     0,     0,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,  1048,     0,     0,  1049,     0,     0,
       0,     0,     0,     0,     0,     0,  1050,     0,  1051,     0,
    1052,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1053,  1054,     0,  1055,     0,     0,
       0,  1056,     0,     0,     0,  1057,     0,     0,  1058,     0,
    1059,  1060,  1061,  1062,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1063,
    1064,  1065,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1068,  1069,     0,     0,     0,     0,     0,     0,     0,
    1070,  1071,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1072,
       0,     0,     0,     0,     0,     0,  1073,  1074,     0,  1075,
    1076,  1077,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1080,  1081,  1082,     0,     0,     0,     0,
       0,  1083,  1084,     0,     0,     0,     0,     0,     0,     0,
       0,    47,    48,    49,   565,    50,    51,    52,    53,    54,
      55,    56,    57,  1085,    59,    60,    61,    62,    63,    64,
    1086,    66,    67,    68,    69,    70,    71,    72,  1087,   566,
       0,   567,   568,    78,    79,    80,    81,    82,    83,   569,
      85,    86,    87,    88,  1088,    89,   571,    91,    92,    93,
      94,    95,   572,  1089,    97,  1090,    99,  1091,  1092,  1093,
    1094,  1095,     0,   105,   106,   107,   573,   109,   110,   111,
     112,   113,   114,   115,   116,   117,  1096,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,  1097,  1098,
    1099,   575,  1100,  1101,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   576,   144,   145,   146,   147,   577,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   578,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   579,   580,   175,
       0,  1102,   177,   178,   581,   180,   181,  1103,   582,   184,
     185,   583,   187,   188,   584,     0,   190,   191,   192,  1104,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   585,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   586,
     213,  1105,  1106,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,  1107,   257,  1108,   259,   260,   261,   262,
     263,  1109,   265,   266,   267,   268,   269,   270,   271,   272,
     273,  1110,  1111,   276,   277,   278,   279,   280,   587,   281,
     282,   283,   284,   285,   286,   287,   288,   289,  1112,   291,
     292,   293,   588,   294,   295,  1113,   297,   298,   299,   300,
     301,   302,   303,  1114,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,  1115,   316,   317,   318,   319,
     320,   321,  1116,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   344,   592,   346,   347,   348,   349,
     350,   351,   352,  1117,   354,   593,   356,   357,   358,  1118,
    1119,   361,   362,   594,   364,   365,  1120,   367,   368,   369,
     370,   371,   372,  1121,   374,   595,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   596,   395,   396,   597,   398,
     399,   400,   401,  1122,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,  1123,  1124,  1125,  1126,   425,   426,   427,   428,
    1127,  1128,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   599,   441,   442,   443,  1129,   445,  1130,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,  1131,  1132,
     600,  1133,   461,   462,   463,     0,   464,   601,   466,  1134,
       0,     0,     0,     0,     0,     0,     0,     0,  1135,  1136,
       0,     0,     0,  1004,  1137,     0,     0,  1005,  1006,  1138,
       0,     0,     0,  1139,  1140,     0,     0,  1141,  1007,  1008,
       0,  1009,  1010,  1011,  1012,  1013,  1014,  1015,  1016,  1017,
    1018,  1019,     0,     0,     0,     0,     0,     0,     0,  1020,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1021,  1022,  1023,  1024,
       0,     0,     0,     0,     0,     0,     0,  1025,  1026,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
       0,  1030,  1031,  1032,  1033,     0,  1034,  1035,     0,  1036,
    1037,     0,     0,     0,     0,     0,     0,     0,  1038,     0,
       0,  1039,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1040,  1041,
    1042,     0,  1043,     0,     0,     0,     0,     0,     0,     0,
    1044,  1045,  1046,     0,     0,     0,     0,     0,  1047,     0,
       0,     0,     0,     0,     0,     0,  1048,     0,     0,  1049,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1053,  1054,     0,  1055,
       0,     0,     0,  1056,     0,     0,     0,  1057,     0,     0,
    1058,     0,  1059,  1060,  1061,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,  1064,  1065,     0,  1066,     0,     0,     0,     0,
       0,     0,  1067,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1068,  1069,     0,     0,     0,     0,     0,
       0,     0,  1070,  1071,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1072,     0,     0,     0,     0,     0,     0,  1073,  1074,
       0,  1075,  1076,  1077,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1078,  1079,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1080,  1081,  1082,     0,     0,
       0,     0,     0,  1083,  1084,     0,     0,     0,     0,     0,
       0,     0,     0,    47,    48,    49,   565,    50,    51,    52,
      53,    54,    55,    56,    57,  1085,    59,    60,    61,    62,
      63,    64,  1086,    66,    67,    68,    69,    70,    71,    72,
    1087,   566,     0,   567,   568,    78,    79,    80,    81,    82,
      83,   569,    85,    86,    87,    88,  1088,    89,   571,    91,
      92,    93,    94,    95,   572,  1089,    97,  1090,    99,  1091,
    1092,  1093,  1094,  1095,     0,   105,   106,   107,   573,   109,
     110,   111,   112,   113,   114,   115,   116,   117,  1096,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
    1097,  1098,  1099,   575,  1100,  1101,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   576,   144,   145,   146,   147,
     577,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   578,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   579,
     580,   175,     0,  1102,   177,   178,   581,   180,   181,  1103,
     582,   184,   185,   583,   187,   188,   584,     0,   190,   191,
     192,  1104,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   585,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   586,   213,  1105,  1106,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,  1107,   257,  1108,   259,   260,
     261,   262,   263,  1109,   265,   266,   267,   268,   269,   270,
     271,   272,   273,  1110,  1111,   276,   277,   278,   279,   280,
     587,   281,   282,   283,   284,   285,   286,   287,   288,   289,
    1112,   291,   292,   293,   588,   294,   295,  1113,   297,   298,
     299,   300,   301,   302,   303,  1114,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,  1115,   316,   317,
     318,   319,   320,   321,  1116,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   344,   592,   346,   347,
     348,   349,   350,   351,   352,  1117,   354,   593,   356,   357,
     358,  1118,  1119,   361,   362,   594,   364,   365,  1120,   367,
     368,   369,   370,   371,   372,  1121,   374,   595,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   596,   395,   396,
     597,   398,   399,   400,   401,  1122,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,  1123,  1124,  1125,  1126,   425,   426,
     427,   428,  1127,  1128,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   599,   441,   442,   443,  1129,   445,  1130,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
    1131,  1132,   600,  1133,   461,   462,   463,     0,   464,   601,
     466,  1134,     0,     0,     0,     0,     0,     0,     0,     0,
    1135,  1136,     0,     0,     0,  1004,  1137,     0,     0,  1005,
    1006,  1138,     0,     0,     0,  1139,  1140,     0,     0,  1141,
    1007,  1008,     0,  1009,  1010,  1011,  1012,  1013,  1014,  1015,
    1016,  1017,  1018,  1019,     0,     0,     0,     0,     0,     0,
       0,  1020,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
    1023,  1024,     0,     0,     0,     0,     0,     0,     0,  1025,
    1026,     0,  1027,     0,     0,     0,     0,     0,     0,  1028,
    1029,     0,     0,  1030,  1031,  1032,  1033,     0,  1034,  1035,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    1038,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,     0,
       0,     0,  1044,  1045,  1046,     0,     0,     0,     0,     0,
    1047,     0,     0,     0,     0,     0,     0,     0,  1048,     0,
       0,  1049,     0,     0,     0,     0,     0,     0,     0,     0,
    1050,     0,  1051,     0,  1052,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1053,  1054,
       0,  1055,     0,     0,     0,  1056,     0,     0,     0,  1057,
       0,     0,  1058,     0,  1059,  1060,  1061,  1062,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1063,  1064,  1065,     0,  1066,     0,     0,
       0,     0,     0,     0,  1067,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1068,  1069,     0,     0,     0,
       0,     0,     0,     0,  1070,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1072,     0,     0,     0,     0,     0,     0,
    1073,  1074,     0,  1075,  1076,  1077,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1078,  1079,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1080,  1081,  1082,
       0,     0,     0,     0,     0,  1083,  1084,     0,     0,     0,
       0,     0,     0,     0,     0,    47,    48,    49,   565,    50,
      51,    52,    53,    54,    55,    56,    57,  1085,    59,    60,
      61,    62,    63,    64,  1086,    66,    67,    68,    69,    70,
      71,    72,  1087,   566,     0,   567,   568,    78,    79,    80,
      81,    82,    83,   569,    85,    86,    87,    88,  1088,    89,
     571,    91,    92,    93,    94,    95,   572,  1089,    97,  1090,
      99,  1091,  1092,  1093,  1094,  1095,     0,   105,   106,   107,
     573,   109,   110,   111,   112,   113,   114,   115,   116,   117,
    1096,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,  1097,  1098,  1099,   575,  1100,  1101,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   576,   144,   145,
     146,   147,   577,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   578,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   579,   580,   175,     0,  1102,   177,   178,   581,   180,
     181,  1103,   582,   184,   185,   583,   187,   188,   584,     0,
     190,   191,   192,  1104,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   585,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   586,   213,  1105,  1106,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,  1107,   257,  1108,
     259,   260,   261,   262,   263,  1109,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1110,  1111,   276,   277,   278,
     279,   280,   587,   281,   282,   283,   284,   285,   286,   287,
     288,   289,  1112,   291,   292,   293,   588,   294,   295,  1113,
     297,   298,   299,   300,   301,   302,   303,  1114,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,  1115,
     316,   317,   318,   319,   320,   321,  1116,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   344,   592,
     346,   347,   348,   349,   350,   351,   352,  1117,   354,   593,
     356,   357,   358,  1118,  1119,   361,   362,   594,   364,   365,
    1120,   367,   368,   369,   370,   371,   372,  1121,   374,   595,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   596,
     395,   396,   597,   398,   399,   400,   401,  1122,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,  1123,  1124,  1125,  1126,
     425,   426,   427,   428,  1127,  1128,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   599,   441,   442,   443,  1129,
     445,  1130,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,  1131,  1132,   600,  1133,   461,   462,   463,     0,
     464,   601,   466,  1134,     0,     0,     0,     0,     0,     0,
       0,     0,  1135,  1136,     0,     0,     0,  1004,  1137,     0,
       0,  1005,  1006,  2001,     0,     0,     0,  1139,  1140,     0,
       0,  1141,  1007,  1008,     0,  1009,  1010,  1011,  1012,  1013,
    1014,  1015,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1021,  1022,  1023,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,  1027,     0,     0,     0,     0,     0,
       0,  1028,  1029,     0,     0,  1030,  1031,  1032,  1033,     0,
    1034,  1035,     0,  1036,  1037,     0,     0,     0,     0,     0,
       0,     0,  1038,     0,     0,  1039,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,
       0,     0,     0,     0,  1044,  1045,  1046,     0,     0,     0,
       0,     0,  1047,     0,     0,     0,     0,     0,     0,     0,
    1048,     0,     0,  1049,     0,     0,     0,     0,     0,     0,
       0,     0,  1050,     0,  1051,     0,  1052,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1053,  1054,     0,  1055,     0,     0,     0,  1056,     0,     0,
       0,  1057,     0,     0,  1058,     0,  1059,  1060,  1061,  1062,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1063,  1064,  1065,     0,  1066,
       0,     0,     0,     0,     0,     0,  1067,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1068,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1078,  1079,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1080,
    1081,  1082,     0,     0,     0,     0,     0,  1083,  1084,     0,
       0,     0,     0,     0,     0,     0,     0,    47,    48,    49,
     565,    50,    51,    52,    53,    54,    55,    56,    57,  1085,
      59,    60,    61,    62,    63,    64,  1086,    66,    67,    68,
      69,    70,    71,    72,  1087,   566,     0,   567,   568,    78,
      79,    80,    81,    82,    83,   569,    85,    86,    87,    88,
    1088,    89,   571,    91,    92,    93,    94,    95,   572,  1089,
      97,  1090,    99,  1091,  1092,  1093,  1094,  1095,     0,   105,
     106,   107,   573,   109,   110,   111,   112,   113,   114,   115,
     116,   117,  1096,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,  1097,  1098,  1099,   575,  1100,  1101,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   576,
     144,   145,   146,   147,   577,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   578,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   579,   580,   175,     0,  1102,   177,   178,
     581,   180,   181,  1103,   582,   184,   185,   583,   187,   188,
     584,     0,   190,   191,   192,  1104,  2669,   195,   196,   197,
     198,   199,   200,   201,   202,   585,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   586,   213,  1105,  1106,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,  1107,
     257,  1108,   259,   260,   261,   262,   263,  1109,   265,   266,
     267,   268,   269,   270,   271,   272,   273,  1110,  1111,   276,
     277,   278,   279,   280,   587,   281,   282,   283,   284,   285,
     286,   287,   288,   289,  1112,   291,   292,   293,   588,   294,
     295,  1113,   297,   298,   299,   300,   301,   302,   303,  1114,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,  1115,   316,   317,   318,   319,   320,   321,  1116,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     344,   592,   346,   347,   348,   349,   350,   351,   352,  1117,
     354,   593,   356,   357,   358,  1118,  1119,   361,   362,   594,
     364,   365,  1120,   367,   368,   369,   370,   371,   372,  1121,
     374,   595,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,     0,   390,   391,   392,
     393,   596,   395,   396,   597,   398,   399,   400,   401,  1122,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,  1123,  1124,
    1125,  1126,   425,   426,   427,   428,  1127,  1128,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   599,   441,   442,
     443,  2670,   445,  1130,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,  1131,  1132,   600,  1133,   461,   462,
     463,     0,   464,   601,   466,  1134,     0,     0,     0,     0,
       0,     0,     0,     0,  1135,  1136,     0,     0,     0,  1004,
    1137,     0,     0,  1005,  1006,  1138,     0,     0,     0,  1139,
    1140,     0,     0,  1141,  1007,  1008,     0,  1009,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,     0,     0,
       0,     0,     0,     0,     0,  1020,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1021,  1022,  1023,  1024,     0,     0,     0,     0,
       0,     0,     0,  1025,  1026,     0,  1027,     0,     0,     0,
       0,     0,     0,  1028,  1029,     0,     0,  1030,  1031,  1032,
    1033,     0,  1034,  1035,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,  1038,     0,     0,  1039,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1040,  1041,  1042,     0,  1043,     0,
       0,     0,     0,     0,     0,     0,  1044,  1045,  1046,     0,
       0,     0,     0,     0,  1047,     0,     0,     0,     0,     0,
       0,     0,  1048,     0,     0,  1049,     0,     0,     0,     0,
       0,     0,     0,     0,  1050,     0,  1051,     0,  1052,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1053,  1054,     0,  1055,     0,     0,     0,  1056,
       0,     0,     0,  1057,     0,     0,  1058,     0,  1059,  1060,
    1061,  1062,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1063,  1064,  1065,
       0,  1066,     0,     0,     0,     0,     0,     0,  1067,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1068,
    1069,     0,     0,     0,     0,     0,     0,     0,  1070,  1071,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1072,     0,     0,
       0,     0,     0,     0,  1073,  1074,     0,  1075,  1076,  1077,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1078,  1079,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1080,  1081,  1082,     0,     0,     0,     0,     0,  1083,
    1084,     0,     0,     0,     0,     0,     0,     0,     0,    47,
      48,    49,   565,    50,    51,    52,    53,    54,    55,    56,
      57,  1085,    59,    60,    61,    62,    63,    64,  1086,    66,
      67,    68,    69,    70,    71,    72,  1087,   566,     0,   567,
     568,    78,    79,    80,    81,    82,    83,   569,    85,    86,
      87,    88,  1088,    89,   571,    91,    92,    93,    94,    95,
     572,  1089,    97,  1090,    99,  1091,  1092,  1093,  1094,  1095,
       0,   105,   106,   107,   573,   109,   110,   111,   112,   113,
     114,   115,   116,   117,  1096,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,  1097,  1098,  1099,   575,
    1100,  1101,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   576,   144,   145,   146,   147,   577,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     578,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   579,   580,   175,     0,  1102,
     177,   178,   581,   180,   181,  1103,   582,   184,   185,   583,
     187,   188,   584,     0,   190,   191,   192,  1104,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   585,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   586,   213,  1105,
    1106,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,  1107,   257,  1108,   259,   260,   261,   262,   263,  1109,
     265,   266,   267,   268,   269,   270,   271,   272,   273,  1110,
    1111,   276,   277,   278,   279,   280,   587,   281,   282,   283,
     284,   285,   286,   287,   288,   289,  1112,   291,   292,   293,
     588,   294,   295,  1113,   297,   298,   299,   300,   301,   302,
     303,  1114,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,  1115,   316,   317,   318,   319,   320,   321,
    1116,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   344,   592,   346,   347,   348,   349,   350,   351,
     352,  1117,   354,   593,   356,   357,   358,  1118,  1119,   361,
     362,   594,   364,   365,  1120,   367,   368,   369,   370,   371,
     372,  1121,   374,   595,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   596,   395,   396,   597,   398,   399,   400,
     401,  1122,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
    1123,  1124,  1125,  1126,   425,   426,   427,   428,  1127,  1128,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   599,
     441,   442,   443,  2670,   445,  1130,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,  1131,  1132,   600,  1133,
     461,   462,   463,     0,   464,   601,   466,  1134,     0,     0,
       0,     0,     0,     0,     0,     0,  1135,  1136,     0,     0,
       0,  1004,  1137,     0,     0,  1005,  1006,  1138,     0,     0,
       0,  1139,  1140,     0,     0,  1141,  1007,  1008,     0,  1009,
    1010,  1011,  1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,
       0,     0,     0,     0,     0,     0,     0,  1020,     0,     0,
       0,     0,     0,     0,  2897,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1021,  1022,  1023,  1024,     0,     0,
       0,     0,     0,     0,     0,  1025,  1026,     0,  1027,     0,
       0,     0,     0,     0,     0,  1028,  1029,     0,     0,  1030,
    1031,  1032,  1033,     0,  1034,  1035,     0,  1036,  1037,     0,
       0,     0,     0,     0,     0,     0,  1038,     0,     0,  1039,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,     0,     0,     0,     0,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,  1048,     0,     0,  1049,     0,     0,
       0,     0,     0,     0,     0,     0,  1050,     0,  1051,     0,
    1052,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1053,  1054,     0,  1055,     0,     0,
       0,  1056,     0,     0,     0,  1057,     0,     0,     0,     0,
    1059,  1060,  1061,  1062,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1063,
    1064,  1065,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1068,  1069,     0,     0,     0,     0,     0,     0,     0,
    1070,  1071,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1072,
       0,     0,     0,     0,     0,     0,  1073,  1074,     0,  1075,
    1076,  1077,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1080,  1081,  1082,     0,     0,     0,     0,
       0,  1083,  1084,     0,     0,     0,     0,     0,     0,     0,
       0,    47,    48,    49,   565,    50,    51,    52,    53,    54,
      55,    56,    57,  1085,    59,    60,    61,    62,    63,  2898,
    1086,    66,    67,    68,    69,    70,    71,    72,  1087,   566,
       0,   567,   568,    78,    79,    80,    81,    82,    83,   569,
      85,    86,    87,    88,  1088,    89,   571,    91,    92,    93,
      94,    95,   572,  1089,    97,  1090,    99,  1091,  1092,  1093,
    1094,  1095,     0,   105,   106,   107,   573,   109,   110,   111,
     112,   113,   114,   115,   116,   117,  1096,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,  1097,  1098,
    1099,   575,  1100,  1101,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   576,   144,   145,   146,   147,   577,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   578,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   579,   580,   175,
       0,  1102,   177,   178,   581,   180,   181,  1103,   582,   184,
     185,   583,   187,   188,   584,     0,   190,   191,   192,  1104,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   585,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   586,
     213,  1105,  1106,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,  1107,   257,  1108,   259,   260,   261,   262,
     263,  1109,   265,   266,   267,   268,   269,   270,   271,   272,
     273,  1110,  1111,   276,   277,   278,   279,   280,   587,   281,
     282,   283,   284,   285,   286,   287,   288,   289,  1112,   291,
     292,   293,   588,   294,   295,  1113,   297,   298,   299,   300,
     301,   302,   303,  1114,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,  1115,   316,   317,   318,   319,
     320,   321,  1116,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   344,   592,   346,   347,   348,   349,
     350,   351,   352,  1117,   354,   593,   356,   357,   358,  1118,
    1119,   361,   362,   594,   364,   365,  1120,   367,   368,   369,
     370,   371,   372,  1121,   374,   595,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   596,   395,   396,   597,   398,
     399,   400,   401,  1122,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,  1123,  1124,  1125,  1126,   425,   426,   427,   428,
    1127,  1128,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   599,   441,   442,   443,  1129,   445,  1130,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,  1131,  1132,
     600,  1133,   461,   462,   463,     0,   464,   601,   466,  1134,
       0,     0,     0,     0,     0,     0,     0,     0,  1135,  1136,
       0,     0,     0,  1004,  1137,     0,     0,  1005,  1006,  1138,
       0,     0,     0,  1139,  1140,     0,     0,  1141,  1007,  1008,
       0,  1009,  1010,  1011,  1012,  1013,  1014,  1015,  1016,  1017,
    1018,  1019,     0,     0,     0,     0,     0,     0,     0,  1020,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1021,  1022,  1023,  1024,
       0,     0,     0,     0,     0,     0,     0,  1025,  1026,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
       0,  1030,  1031,  1032,  1033,     0,  1034,  1035,     0,  1036,
    1037,     0,     0,     0,     0,     0,     0,     0,  1038,     0,
       0,  1039,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1040,  1041,
    1042,     0,  1043,     0,     0,     0,     0,     0,     0,     0,
    1044,  1045,  1046,     0,     0,     0,     0,     0,  1047,     0,
       0,     0,     0,     0,     0,     0,  1048,     0,     0,  4177,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1053,  1054,     0,  1055,
       0,     0,     0,  1056,     0,     0,     0,  1057,     0,     0,
    1058,     0,  1059,  1060,  1061,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,  1064,  1065,     0,  1066,     0,     0,     0,     0,
       0,     0,  1067,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1068,  1069,     0,     0,     0,     0,     0,
       0,     0,  1070,  1071,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1072,     0,     0,     0,     0,     0,     0,  1073,  1074,
       0,  1075,  1076,  1077,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1078,  1079,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1080,  1081,  1082,     0,     0,
       0,     0,     0,  1083,  1084,     0,     0,     0,     0,     0,
       0,     0,     0,    47,    48,    49,   565,    50,    51,    52,
      53,    54,    55,    56,    57,  1085,    59,    60,    61,    62,
      63,    64,  1086,    66,    67,    68,    69,    70,    71,    72,
    1087,   566,     0,   567,   568,    78,    79,    80,    81,    82,
      83,   569,    85,    86,    87,    88,  1088,    89,   571,    91,
      92,    93,    94,    95,   572,  1089,    97,  1090,    99,  1091,
    1092,  1093,  1094,  1095,     0,   105,   106,   107,   573,   109,
     110,   111,   112,   113,   114,   115,   116,   117,  1096,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
    1097,  1098,  1099,   575,  1100,  1101,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   576,   144,   145,   146,   147,
     577,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   578,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   579,
     580,   175,     0,  1102,   177,   178,   581,   180,   181,  1103,
     582,   184,   185,   583,   187,   188,   584,     0,   190,   191,
     192,  1104,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   585,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   586,   213,  1105,  1106,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,  1107,   257,  1108,   259,   260,
     261,   262,   263,  1109,   265,   266,   267,   268,   269,   270,
     271,   272,   273,  1110,  1111,   276,   277,   278,   279,   280,
     587,   281,   282,   283,   284,   285,   286,   287,   288,   289,
    1112,   291,   292,   293,   588,   294,   295,  1113,   297,   298,
     299,   300,   301,   302,   303,  1114,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,  1115,   316,   317,
     318,   319,   320,   321,  1116,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   344,   592,   346,   347,
     348,   349,   350,   351,   352,  1117,   354,   593,   356,   357,
     358,  1118,  1119,   361,   362,   594,   364,   365,  1120,   367,
     368,   369,   370,   371,   372,  1121,   374,   595,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   596,   395,   396,
     597,   398,   399,   400,   401,  1122,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,  1123,  1124,  1125,  1126,   425,   426,
     427,   428,  1127,  1128,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   599,   441,   442,   443,  1129,   445,  1130,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
    1131,  1132,   600,  1133,   461,   462,   463,     0,   464,   601,
     466,  1134,     0,     0,     0,     0,     0,     0,     0,     0,
    1135,  1136,     0,     0,     0,  1004,  1137,     0,     0,  1005,
    1006,  1138,     0,     0,     0,  1139,  1140,     0,     0,  1141,
    1007,  1008,     0,  1009,  1010,  1011,  1012,  1013,  1014,  1015,
    1016,  1017,  1018,  1019,     0,     0,     0,     0,     0,     0,
       0,  1020,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
    1023,  1024,     0,     0,     0,     0,     0,     0,     0,  1025,
    1026,     0,  1027,     0,     0,     0,     0,     0,     0,  1028,
    1029,     0,     0,  1030,  1031,  1032,  1033,     0,  1034,  1035,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    1038,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,     0,
       0,     0,  1044,  1045,  1046,     0,     0,     0,     0,     0,
    1047,     0,     0,     0,     0,     0,     0,     0,  1048,     0,
       0,  4197,     0,     0,     0,     0,     0,     0,     0,     0,
    1050,     0,  1051,     0,  1052,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1053,  1054,
       0,  1055,     0,     0,     0,  1056,     0,     0,     0,  1057,
       0,     0,  1058,     0,  1059,  1060,  1061,  1062,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1063,  1064,  1065,     0,  1066,     0,     0,
       0,     0,     0,     0,  1067,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1068,  1069,     0,     0,     0,
       0,     0,     0,     0,  1070,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1072,     0,     0,     0,     0,     0,     0,
    1073,  1074,     0,  1075,  1076,  1077,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1078,  1079,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1080,  1081,  1082,
       0,     0,     0,     0,     0,  1083,  1084,     0,     0,     0,
       0,     0,     0,     0,     0,    47,    48,    49,   565,    50,
      51,    52,    53,    54,    55,    56,    57,  1085,    59,    60,
      61,    62,    63,    64,  1086,    66,    67,    68,    69,    70,
      71,    72,  1087,   566,     0,   567,   568,    78,    79,    80,
      81,    82,    83,   569,    85,    86,    87,    88,  1088,    89,
     571,    91,    92,    93,    94,    95,   572,  1089,    97,  1090,
      99,  1091,  1092,  1093,  1094,  1095,     0,   105,   106,   107,
     573,   109,   110,   111,   112,   113,   114,   115,   116,   117,
    1096,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,  1097,  1098,  1099,   575,  1100,  1101,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   576,   144,   145,
     146,   147,   577,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   578,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   579,   580,   175,     0,  1102,   177,   178,   581,   180,
     181,  1103,   582,   184,   185,   583,   187,   188,   584,     0,
     190,   191,   192,  1104,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   585,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   586,   213,  1105,  1106,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,  1107,   257,  1108,
     259,   260,   261,   262,   263,  1109,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1110,  1111,   276,   277,   278,
     279,   280,   587,   281,   282,   283,   284,   285,   286,   287,
     288,   289,  1112,   291,   292,   293,   588,   294,   295,  1113,
     297,   298,   299,   300,   301,   302,   303,  1114,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,  1115,
     316,   317,   318,   319,   320,   321,  1116,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   344,   592,
     346,   347,   348,   349,   350,   351,   352,  1117,   354,   593,
     356,   357,   358,  1118,  1119,   361,   362,   594,   364,   365,
    1120,   367,   368,   369,   370,   371,   372,  1121,   374,   595,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   596,
     395,   396,   597,   398,   399,   400,   401,  1122,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,  1123,  1124,  1125,  1126,
     425,   426,   427,   428,  1127,  1128,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   599,   441,   442,   443,  1129,
     445,  1130,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,  1131,  1132,   600,  1133,   461,   462,   463,     0,
     464,   601,   466,  1134,     0,     0,     0,     0,     0,     0,
       0,     0,  1135,  1136,     0,     0,     0,  1004,  1137,     0,
       0,  1005,  1006,  1138,     0,     0,     0,  1139,  1140,     0,
       0,  1141,  1007,  1008,     0,  1009,  1010,  1011,  1012,  1013,
    1014,  1015,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1021,  1022,  1023,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,  1027,     0,     0,     0,     0,     0,
       0,  1028,  1029,     0,     0,  1030,  1031,  1032,  1033,     0,
    1034,  1035,     0,  1036,  1037,     0,     0,     0,     0,     0,
       0,     0,  1038,     0,     0,  1039,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,
       0,     0,     0,     0,  1044,  1045,  1046,     0,     0,     0,
       0,     0,  1047,     0,     0,     0,     0,     0,     0,     0,
    1048,     0,     0,  1049,     0,     0,     0,     0,     0,     0,
       0,     0,  1050,     0,  1051,     0,  1052,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1053,  1054,  6278,  1055,     0,     0,     0,  1056,     0,     0,
       0,  1057,     0,     0,     0,     0,  1059,  1060,  1061,  1062,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1063,  1064,  1065,     0,  1066,
       0,     0,     0,     0,     0,     0,  1067,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1068,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1078,  1079,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1080,
    1081,  1082,     0,     0,     0,     0,     0,  1083,  1084,     0,
       0,     0,     0,     0,     0,     0,     0,    47,    48,    49,
     565,    50,    51,    52,    53,    54,    55,    56,    57,  1085,
      59,    60,    61,    62,    63,    64,  1086,    66,    67,    68,
      69,    70,    71,    72,  1087,   566,     0,   567,   568,    78,
      79,    80,    81,    82,    83,   569,    85,    86,    87,    88,
    1088,    89,   571,    91,    92,    93,    94,    95,   572,  1089,
      97,  1090,    99,  1091,  1092,  1093,  1094,  1095,     0,   105,
     106,   107,   573,   109,   110,   111,   112,   113,   114,   115,
     116,   117,  1096,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,  1097,  1098,  1099,   575,  1100,  1101,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   576,
     144,   145,   146,   147,   577,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   578,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   579,   580,   175,     0,  1102,   177,   178,
     581,   180,   181,  1103,   582,   184,   185,   583,   187,   188,
     584,     0,   190,   191,   192,  1104,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   585,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   586,   213,  1105,  1106,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,  1107,
     257,  1108,   259,   260,   261,   262,   263,  1109,   265,   266,
     267,   268,   269,   270,   271,   272,   273,  1110,  1111,   276,
     277,   278,   279,   280,   587,   281,   282,   283,   284,   285,
     286,   287,   288,   289,  1112,   291,   292,   293,   588,   294,
     295,  1113,   297,   298,   299,   300,   301,   302,   303,  1114,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,  1115,   316,   317,   318,   319,   320,   321,  1116,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     344,   592,   346,   347,   348,   349,   350,   351,   352,  1117,
     354,   593,   356,   357,   358,  1118,  1119,   361,   362,   594,
     364,   365,  1120,   367,   368,   369,   370,   371,   372,  1121,
     374,   595,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,     0,   390,   391,   392,
     393,   596,   395,   396,   597,   398,   399,   400,   401,  1122,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,  1123,  1124,
    1125,  1126,   425,   426,   427,   428,  1127,  1128,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   599,   441,   442,
     443,  1129,   445,  1130,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,  1131,  1132,   600,  1133,   461,   462,
     463,     0,   464,   601,   466,  1134,     0,     0,     0,     0,
       0,     0,     0,     0,  1135,  1136,     0,     0,     0,  1004,
    1137,     0,     0,  1005,  1006,  1138,     0,     0,     0,  1139,
    1140,     0,     0,  1141,  1007,  1008,     0,  1009,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,     0,     0,
       0,     0,     0,     0,     0,  1020,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1021,  1022,  1023,  1024,     0,     0,     0,     0,
       0,     0,     0,  1025,  1026,     0,  1027,     0,     0,     0,
       0,     0,     0,  1028,  1029,     0,     0,  1030,  1031,  1032,
    1033,     0,  1034,  1035,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,  1038,     0,     0,  1039,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1040,  1041,  1042,     0,  1043,     0,
       0,     0,     0,     0,     0,     0,  1044,  1045,  1046,     0,
       0,     0,     0,     0,  1047,     0,     0,     0,     0,     0,
       0,     0,  1048,     0,     0,  1967,     0,     0,     0,     0,
       0,     0,     0,     0,  1050,     0,  1051,     0,  1052,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1053,  1054,     0,  1055,     0,     0,     0,  1056,
       0,     0,     0,  1057,     0,     0,     0,     0,  1059,  1060,
    1061,  1062,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1063,  1064,  1065,
       0,  1066,     0,     0,     0,     0,     0,     0,  1067,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1068,
    1069,     0,     0,     0,     0,     0,     0,     0,  1070,  1071,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1072,     0,     0,
       0,     0,     0,     0,  1073,  1074,     0,  1075,  1076,  1077,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1078,  1079,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1080,  1081,  1082,     0,     0,     0,     0,     0,  1083,
    1084,     0,     0,     0,     0,     0,     0,     0,     0,    47,
      48,    49,   565,    50,    51,    52,    53,    54,    55,    56,
      57,  1085,    59,    60,    61,    62,    63,    64,  1086,    66,
      67,    68,    69,    70,    71,    72,  1087,   566,     0,   567,
     568,    78,    79,    80,    81,    82,    83,   569,    85,    86,
      87,    88,  1088,    89,   571,    91,    92,    93,    94,    95,
     572,  1089,    97,  1090,    99,  1091,  1092,  1093,  1094,  1095,
       0,   105,   106,   107,   573,   109,   110,   111,   112,   113,
     114,   115,   116,   117,  1096,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,  1097,  1098,  1099,   575,
    1100,  1101,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   576,   144,   145,   146,   147,   577,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     578,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   579,   580,   175,     0,  1102,
     177,   178,   581,   180,   181,  1103,   582,   184,   185,   583,
     187,   188,   584,     0,   190,   191,   192,  1104,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   585,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   586,   213,  1105,
    1106,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,  1107,   257,  1108,   259,   260,   261,   262,   263,  1109,
     265,   266,   267,   268,   269,   270,   271,   272,   273,  1110,
    1111,   276,   277,   278,   279,   280,   587,   281,   282,   283,
     284,   285,   286,   287,   288,   289,  1112,   291,   292,   293,
     588,   294,   295,  1113,   297,   298,   299,   300,   301,   302,
     303,  1114,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,  1115,   316,   317,   318,   319,   320,   321,
    1116,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   344,   592,   346,   347,   348,   349,   350,   351,
     352,  1117,   354,   593,   356,   357,   358,  1118,  1119,   361,
     362,   594,   364,   365,  1120,   367,   368,   369,   370,   371,
     372,  1121,   374,   595,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   596,   395,   396,   597,   398,   399,   400,
     401,  1122,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
    1123,  1124,  1125,  1126,   425,   426,   427,   428,  1127,  1128,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   599,
     441,   442,   443,  1129,   445,  1130,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,  1131,  1132,   600,  1133,
     461,   462,   463,     0,   464,   601,   466,  1134,     0,     0,
       0,     0,     0,     0,     0,     0,  1968,  1969,     0,     0,
       0,  1004,  1137,     0,     0,  1005,  1006,  1138,     0,     0,
       0,  1139,  1140,     0,     0,  1141,  1007,  1008,     0,  1009,
    1010,  1011,  1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,
       0,     0,     0,     0,     0,     0,     0,  1020,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1021,  1022,  1023,  1024,     0,     0,
       0,     0,     0,     0,     0,  1025,  1026,     0,  1027,     0,
       0,     0,     0,     0,     0,  1028,  1029,     0,     0,  1030,
    1031,  1032,  1033,     0,  1034,  1035,     0,  1036,  1037,     0,
       0,     0,     0,     0,     0,     0,  1038,     0,     0,  1039,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,     0,     0,     0,     0,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,  1048,     0,     0,  2094,     0,     0,
       0,     0,     0,     0,     0,     0,  1050,     0,  1051,     0,
    1052,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1053,  1054,     0,  1055,     0,     0,
       0,  1056,     0,     0,     0,  1057,     0,     0,     0,     0,
    1059,  1060,  1061,  1062,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1063,
    1064,  1065,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1068,  1069,     0,     0,     0,     0,     0,     0,     0,
    1070,  1071,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1072,
       0,     0,     0,     0,     0,     0,  1073,  1074,     0,  1075,
    1076,  1077,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1080,  1081,  1082,     0,     0,     0,     0,
       0,  1083,  1084,     0,     0,     0,     0,     0,     0,     0,
       0,    47,    48,    49,   565,    50,    51,    52,    53,    54,
      55,    56,    57,  1085,    59,    60,    61,    62,    63,    64,
    1086,    66,    67,    68,    69,    70,    71,    72,  1087,   566,
       0,   567,   568,    78,    79,    80,    81,    82,    83,   569,
      85,    86,    87,    88,  1088,    89,   571,    91,    92,    93,
      94,    95,   572,  1089,    97,  1090,    99,  1091,  1092,  1093,
    1094,  1095,     0,   105,   106,   107,   573,   109,   110,   111,
     112,   113,   114,   115,   116,   117,  1096,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,  1097,  1098,
    1099,   575,  1100,  1101,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   576,   144,   145,   146,   147,   577,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   578,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   579,   580,   175,
       0,  1102,   177,   178,   581,   180,   181,  1103,   582,   184,
     185,   583,   187,   188,   584,     0,   190,   191,   192,  1104,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   585,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   586,
     213,  1105,  1106,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,  1107,   257,  1108,   259,   260,   261,   262,
     263,  1109,   265,   266,   267,   268,   269,   270,   271,   272,
     273,  1110,  1111,   276,   277,   278,   279,   280,   587,   281,
     282,   283,   284,   285,   286,   287,   288,   289,  1112,   291,
     292,   293,   588,   294,   295,  1113,   297,   298,   299,   300,
     301,   302,   303,  1114,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,  1115,   316,   317,   318,   319,
     320,   321,  1116,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   344,   592,   346,   347,   348,   349,
     350,   351,   352,  1117,   354,   593,   356,   357,   358,  1118,
    1119,   361,   362,   594,   364,   365,  1120,   367,   368,   369,
     370,   371,   372,  1121,   374,   595,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   596,   395,   396,   597,   398,
     399,   400,   401,  1122,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,  1123,  1124,  1125,  1126,   425,   426,   427,   428,
    1127,  1128,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   599,   441,   442,   443,  1129,   445,  1130,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,  1131,  1132,
     600,  1133,   461,   462,   463,     0,   464,   601,   466,  1134,
       0,     0,     0,     0,     0,     0,     0,     0,  1968,  1969,
       0,     0,     0,  1004,  1137,     0,     0,  1005,  1006,  1138,
       0,     0,     0,  1139,  1140,     0,     0,  1141,  1007,  1008,
       0,  1009,  1010,  1011,  1012,  1013,  1014,  1015,  1016,  1017,
    1018,  1019,     0,     0,     0,     0,     0,     0,     0,  1020,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1021,  1022,  1023,  1024,
       0,     0,     0,     0,     0,     0,     0,  1025,  1026,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
       0,  1030,  1031,  1032,  1033,     0,  1034,  1035,     0,  1036,
    1037,     0,     0,     0,     0,     0,     0,     0,  1038,     0,
       0,  1039,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1040,  1041,
    1042,     0,  1043,     0,     0,     0,     0,     0,     0,     0,
    1044,  1045,  1046,     0,     0,     0,     0,     0,  1047,     0,
       0,     0,     0,     0,     0,     0,  1048,     0,     0,  2096,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1053,  1054,     0,  1055,
       0,     0,     0,  1056,     0,     0,     0,  1057,     0,     0,
       0,     0,  1059,  1060,  1061,  1062,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,  1064,  1065,     0,  1066,     0,     0,     0,     0,
       0,     0,  1067,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1068,  1069,     0,     0,     0,     0,     0,
       0,     0,  1070,  1071,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1072,     0,     0,     0,     0,     0,     0,  1073,  1074,
       0,  1075,  1076,  1077,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1078,  1079,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1080,  1081,  1082,     0,     0,
       0,     0,     0,  1083,  1084,     0,     0,     0,     0,     0,
       0,     0,     0,    47,    48,    49,   565,    50,    51,    52,
      53,    54,    55,    56,    57,  1085,    59,    60,    61,    62,
      63,    64,  1086,    66,    67,    68,    69,    70,    71,    72,
    1087,   566,     0,   567,   568,    78,    79,    80,    81,    82,
      83,   569,    85,    86,    87,    88,  1088,    89,   571,    91,
      92,    93,    94,    95,   572,  1089,    97,  1090,    99,  1091,
    1092,  1093,  1094,  1095,     0,   105,   106,   107,   573,   109,
     110,   111,   112,   113,   114,   115,   116,   117,  1096,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
    1097,  1098,  1099,   575,  1100,  1101,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   576,   144,   145,   146,   147,
     577,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   578,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   579,
     580,   175,     0,  1102,   177,   178,   581,   180,   181,  1103,
     582,   184,   185,   583,   187,   188,   584,     0,   190,   191,
     192,  1104,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   585,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   586,   213,  1105,  1106,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,  1107,   257,  1108,   259,   260,
     261,   262,   263,  1109,   265,   266,   267,   268,   269,   270,
     271,   272,   273,  1110,  1111,   276,   277,   278,   279,   280,
     587,   281,   282,   283,   284,   285,   286,   287,   288,   289,
    1112,   291,   292,   293,   588,   294,   295,  1113,   297,   298,
     299,   300,   301,   302,   303,  1114,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,  1115,   316,   317,
     318,   319,   320,   321,  1116,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   344,   592,   346,   347,
     348,   349,   350,   351,   352,  1117,   354,   593,   356,   357,
     358,  1118,  1119,   361,   362,   594,   364,   365,  1120,   367,
     368,   369,   370,   371,   372,  1121,   374,   595,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   596,   395,   396,
     597,   398,   399,   400,   401,  1122,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,  1123,  1124,  1125,  1126,   425,   426,
     427,   428,  1127,  1128,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   599,   441,   442,   443,  1129,   445,  1130,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
    1131,  1132,   600,  1133,   461,   462,   463,     0,   464,   601,
     466,  1134,     0,     0,     0,     0,     0,     0,     0,     0,
    1968,  1969,     0,     0,     0,  1004,  1137,     0,     0,  1005,
    1006,  1138,     0,     0,     0,  1139,  1140,     0,     0,  1141,
    1007,  1008,     0,  1009,  1010,  1011,  1012,  1013,  1014,  1015,
    1016,  1017,  1018,  1019,     0,     0,     0,     0,     0,     0,
       0,  1020,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
    1023,  1024,     0,     0,     0,     0,     0,     0,     0,  1025,
    1026,     0,  1027,     0,     0,     0,     0,     0,     0,  1028,
    1029,     0,     0,  1030,  1031,  1032,  1033,     0,  1034,  1035,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    1038,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,     0,
       0,     0,  1044,  1045,  1046,     0,     0,     0,     0,     0,
    1047,     0,     0,     0,     0,     0,     0,     0,  1048,     0,
       0,  1049,     0,     0,     0,     0,     0,     0,     0,     0,
    1050,     0,  1051,     0,  1052,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1053,  1054,
       0,  1055,     0,     0,     0,  1056,     0,     0,     0,  1057,
       0,     0,     0,     0,  1059,  1060,  1061,  1062,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1063,  1064,  1065,     0,  1066,     0,     0,
       0,     0,     0,     0,  1067,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1068,  1069,     0,     0,     0,
       0,     0,     0,     0,  1070,  1071,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1072,     0,     0,     0,     0,     0,     0,
    1073,  1074,     0,  1075,  1076,  1077,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1078,  1079,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1080,  1081,  1082,
       0,     0,     0,     0,     0,  1083,  1084,     0,     0,     0,
       0,     0,     0,     0,     0,    47,    48,    49,   565,    50,
      51,    52,    53,    54,    55,    56,    57,  1085,    59,    60,
      61,    62,    63,    64,  1086,    66,    67,    68,    69,    70,
      71,    72,  1087,   566,     0,   567,   568,    78,    79,    80,
      81,    82,    83,   569,    85,    86,    87,    88,  1088,    89,
     571,    91,    92,    93,    94,    95,   572,  1089,    97,  1090,
      99,  1091,  1092,  1093,  1094,  1095,     0,   105,   106,   107,
     573,   109,   110,   111,   112,   113,   114,   115,   116,   117,
    1096,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,  1097,  1098,  1099,   575,  1100,  1101,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   576,   144,   145,
     146,   147,   577,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   578,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   579,   580,   175,     0,  1102,   177,   178,   581,   180,
     181,  1103,   582,   184,   185,   583,   187,   188,   584,     0,
     190,   191,   192,  1104,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   585,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   586,   213,  1105,  1106,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,  1107,   257,  1108,
     259,   260,   261,   262,   263,  1109,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1110,  1111,   276,   277,   278,
     279,   280,   587,   281,   282,   283,   284,   285,   286,   287,
     288,   289,  1112,   291,   292,   293,   588,   294,   295,  1113,
     297,   298,   299,   300,   301,   302,   303,  1114,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,  1115,
     316,   317,   318,   319,   320,   321,  1116,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   344,   592,
     346,   347,   348,   349,   350,   351,   352,  1117,   354,   593,
     356,   357,   358,  1118,  1119,   361,   362,   594,   364,   365,
    1120,   367,   368,   369,   370,   371,   372,  1121,   374,   595,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   596,
     395,   396,   597,   398,   399,   400,   401,  1122,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,  1123,  1124,  1125,  1126,
     425,   426,   427,   428,  1127,  1128,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   599,   441,   442,   443,  1129,
     445,  1130,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,  1131,  1132,   600,  1133,   461,   462,   463,     0,
     464,   601,   466,  1134,     0,     0,     0,     0,     0,     0,
       0,     0,  1135,  1136,     0,     0,     0,  1004,  1137,     0,
       0,  1005,  1006,  1138,     0,     0,     0,  1139,  1140,     0,
       0,  1141,  1007,  1008,     0,  1009,  1010,  1011,  1012,  1013,
    1014,  1015,  1016,  1017,  1018,  1019,     0,     0,     0,     0,
       0,     0,     0,  1020,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1021,  1022,  1023,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,  1027,     0,     0,     0,     0,     0,
       0,  1028,  1029,     0,     0,  1030,  1031,  1032,  1033,     0,
    1034,  1035,     0,  1036,  1037,     0,     0,     0,     0,     0,
       0,     0,  1038,     0,     0,  1039,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,
       0,     0,     0,     0,  1044,  1045,  1046,     0,     0,     0,
       0,     0,  1047,     0,     0,     0,     0,     0,     0,     0,
    1048,     0,     0,  2918,     0,     0,     0,     0,     0,     0,
       0,     0,  1050,     0,  1051,     0,  1052,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1053,  1054,     0,  1055,     0,     0,     0,  1056,     0,     0,
       0,  1057,     0,     0,     0,     0,  1059,  1060,  1061,  1062,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1063,  1064,  1065,     0,  1066,
       0,     0,     0,     0,     0,     0,  1067,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1068,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1078,  1079,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1080,
    1081,  1082,     0,     0,     0,     0,     0,  1083,  1084,     0,
       0,     0,     0,     0,     0,     0,     0,    47,    48,    49,
     565,    50,    51,    52,    53,    54,    55,    56,    57,  1085,
      59,    60,    61,    62,    63,    64,  1086,    66,    67,    68,
      69,    70,    71,    72,  1087,   566,     0,   567,   568,    78,
      79,    80,    81,    82,    83,   569,    85,    86,    87,    88,
    1088,    89,   571,    91,    92,    93,    94,    95,   572,  1089,
      97,  1090,    99,  1091,  1092,  1093,  1094,  1095,     0,   105,
     106,   107,   573,   109,   110,   111,   112,   113,   114,   115,
     116,   117,  1096,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,  1097,  1098,  1099,   575,  1100,  1101,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   576,
     144,   145,   146,   147,   577,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   578,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   579,   580,   175,     0,  1102,   177,   178,
     581,   180,   181,  1103,   582,   184,   185,   583,   187,   188,
     584,     0,   190,   191,   192,  1104,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   585,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   586,   213,  1105,  1106,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,  1107,
     257,  1108,   259,   260,   261,   262,   263,  1109,   265,   266,
     267,   268,   269,   270,   271,   272,   273,  1110,  1111,   276,
     277,   278,   279,   280,   587,   281,   282,   283,   284,   285,
     286,   287,   288,   289,  1112,   291,   292,   293,   588,   294,
     295,  1113,   297,   298,   299,   300,   301,   302,   303,  1114,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,  1115,   316,   317,   318,   319,   320,   321,  1116,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     344,   592,   346,   347,   348,   349,   350,   351,   352,  1117,
     354,   593,   356,   357,   358,  1118,  1119,   361,   362,   594,
     364,   365,  1120,   367,   368,   369,   370,   371,   372,  1121,
     374,   595,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,     0,   390,   391,   392,
     393,   596,   395,   396,   597,   398,   399,   400,   401,  1122,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,  1123,  1124,
    1125,  1126,   425,   426,   427,   428,  1127,  1128,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   599,   441,   442,
     443,  1129,   445,  1130,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,  1131,  1132,   600,  1133,   461,   462,
     463,     0,   464,   601,   466,  1134,     0,     0,     0,     0,
       0,     0,     0,     0,  1135,  1136,     0,     0,     0,  1004,
    1137,     0,     0,  1005,  1006,  1138,     0,     0,     0,  1139,
    1140,     0,     0,  1141,  1007,  1008,     0,  1009,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,     0,     0,
       0,     0,     0,     0,     0,  1020,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1021,  1022,  1023,  1024,     0,     0,     0,     0,
       0,     0,     0,  1025,  1026,     0,  1027,     0,     0,     0,
       0,     0,     0,  1028,  1029,     0,     0,  1030,  1031,  1032,
    1033,     0,  1034,  1035,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,  1038,     0,     0,  1039,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1040,  1041,  1042,     0,  1043,     0,
       0,     0,     0,     0,     0,     0,  1044,  1045,  1046,     0,
       0,     0,     0,     0,  1047,     0,     0,     0,     0,     0,
       0,     0,  1048,     0,     0,  2920,     0,     0,     0,     0,
       0,     0,     0,     0,  1050,     0,  1051,     0,  1052,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1053,  1054,     0,  1055,     0,     0,     0,  1056,
       0,     0,     0,  1057,     0,     0,     0,     0,  1059,  1060,
    1061,  1062,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1063,  1064,  1065,
       0,  1066,     0,     0,     0,     0,     0,     0,  1067,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1068,
    1069,     0,     0,     0,     0,     0,     0,     0,  1070,  1071,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1072,     0,     0,
       0,     0,     0,     0,  1073,  1074,     0,  1075,  1076,  1077,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1078,  1079,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1080,  1081,  1082,     0,     0,     0,     0,     0,  1083,
    1084,     0,     0,     0,     0,     0,     0,     0,     0,    47,
      48,    49,   565,    50,    51,    52,    53,    54,    55,    56,
      57,  1085,    59,    60,    61,    62,    63,    64,  1086,    66,
      67,    68,    69,    70,    71,    72,  1087,   566,     0,   567,
     568,    78,    79,    80,    81,    82,    83,   569,    85,    86,
      87,    88,  1088,    89,   571,    91,    92,    93,    94,    95,
     572,  1089,    97,  1090,    99,  1091,  1092,  1093,  1094,  1095,
       0,   105,   106,   107,   573,   109,   110,   111,   112,   113,
     114,   115,   116,   117,  1096,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,  1097,  1098,  1099,   575,
    1100,  1101,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   576,   144,   145,   146,   147,   577,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     578,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   579,   580,   175,     0,  1102,
     177,   178,   581,   180,   181,  1103,   582,   184,   185,   583,
     187,   188,   584,     0,   190,   191,   192,  1104,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   585,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   586,   213,  1105,
    1106,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,  1107,   257,  1108,   259,   260,   261,   262,   263,  1109,
     265,   266,   267,   268,   269,   270,   271,   272,   273,  1110,
    1111,   276,   277,   278,   279,   280,   587,   281,   282,   283,
     284,   285,   286,   287,   288,   289,  1112,   291,   292,   293,
     588,   294,   295,  1113,   297,   298,   299,   300,   301,   302,
     303,  1114,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,  1115,   316,   317,   318,   319,   320,   321,
    1116,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   344,   592,   346,   347,   348,   349,   350,   351,
     352,  1117,   354,   593,   356,   357,   358,  1118,  1119,   361,
     362,   594,   364,   365,  1120,   367,   368,   369,   370,   371,
     372,  1121,   374,   595,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   596,   395,   396,   597,   398,   399,   400,
     401,  1122,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
    1123,  1124,  1125,  1126,   425,   426,   427,   428,  1127,  1128,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   599,
     441,   442,   443,  1129,   445,  1130,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,  1131,  1132,   600,  1133,
     461,   462,   463,     0,   464,   601,   466,  1134,     0,     0,
       0,     0,     0,     0,     0,     0,  1135,  1136,     0,     0,
       0,  1004,  1137,     0,     0,  1005,  1006,  1138,     0,     0,
       0,  1139,  1140,     0,     0,  1141,  1007,  1008,     0,  1009,
    1010,  1011,  1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1022,  1023,  1024,     0,     0,
       0,     0,     0,     0,     0,  1025,  1026,     0,  1027,     0,
       0,     0,     0,     0,     0,  1028,  1029,     0,     0,  1030,
    1031,  1032,  1033,     0,  1034,  1035,     0,  1036,  1037,     0,
       0,     0,     0,     0,     0,     0,  1038,     0,     0,  1039,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,     0,     0,     0,     0,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,  1048,     0,     0,  1967,     0,     0,
       0,     0,     0,     0,     0,     0,  1050,     0,  1051,     0,
    1052,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1053,  1054,     0,  1055,     0,     0,
       0,  1056,     0,     0,     0,  1057,     0,     0,     0,     0,
    1059,  1060,  1061,  1062,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1063,
    1064,  1065,     0,  1066,     0,     0,     0,     0,     0,     0,
    1067,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1068,  1069,     0,     0,     0,     0,     0,     0,     0,
    1070,  1071,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1072,
       0,     0,     0,     0,     0,     0,  1073,  1074,     0,  1075,
    1076,  1077,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1080,  1081,  1082,     0,     0,     0,     0,
       0,  1083,  1084,     0,     0,     0,     0,     0,     0,     0,
       0,    47,    48,    49,   565,    50,    51,    52,    53,    54,
      55,    56,    57,  1085,    59,    60,    61,    62,    63,    64,
    1086,    66,    67,    68,    69,    70,    71,    72,  1087,   566,
       0,   567,   568,    78,    79,    80,    81,    82,    83,   569,
      85,    86,    87,    88,  1088,    89,   571,    91,    92,    93,
      94,    95,   572,  1089,    97,  1090,    99,  1091,  1092,  1093,
    1094,  1095,     0,   105,   106,   107,   573,   109,   110,   111,
     112,   113,   114,   115,   116,   117,  1096,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,  1097,  1098,
    1099,   575,  1100,  1101,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   576,   144,   145,   146,   147,   577,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   578,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   579,   580,   175,
       0,  1102,   177,   178,   581,   180,   181,  1103,   582,   184,
     185,   583,   187,   188,   584,     0,   190,   191,   192,  1104,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   585,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   586,
     213,  1105,  1106,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,  1107,   257,  1108,   259,   260,   261,   262,
     263,  1109,   265,   266,   267,   268,   269,   270,   271,   272,
     273,  1110,  1111,   276,   277,   278,   279,   280,   587,   281,
     282,   283,   284,   285,   286,   287,   288,   289,  1112,   291,
     292,   293,   588,   294,   295,  1113,   297,   298,   299,   300,
     301,   302,   303,  1114,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,  1115,   316,   317,   318,   319,
     320,   321,  1116,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   344,   592,   346,   347,   348,   349,
     350,   351,   352,  1117,   354,   593,   356,   357,   358,  1118,
    1119,   361,   362,   594,   364,   365,  1120,   367,   368,   369,
     370,   371,   372,  1121,   374,   595,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   596,   395,   396,   597,   398,
     399,   400,   401,  1122,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,  1123,  1124,  1125,  1126,   425,   426,   427,   428,
    1127,  1128,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   599,   441,   442,   443,  1129,   445,  1130,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,  1131,  1132,
     600,  1133,   461,   462,   463,     0,   464,   601,   466,  1134,
       0,     0,     0,     0,     0,     0,     0,     0,  6145,  6146,
    1004,     0,     0,     0,  2006,     0,     0,     0,     0,  6147,
       0,     0,     0,     0,  1140,  1960,  1961,  1141,  1009,  1010,
    1011,  1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1042,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1062,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1079,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,    48,    49,   565,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,   566,     0,
     567,   568,    78,    79,    80,    81,    82,    83,   569,    85,
      86,    87,    88,   570,    89,   571,    91,    92,    93,    94,
      95,   572,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   573,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   574,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,  2951,   131,
     575,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   576,   144,   145,   146,   147,   577,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   578,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   579,   580,   175,     0,
     176,   177,   178,   581,   180,   181,   182,   582,   184,   185,
     583,   187,   188,   584,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   585,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   586,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   587,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   588,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   344,   592,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   593,   356,   357,   358,   359,   360,
     361,   362,   594,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   595,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   596,   395,   396,   597,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,  2952,   422,   423,  2953,   425,   426,   427,   428,   429,
     598,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     599,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   600,
     460,   461,   462,   463,     0,   464,   601,   466,   467,  6420,
       0,     0,     0,  2873,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1141,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    47,
      48,    49,   565,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,   566,     0,   567,
     568,    78,    79,    80,    81,    82,    83,   569,    85,    86,
      87,    88,   570,    89,   571,    91,    92,    93,    94,    95,
     572,    96,    97,    98,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   573,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   574,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   575,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   576,   144,   145,   146,   147,   577,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     578,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   579,   580,   175,     0,   176,
     177,   178,   581,   180,   181,   182,   582,   184,   185,   583,
     187,   188,   584,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   585,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   586,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   587,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     588,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   344,   592,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   593,   356,   357,   358,   359,   360,   361,
     362,   594,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   595,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   596,   395,   396,   597,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   598,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   599,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   600,   460,
     461,   462,   463,     0,   464,   601,   466,   467,  6420,     0,
       0,     0,  2873,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     4,     5,     0,     0,     0,  6421,     0,
       0,     0,     0,     0,     0,  2874,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,   565,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   581,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   600,   460,   461,
     462,   463,  2006,   464,   601,   466,   467,     0,     0,     0,
       0,     0,     0,  1960,  1961,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2874,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,   565,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   581,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   600,   460,   461,
     462,   463,  2006,   464,   601,   466,   467,     0,     0,     0,
       0,     0,     0,  1960,  1961,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2007,     0,     0,     0,
       0,     0,     0,     0,  1141,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,   565,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   581,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   600,   460,   461,
     462,   463,  2873,   464,   601,   466,   467,     0,     0,     0,
       0,     0,     0,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1141,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,   565,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   581,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   600,   460,   461,
     462,   463,     0,   464,   601,   466,   467,     1,     2,     3,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2874,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     6,
       7,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     8,     0,     9,
       0,    10,     0,    11,     0,     0,     0,     0,     0,     0,
       0,    12,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,    14,     0,    15,    16,     0,     0,     0,     0,
       0,    17,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    18,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,    21,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    22,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    23,
       0,    24,     0,     0,     0,    25,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      26,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    27,    28,     0,     0,     0,     0,     0,     0,     0,
       0,    29,    30,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,    32,    33,    34,     0,    35,     0,
       0,     0,     0,    36,     0,     0,     0,     0,     0,    37,
       0,     0,     0,    38,    39,    40,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    41,     0,    42,     0,    43,     0,     0,     0,     0,
       0,     0,    44,     0,     0,     0,     0,     0,     0,     0,
      45,    46,     0,     0,     0,    47,    48,    49,     0,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,     0,    89,
      90,    91,    92,    93,    94,    95,     0,    96,    97,    98,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
       0,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,     0,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,     0,   175,     0,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,     0,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,     0,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,     0,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,     0,
     464,   465,   466,   467,     1,     0,     3,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     4,     5,     0,
       0,     0,     0,   468,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     6,     7,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     8,     0,     9,     0,    10,     0,
      11,     0,     0,     0,     0,     0,     0,     0,    12,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,    14,
       0,    15,    16,     0,     0,     0,     0,     0,    17,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    18,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,    20,     0,     0,
       0,     0,     0,     0,     0,    21,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    23,     0,    24,     0,
       0,     0,    25,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    26,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    27,    28,
       0,     0,     0,     0,     0,     0,     0,     0,    29,    30,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,    32,    33,    34,     0,    35,     0,     0,     0,     0,
      36,     0,     0,     0,     0,     0,    37,     0,     0,     0,
      38,    39,    40,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    41,     0,
      42,     0,    43,     0,     0,     0,     0,     0,     0,    44,
       0,     0,     0,     0,     0,     0,     0,    45,    46,     0,
       0,     0,    47,    48,    49,     0,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,     0,    89,    90,    91,    92,
      93,    94,    95,     0,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,     0,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,     0,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,     0,
     175,     0,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,     0,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   464,   465,   466,
     467,     1,     0,     3,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     4,     5,     0,     0,     0,     0,
     468,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     6,     7,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     8,     0,     0,     0,    10,     0,    11,     0,     0,
       0,     0,     0,     0,     0,    12,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    14,     0,    15,    16,
       0,     0,     0,     0,     0,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    21,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    22,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    23,     0,    24,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    26,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    27,    28,     0,     0,     0,
       0,     0,     0,     0,     0,    29,    30,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,    32,     0,
      34,     0,    35,     0,     0,     0,     0,    36,     0,     0,
       0,     0,     0,    37,     0,     0,     0,    38,    39,    40,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    41,     0,    42,     0,    43,
       0,     0,     0,     0,     0,     0,    44,     0,     0,     0,
       0,     0,     0,     0,     0,    46,     0,     0,     0,    47,
      48,    49,     0,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,     0,     0,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    88,     0,    89,    90,    91,    92,    93,    94,    95,
       0,    96,    97,    98,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,     0,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,     0,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,     0,   175,     0,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,     0,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,     0,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,     0,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,     0,   464,   465,   466,   467,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   468,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5161,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   762,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3777,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3778,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   764,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    47,    48,    49,   565,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,   566,     0,   567,   568,    78,    79,    80,    81,    82,
      83,   569,    85,    86,    87,    88,   570,    89,   571,    91,
      92,    93,    94,    95,   572,    96,    97,    98,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   573,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   574,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   575,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   576,   144,   145,   146,   147,
     577,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   578,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   579,
     580,   175,     0,   176,   177,   178,   581,   180,   181,   182,
     582,   184,   185,   583,   187,   188,   584,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   585,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   586,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     587,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   588,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,  5162,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   344,   592,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   593,   356,   357,
     358,   359,   360,   361,   362,   594,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   595,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   596,   395,   396,
     597,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   598,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   599,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   600,   460,   461,   462,   463,     0,   464,   601,
     466,   467,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    37,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,     0,     0,     0,     0,     0,
       0,     0,     0,    46,     0,     0,     0,    47,    48,    49,
     565,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,   566,     0,   567,   568,    78,
      79,    80,    81,    82,    83,   569,    85,    86,    87,    88,
     570,    89,   571,    91,    92,    93,    94,    95,   572,    96,
      97,    98,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   573,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   574,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   575,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   576,
     144,   145,   146,   147,   577,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   578,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   579,   580,   175,     0,   176,   177,   178,
     581,   180,   181,   182,   582,   184,   185,   583,   187,   188,
     584,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   585,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   586,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   587,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   588,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     344,   592,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   593,   356,   357,   358,   359,   360,   361,   362,   594,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   595,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,     0,   390,   391,   392,
     393,   596,   395,   396,   597,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   598,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   599,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   600,   460,   461,   462,
     463,     0,   464,   601,   466,   467,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1398,     0,     0,     0,     0,
       0,     0,     0,   793,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1397,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    47,    48,    49,   565,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,   566,
       0,   567,   568,    78,    79,    80,    81,    82,    83,   569,
      85,    86,    87,    88,   570,    89,   571,    91,    92,    93,
      94,    95,   572,    96,    97,    98,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   573,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   574,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   575,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   576,   144,   145,   146,   147,   577,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   578,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   579,   580,   175,
       0,   176,   177,   178,   581,   180,   181,   182,   582,   184,
     185,   583,   187,   188,   584,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   585,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   586,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   587,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   588,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   344,   592,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   593,   356,   357,   358,   359,
     360,   361,   362,   594,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   595,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   596,   395,   396,   597,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   598,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   599,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     600,   460,   461,   462,   463,     0,   464,   601,   466,   467,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1398,
       0,     0,     0,     0,  1399,     0,     0,   793,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    47,    48,    49,   565,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,   566,     0,   567,   568,    78,    79,    80,
      81,    82,    83,   569,    85,    86,    87,    88,   570,    89,
     571,    91,    92,    93,    94,    95,   572,    96,    97,    98,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     573,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     574,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   575,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   576,   144,   145,
     146,   147,   577,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   578,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   579,   580,   175,     0,   176,   177,   178,   581,   180,
     181,   182,   582,   184,   185,   583,   187,   188,   584,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   585,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   586,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   587,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   588,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   344,   592,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   593,
     356,   357,   358,   359,   360,   361,   362,   594,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   595,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   596,
     395,   396,   597,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   598,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   599,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   600,   460,   461,   462,   463,     0,
     464,   601,   466,   467,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1398,     0,     0,     0,     0,  1399,     0,
       0,   793,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    47,
      48,    49,   565,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,   566,     0,   567,
     568,    78,    79,    80,    81,    82,    83,   569,    85,    86,
      87,    88,   570,    89,   571,    91,    92,    93,    94,    95,
     572,    96,    97,    98,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   573,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   574,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   575,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   576,   144,   145,   146,   147,   577,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     578,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   579,   580,   175,     0,   176,
     177,   178,   581,   180,   181,   182,   582,   184,   185,   583,
     187,   188,   584,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   585,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   586,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   587,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     588,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   344,   592,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   593,   356,   357,   358,   359,   360,   361,
     362,   594,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   595,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   596,   395,   396,   597,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   598,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   599,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   600,   460,
     461,   462,   463,     0,   464,   601,   466,   467,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1398,     0,     0,
       0,     0,     0,     0,     0,   793,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    47,    48,    49,   565,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,   566,     0,   567,   568,    78,    79,    80,    81,    82,
      83,   569,    85,    86,    87,    88,   570,    89,   571,    91,
      92,    93,    94,    95,   572,    96,    97,    98,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   573,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   574,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   575,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   576,   144,   145,   146,   147,
     577,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   578,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   579,
     580,   175,     0,   176,   177,   178,   581,   180,   181,   182,
     582,   184,   185,   583,   187,   188,   584,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   585,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   586,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     587,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   588,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   344,   592,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   593,   356,   357,
     358,   359,   360,   361,   362,   594,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   595,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   596,   395,   396,
     597,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   598,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   599,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   600,   460,   461,   462,   463,     0,   464,   601,
     466,   467,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,  3432,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   793,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    47,    48,    49,
     565,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,   566,     0,   567,   568,    78,
      79,    80,    81,    82,    83,   569,    85,    86,    87,    88,
     570,    89,   571,    91,    92,    93,    94,    95,   572,    96,
      97,    98,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   573,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   574,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   575,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   576,
     144,   145,   146,   147,   577,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   578,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   579,   580,   175,     0,   176,   177,   178,
     581,   180,   181,   182,   582,   184,   185,   583,   187,   188,
     584,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   585,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   586,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   587,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   588,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     344,   592,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   593,   356,   357,   358,   359,   360,   361,   362,   594,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   595,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,     0,   390,   391,   392,
     393,   596,   395,   396,   597,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   598,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   599,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   600,   460,   461,   462,
     463,     0,   464,   601,   466,   467,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5314,     0,     0,     0,     0,
       0,     0,     0,  5163,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5557,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    47,    48,    49,   565,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,   566,
       0,   567,   568,    78,    79,    80,    81,    82,    83,   569,
      85,    86,    87,    88,   570,    89,   571,    91,    92,    93,
      94,    95,   572,    96,    97,    98,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   573,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   574,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   575,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   576,   144,   145,   146,   147,   577,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   578,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   579,   580,   175,
       0,   176,   177,   178,   581,   180,   181,   182,   582,   184,
     185,   583,   187,   188,   584,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   585,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   586,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   587,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   588,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   344,   592,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   593,   356,   357,   358,   359,
     360,   361,   362,   594,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   595,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   596,   395,   396,   597,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   598,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   599,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     600,   460,   461,   462,   463,     0,   464,   601,   466,   467,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    47,    48,    49,   565,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,   566,     0,   567,   568,    78,    79,    80,
      81,    82,    83,   569,    85,    86,    87,    88,   570,    89,
     571,    91,    92,    93,    94,    95,   572,    96,    97,    98,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     573,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     574,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   575,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   576,   144,   145,
     146,   147,   577,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   578,   162,     0,     0,
     163,   164,   165,   790,   167,   168,   169,   170,   171,   172,
     173,   579,   580,   175,     0,   791,   177,   178,   581,   180,
     181,   182,   582,   184,   185,   583,   187,   188,   584,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   585,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   586,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   587,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   588,   294,   295,   296,
     297,   298,   299,   300,   301,   792,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   344,   592,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   593,
     356,   357,   358,   359,   360,   361,   362,   594,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   595,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   596,
     395,   396,   597,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   598,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   599,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   600,   460,   461,   462,   463,     0,
     464,   601,   466,   467,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   793,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    47,
      48,    49,   565,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,   566,     0,   567,
     568,    78,    79,    80,    81,    82,    83,   569,    85,    86,
      87,    88,   570,    89,   571,    91,    92,    93,    94,    95,
     572,    96,    97,    98,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   573,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   574,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   575,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   576,   144,   145,   146,   147,   577,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     578,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   579,   580,   175,     0,   176,
     177,   178,   581,   180,   181,   182,   582,   184,   185,   583,
     187,   188,   584,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   585,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   586,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   587,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     588,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   344,   592,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   593,   356,   357,   358,   359,   360,   361,
     362,   594,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   595,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   596,   395,   396,   597,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   598,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   599,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   600,   460,
     461,   462,   463,     0,   464,   601,   466,   467,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   793,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    47,    48,    49,   565,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,   566,     0,   567,   568,    78,    79,    80,    81,    82,
      83,   569,    85,    86,    87,    88,   570,    89,   571,    91,
      92,    93,    94,    95,   572,    96,    97,    98,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   573,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   574,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   575,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   576,   144,   145,   146,   147,
     577,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   578,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   579,
     580,   175,     0,   176,   177,   178,   581,   180,   181,   182,
     582,   184,   185,   583,   187,   188,   584,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   585,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   586,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     587,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   588,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   344,   592,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   593,   356,   357,
     358,   359,   360,   361,   362,   594,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   595,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   596,   395,   396,
     597,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   598,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   599,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   600,   460,   461,   462,   463,     0,   464,   601,
     466,   467,     4,     5,   813,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   715,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1470,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    47,    48,    49,
     565,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,   566,     0,   567,   568,    78,
      79,    80,    81,    82,    83,   569,    85,    86,    87,    88,
     570,    89,   571,    91,    92,    93,    94,    95,   572,    96,
      97,    98,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   573,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   574,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   575,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   576,
     144,   145,   146,   147,   577,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   578,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   579,   580,   175,     0,   176,   177,   178,
     581,   180,   181,   182,   582,   184,   185,   583,   187,   188,
     584,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   585,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   586,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   587,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   588,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     344,   592,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   593,   356,   357,   358,   359,   360,   361,   362,   594,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   595,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,     0,   387,   388,   389,     0,   390,   391,   392,
     393,   596,   395,   396,   597,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   598,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   599,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   600,   460,   461,   462,
     463,     0,   464,   601,   466,   467,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2088,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    47,    48,    49,   565,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,   566,
       0,   567,   568,    78,    79,    80,    81,    82,    83,   569,
      85,    86,    87,    88,   570,    89,   571,    91,    92,    93,
      94,    95,   572,    96,    97,    98,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   573,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   574,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   575,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   576,   144,   145,   146,   147,   577,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   578,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   579,   580,   175,
       0,   176,   177,   178,   581,   180,   181,   182,   582,   184,
     185,   583,   187,   188,   584,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   585,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   586,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   587,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   588,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   344,   592,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   593,   356,   357,   358,   359,
     360,   361,   362,   594,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   595,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   596,   395,   396,   597,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   598,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   599,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     600,   460,   461,   462,   463,  1226,   464,   601,   466,   467,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       4,     5,     0,     0,     0,     0,     0,     0,     0,  2929,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1227,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1228,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    47,    48,    49,  1229,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,   566,     0,   567,   568,    78,    79,    80,
      81,    82,    83,   569,    85,    86,    87,    88,  1230,    89,
     571,    91,    92,    93,    94,    95,   572,    96,    97,    98,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     573,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     574,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   575,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   576,   144,   145,
     146,   147,   577,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   578,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   579,   580,   175,     0,   176,   177,   178,  1231,   180,
     181,   182,   582,  1232,   185,   583,   187,   188,   584,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   585,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   586,   213,   214,   215,   216,   217,   218,
     219,  1233,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,  1234,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   587,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   588,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,  1235,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   344,   592,
     346,   347,   348,   349,   350,   351,   352,   353,  1236,   593,
     356,   357,   358,   359,   360,   361,   362,   594,   364,   365,
     366,   367,   368,   369,   370,  1237,   372,   373,   374,   595,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   596,
    1238,   396,   597,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
    1239,   426,   427,   428,   429,   598,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   599,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,  1240,   460,   461,   462,   463,  2170,
     464,   601,   466,   467,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     4,     5,   813,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   715,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    47,
      48,    49,   565,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,   566,     0,   567,
     568,    78,    79,    80,    81,    82,    83,   569,    85,    86,
      87,    88,   570,    89,   571,    91,    92,    93,    94,    95,
     572,    96,    97,    98,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   573,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   574,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   575,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   576,   144,   145,   146,   147,   577,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     578,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   579,   580,   175,     0,   176,
     177,   178,   581,   180,   181,   182,   582,   184,   185,   583,
     187,   188,   584,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   585,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   586,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   587,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     588,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   344,   592,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   593,   356,   357,   358,   359,   360,   361,
     362,   594,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   595,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   596,   395,   396,   597,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   598,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   599,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   600,   460,
     461,   462,   463,  2411,   464,   601,   466,   467,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     4,     5,
     813,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     715,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    47,    48,    49,   565,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,   566,     0,   567,   568,    78,    79,    80,    81,    82,
      83,   569,    85,    86,    87,    88,   570,    89,   571,    91,
      92,    93,    94,    95,   572,    96,    97,    98,    99,   100,
     101,   102,   103,   104,     0,   105,   106,   107,   573,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   574,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   575,   133,   134,   135,     0,   136,   137,
     138,   139,   140,   141,   142,   576,   144,   145,   146,   147,
     577,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   578,   162,     0,     0,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   579,
     580,   175,     0,   176,   177,   178,   581,   180,   181,   182,
     582,   184,   185,   583,   187,   188,   584,     0,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   585,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   586,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     587,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   588,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   589,   311,   590,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   591,   342,   343,   344,   592,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   593,   356,   357,
     358,   359,   360,   361,   362,   594,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   595,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,     0,   390,   391,   392,   393,   596,   395,   396,
     597,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   598,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   599,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   600,   460,   461,   462,   463,  2709,   464,   601,
     466,   467,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     4,     5,   813,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   715,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    47,    48,    49,
     565,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,   566,     0,   567,   568,    78,
      79,    80,    81,    82,    83,   569,    85,    86,    87,    88,
     570,    89,   571,    91,    92,    93,    94,    95,   572,    96,
      97,    98,    99,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   573,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   574,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   575,   133,   134,
     135,     0,   136,   137,   138,   139,   140,   141,   142,   576,
     144,   145,   146,   147,   577,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   578,   162,
       0,     0,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   579,   580,   175,     0,   176,   177,   178,
     581,   180,   181,   182,   582,   184,   185,   583,   187,   188,
     584,     0,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   585,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   586,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   587,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   588,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   589,   311,   590,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   591,   342,   343,
     344,   592,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   593,   356,   357,   358,   359,   360,   361,   362,   594,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   595,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,     0,   390,   391,   392,
     393,   596,   395,   396,   597,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   598,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   599,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   600,   460,   461,   462,
     463,  1226,   464,   601,   466,   467,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1227,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1228,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    47,    48,    49,  1229,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,   566,
       0,   567,   568,    78,    79,    80,    81,    82,    83,   569,
      85,    86,    87,    88,  1230,    89,   571,    91,    92,    93,
      94,    95,   572,    96,    97,    98,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   573,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   574,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   575,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   576,   144,   145,   146,   147,   577,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   578,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   579,   580,   175,
       0,   176,   177,   178,  1231,   180,   181,   182,   582,  1232,
     185,   583,   187,   188,   584,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   585,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   586,
     213,   214,   215,   216,   217,   218,   219,  1233,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,  1234,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   587,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   588,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,  1235,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   344,   592,   346,   347,   348,   349,
     350,   351,   352,   353,  1236,   593,   356,   357,   358,   359,
     360,   361,   362,   594,   364,   365,   366,   367,   368,   369,
     370,  1237,   372,   373,   374,   595,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   596,   395,   396,   597,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   598,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   599,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
    1240,   460,   461,   462,   463,  2319,   464,   601,   466,   467,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1960,  1961,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2320,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    47,    48,    49,   565,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,   566,     0,   567,   568,    78,    79,    80,
      81,    82,    83,   569,    85,    86,    87,    88,   570,    89,
     571,    91,    92,    93,    94,    95,   572,    96,    97,    98,
      99,   100,   101,   102,   103,   104,     0,   105,   106,   107,
     573,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     574,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   575,   133,   134,   135,     0,
     136,   137,   138,   139,   140,   141,   142,   576,   144,   145,
     146,   147,   577,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   578,   162,     0,     0,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   579,   580,   175,     0,   176,   177,   178,   581,   180,
     181,   182,   582,   184,   185,   583,   187,   188,   584,     0,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   585,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   586,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   587,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   588,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   589,   311,   590,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   591,   342,   343,   344,   592,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   593,
     356,   357,   358,   359,   360,   361,   362,   594,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   595,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,     0,   390,   391,   392,   393,   596,
     395,   396,   597,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   598,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   599,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   600,   460,   461,   462,   463,  2319,
     464,   601,   466,   467,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1960,  1961,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    47,
      48,    49,   565,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,   566,     0,   567,
     568,    78,    79,    80,    81,    82,    83,   569,    85,    86,
      87,    88,   570,    89,   571,    91,    92,    93,    94,    95,
     572,    96,    97,    98,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   573,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   574,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   575,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   576,   144,   145,   146,   147,   577,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     578,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   579,   580,   175,     0,   176,
     177,   178,   581,   180,   181,   182,   582,   184,   185,   583,
     187,   188,   584,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   585,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   586,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   587,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     588,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   344,   592,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   593,   356,   357,   358,   359,   360,   361,
     362,   594,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   595,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   596,   395,   396,   597,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   598,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   599,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   600,   460,
     461,   462,   463,     0,   464,   601,   466,   467,  2422,  1006,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1960,
    1961,     0,     0,     0,     0,     0,     0,     0,  2423,     0,
    2424,     0,  2425,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2426,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,    48,    49,   565,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   568,    78,    79,    80,    81,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,    94,    95,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   573,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   578,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     579,   580,   175,     0,   176,   177,   178,   581,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   344,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,   359,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   595,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   600,   460,   461,   462,   463,     0,   464,
     601,   466,   467,  2422,  1006,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1960,  1961,     0,     0,     0,     0,
       0,     0,     0,  2423,     0,  2424,     0,  2425,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4560,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    47,
      48,    49,   565,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,   566,     0,   567,
     568,    78,    79,    80,    81,    82,    83,   569,    85,    86,
      87,    88,   570,    89,   571,    91,    92,    93,    94,    95,
     572,    96,    97,    98,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   573,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   574,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   575,
     133,   134,   135,     0,   136,   137,   138,   139,   140,   141,
     142,   576,   144,   145,   146,   147,   577,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     578,   162,     0,     0,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   579,   580,   175,     0,   176,
     177,   178,   581,   180,   181,   182,   582,   184,   185,   583,
     187,   188,   584,     0,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   585,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   586,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   587,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     588,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   589,   311,
     590,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   591,
     342,   343,   344,   592,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   593,   356,   357,   358,   359,   360,   361,
     362,   594,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   595,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,     0,   390,
     391,   392,   393,   596,   395,   396,   597,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   598,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   599,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   600,   460,
     461,   462,   463,     0,   464,   601,   466,   467,  2422,  1006,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1960,
    1961,     0,     0,     0,     0,     0,     0,     0,  2423,     0,
    2424,     0,  2425,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,    48,    49,   565,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   568,    78,    79,    80,    81,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,    94,    95,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   573,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   578,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     579,   580,   175,     0,   176,   177,   178,   581,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   344,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,   359,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   595,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   600,   460,   461,   462,   463,     0,   464,
     601,   466,   467,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,   565,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   581,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   600,   460,   461,
     462,   463,     0,   464,   601,   466,   467,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,  3411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,    48,    49,   565,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
     566,     0,   567,   568,    78,    79,    80,    81,    82,    83,
     569,    85,    86,    87,    88,   570,    89,   571,    91,    92,
      93,    94,    95,   572,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   573,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   574,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   575,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   576,   144,   145,   146,   147,   577,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   578,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   579,   580,
     175,     0,   176,   177,   178,   581,   180,   181,   182,   582,
     184,   185,   583,   187,   188,   584,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     585,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     586,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   587,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   588,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   344,   592,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   593,   356,   357,   358,
     359,   360,   361,   362,   594,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   595,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   596,   395,   396,   597,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   598,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   599,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   600,   460,   461,   462,   463,     0,   464,   601,   466,
     467,  1960,  1961,     0,     0,     0,     0,     0,     0,     0,
       0,  4576,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    47,    48,    49,   565,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,   566,     0,   567,   568,    78,    79,
      80,    81,    82,    83,   569,    85,    86,    87,    88,   570,
      89,   571,    91,    92,    93,    94,    95,   572,    96,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   573,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   574,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   575,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   576,   144,
     145,   146,   147,   577,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   578,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   579,   580,   175,     0,   176,   177,   178,   581,
     180,   181,   182,   582,   184,   185,   583,   187,   188,   584,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   585,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   586,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   587,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   588,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   344,
     592,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     593,   356,   357,   358,   359,   360,   361,   362,   594,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     595,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     596,   395,   396,   597,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   598,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   599,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   600,   460,   461,   462,   463,
       0,   464,   601,   466,   467,  1960,  1961,     0,     0,     0,
       0,     0,     0,     0,     0,  4737,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,    48,    49,   565,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,   566,     0,
     567,   568,    78,    79,    80,    81,    82,    83,   569,    85,
      86,    87,    88,   570,    89,   571,    91,    92,    93,    94,
      95,   572,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   573,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   574,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     575,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   576,   144,   145,   146,   147,   577,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   578,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   579,   580,   175,     0,
     176,   177,   178,   581,   180,   181,   182,   582,   184,   185,
     583,   187,   188,   584,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   585,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   586,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   587,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   588,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   344,   592,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   593,   356,   357,   358,   359,   360,
     361,   362,   594,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   595,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   596,   395,   396,   597,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     598,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     599,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   600,
     460,   461,   462,   463,     0,   464,   601,   466,   467,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,  5416,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,    48,    49,   565,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   568,    78,    79,    80,    81,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,    94,    95,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   573,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   578,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     579,   580,   175,     0,   176,   177,   178,   581,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   344,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,   359,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   595,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   600,   460,   461,   462,   463,     0,   464,
     601,   466,   467,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,  5664,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,   565,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   581,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   600,   460,   461,
     462,   463,     0,   464,   601,   466,   467,     4,     5,     0,
       0,     0,     0,     0,  3393,     0,     0,  5974,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   709,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   710,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4047,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4048,     0,   680,
       0,  4049,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,    48,    49,   565,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
     566,     0,   567,   568,    78,    79,    80,    81,    82,    83,
     569,    85,    86,    87,    88,   570,    89,   571,    91,    92,
      93,    94,    95,   572,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   573,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   574,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   575,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   576,   144,   145,   146,   147,   577,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   578,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   579,   580,
     175,     0,   176,   177,   178,   581,   180,   181,   182,   582,
     184,   185,   583,   187,   188,   584,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     585,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     586,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   587,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   588,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   344,   592,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   593,   356,   357,   358,
     359,   360,   361,   362,   594,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   595,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   596,   395,   396,   597,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   598,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   599,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   600,   460,   461,   462,   463,     0,   464,   601,   466,
     467,     4,     5,   813,     0,     0,     0,     0,     0,     0,
    3394,     0,     0,   715,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1460,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2175,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    47,    48,    49,   565,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,   566,     0,   567,   568,    78,    79,
      80,    81,    82,    83,   569,    85,    86,    87,    88,   570,
      89,   571,    91,    92,    93,    94,    95,   572,    96,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   573,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   574,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   575,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   576,   144,
     145,   146,   147,   577,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   578,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   579,   580,   175,     0,   176,   177,   178,   581,
     180,   181,   182,   582,   184,   185,   583,   187,   188,   584,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   585,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   586,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   587,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   588,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   344,
     592,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     593,   356,   357,   358,   359,   360,   361,   362,   594,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     595,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     596,   395,   396,   597,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   598,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   599,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   600,   460,   461,   462,   463,
       0,   464,   601,   466,   467,     4,     5,   813,  1461,     0,
       0,     0,     0,     0,     0,     0,     0,   715,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1460,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,    48,    49,   565,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,   566,     0,
     567,   568,    78,    79,    80,    81,    82,    83,   569,    85,
      86,    87,    88,   570,    89,   571,    91,    92,    93,    94,
      95,   572,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   573,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   574,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     575,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   576,   144,   145,   146,   147,   577,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   578,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   579,   580,   175,     0,
     176,   177,   178,   581,   180,   181,   182,   582,   184,   185,
     583,   187,   188,   584,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   585,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   586,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   587,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   588,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   344,   592,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   593,   356,   357,   358,   359,   360,
     361,   362,   594,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   595,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   596,   395,   396,   597,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     598,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     599,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   600,
     460,   461,   462,   463,     0,   464,   601,   466,   467,     4,
       5,     0,  1461,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1520,  1521,  1522,  1523,  1524,
    1525,  1526,  1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,
    1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,  1544,
    1545,  1546,  1547,  1548,     0,  1549,  1550,  1551,  1552,  1553,
    1554,  1555,  1556,  1557,  1558,  1559,     0,  1560,  1561,  1562,
    1563,  1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,
    1573,  1574,  1575,  1576,  1577,  1578,  1579,  1580,  1581,  1582,
    1583,  1584,  1585,  1586,  1587,  1588,  1589,  1590,  1591,  1592,
    1593,  1594,  1595,  1596,  1597,  1598,     0,  1599,  1600,  1601,
    1602,  1603,     0,     0,  1604,  1605,  1606,  1607,  1608,  1609,
    1610,  1611,  1612,  1613,  1614,     0,  1615,  1616,     0,  1617,
    1618,  1619,  1620,  1621,  1622,  1623,  1624,  1625,  1626,  1627,
    1628,  1629,  1630,  1631,  1632,  1633,  1634,  1635,  1636,  1637,
    1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,  1646,  1647,
    1648,  1649,  1650,  1651,  1652,  1653,  1654,  1655,  1656,  1657,
    1658,  1659,  1660,  1661,  1662,  1663,  1664,  1665,  1666,  1667,
    1668,  1669,  1670,  1671,  1672,  1673,     0,  1674,  1675,  1676,
    1677,  1678,  1679,  1680,  1681,  1682,  1683,  1684,  1685,  1686,
    1687,  1688,  1689,  1690,  1691,  1692,  1693,  1694,  1695,  1696,
    1697,  1698,  1699,  1700,  1701,  1702,  1703,  1704,  1705,  1706,
    1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,  1715,  1716,
    1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,
    1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,  1735,  1736,
    1737,  1738,  1739,  1740,  1741,  1742,  1743,  1744,  1745,  1746,
    1747,  1748,  1749,  1750,  1751,  1752,  1753,  1754,  1755,  1756,
    1757,     0,  1758,  1759,  1760,  1761,  1762,  1763,  1764,  1765,
    1766,  1767,  1768,  1769,  1770,  1771,  1772,  1773,  1774,  1775,
    1776,  1777,  1778,  1779,    47,    48,    49,     0,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   568,  1780,    79,  1781,  1782,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,     0,  1783,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   573,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
    1784,   129,  1785,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,  1786,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   578,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,  1787,
     579,   580,   175,     0,   176,   177,   178,     0,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
    1788,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
    1789,  1790,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,     0,  1791,  1792,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,  1793,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   344,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,  1794,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,     0,   371,   372,   373,   374,   595,     0,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,  1795,   419,   420,  1796,   422,   423,  1797,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,     0,  1798,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,  1799,   460,   461,   462,   463,     0,   464,
     601,   466,  1800,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1520,
    1521,  1522,  1523,  1524,  1525,  1526,  1527,  1528,  1529,  1530,
    1531,  1532,  1533,  1534,  1535,  1536,  1537,  1538,  1539,  1540,
    1541,  1542,  1543,  1544,  1545,  1546,  1547,  1548,     0,  1549,
    1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,  1558,  1559,
       0,  1560,  1561,  1562,  1563,  1564,  1565,  1566,  1567,  1568,
    1569,  1570,  1571,  1572,  1573,  1574,  1575,  1576,  1577,  1578,
    1579,  1580,  1581,  1582,  1583,  1584,  1585,  1586,  1587,  1588,
    1589,  1590,  1591,  1592,  1593,  1594,  1595,  1596,  1597,  1598,
       0,  1599,  1600,  1601,  1602,  1603,     0,     0,  1604,  1605,
    1606,  1607,  1608,  1609,  1610,  1611,  1612,  1613,  1614,     0,
    1615,  1616,     0,  1617,  1618,  1619,  1620,  1621,  1622,  1623,
    1624,  1625,  1626,  1627,  1628,  1629,  1630,  1631,  1632,  1633,
    1634,  1635,  1636,  1637,  1638,  1639,  1640,  1641,  1642,  1643,
    1644,  1645,  1646,  1647,  1648,  1649,  1650,  1651,  1652,  1653,
    1654,  1655,  1656,  1657,  1658,  1659,  1660,  1661,  1662,  1663,
    1664,  1665,  1666,  1667,  1668,  1669,  1670,  1671,  1672,  1673,
       0,  1674,  1675,  1676,  1677,  1678,  1679,  1680,  1681,  1682,
    1683,  1684,  1685,  1686,  1687,  1688,  1689,  1690,  1691,  1692,
    1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,  1701,  1702,
    1703,  1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,
    1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,  1722,
    1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,  1732,
    1733,  1734,  1735,  1736,  1737,  1738,  1739,  1740,  1741,  1742,
    1743,  1744,  1745,  1746,  1747,  1748,  1749,  1750,  1751,  1752,
    1753,  1754,  1755,  1756,  1757,     0,  1758,  1759,  1760,  1761,
    1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,
    1772,  1773,  1774,  1775,  1776,  1777,  1778,  1779,    47,    48,
      49,     0,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
    1780,    79,  1781,  1782,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,     0,  1783,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,  1784,   129,  1785,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,  1786,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,  1787,   579,   580,   175,     0,   176,   177,
     178,     0,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,  1788,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,     0,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,  1789,  1790,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
       0,  1791,  1792,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,  1793,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,  4542,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,     0,   371,   372,
     373,   374,   595,     0,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,  1795,   419,   420,  1796,
     422,   423,  1797,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,     0,  1798,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,  1799,   460,   461,
     462,   463,     0,   464,   601,   466,  1800,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1520,  1521,  1522,  1523,  1524,  1525,  1526,
    1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,  1535,  1536,
    1537,  1538,  1539,  1540,  1541,  1542,  1543,  1544,  1545,  1546,
    1547,  1548,     0,  1549,  1550,  1551,  1552,  1553,  1554,  1555,
    1556,  1557,  1558,  1559,     0,  1560,  1561,  1562,  1563,  1564,
    1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,
    1575,  1576,  1577,  1578,  1579,  1580,  1581,  1582,  1583,  1584,
    1585,  1586,  1587,  1588,  1589,  1590,  1591,  1592,  1593,  1594,
    1595,  1596,  1597,  1598,     0,  1599,  1600,  1601,  1602,  1603,
       0,     0,  1604,  1605,  1606,  1607,  1608,  1609,  1610,  1611,
    1612,  1613,  1614,     0,  1615,  1616,     0,  1617,  1618,  1619,
    1620,  1621,  1622,  1623,  1624,  1625,  1626,  1627,  1628,  1629,
    1630,  1631,  1632,  1633,  1634,  1635,  1636,  1637,  1638,  1639,
    1640,  1641,  1642,  1643,  1644,  1645,  1646,  1647,  1648,  1649,
    1650,  1651,  1652,  1653,  1654,  1655,  1656,  1657,  1658,  1659,
    1660,  1661,  1662,  1663,  1664,  1665,  1666,  1667,  1668,  1669,
    1670,  1671,  1672,  1673,     0,  1674,  1675,  1676,  1677,  1678,
    1679,  1680,  1681,  1682,  1683,  1684,  1685,  1686,  1687,  1688,
    1689,  1690,  1691,  1692,  1693,  1694,  1695,  1696,  1697,  1698,
    1699,  1700,  1701,  1702,  1703,  1704,  1705,  1706,  1707,  1708,
    1709,  1710,  1711,  1712,  1713,  1714,  1715,  1716,  1717,  1718,
    1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,  1727,  1728,
    1729,  1730,  1731,  1732,  1733,  1734,  1735,  1736,  1737,  1738,
    1739,  1740,  1741,  1742,  1743,  1744,  1745,  1746,  1747,  1748,
    1749,  1750,  1751,  1752,  1753,  1754,  1755,  1756,  1757,     0,
    1758,  1759,  1760,  1761,  1762,  1763,  1764,  1765,  1766,  1767,
    1768,  1769,  1770,  1771,  1772,  1773,  1774,  1775,  1776,  1777,
    1778,  1779,    47,    48,    49,     0,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
     566,     0,   567,   568,  1780,    79,  1781,  1782,    82,    83,
     569,    85,    86,    87,    88,   570,    89,   571,    91,    92,
      93,     0,  1783,   572,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   573,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   574,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,  1784,   129,
    1785,   131,   575,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   576,   144,   145,   146,   147,   577,
     148,   149,   150,  1786,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   578,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,  1787,   579,   580,
     175,     0,   176,   177,   178,     0,   180,   181,   182,   582,
     184,   185,   583,   187,   188,   584,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     585,   204,   205,   206,   207,   208,   209,   210,  1788,   212,
     586,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
       0,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,  1789,  1790,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   587,
     281,   282,   283,   284,     0,  1791,  1792,   288,   289,   290,
     291,   292,   293,   588,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,  1793,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   344,   592,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   593,   356,   357,   358,
       0,   360,   361,   362,   594,   364,   365,   366,   367,   368,
     369,  5699,   371,   372,   373,   374,   595,     0,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   596,   395,   396,   597,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
    1795,   419,   420,  1796,   422,   423,  1797,   425,   426,   427,
     428,   429,   598,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   599,   441,   442,   443,   444,   445,   446,     0,
    1798,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,  1799,   460,   461,   462,   463,     0,   464,   601,   466,
    1800,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1520,  1521,  1522,
    1523,  1524,  1525,  1526,  1527,  1528,  1529,  1530,  1531,  1532,
    1533,  1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,
    1543,  1544,  1545,  1546,  1547,  1548,     0,  1549,  1550,  1551,
    1552,  1553,  1554,  1555,  1556,  1557,  1558,  1559,     0,  1560,
    1561,  1562,  1563,  1564,  1565,  1566,  1567,  1568,  1569,  1570,
    1571,  1572,  1573,  1574,  1575,  1576,  1577,  1578,  1579,  1580,
    1581,  1582,  1583,  1584,  1585,  1586,  1587,  1588,  1589,  1590,
    1591,  1592,  1593,  1594,  1595,  1596,  1597,  1598,     0,  1599,
    1600,  1601,  1602,  1603,     0,     0,  1604,  1605,  1606,  1607,
    1608,  1609,  1610,  1611,  1612,  1613,  1614,     0,  1615,  1616,
       0,  1617,  1618,  1619,  1620,  1621,  1622,  1623,  1624,  1625,
    1626,  1627,  1628,  1629,  1630,  1631,  1632,  1633,  1634,  1635,
    1636,  1637,  1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,
    1646,  1647,  1648,  1649,  1650,  1651,  1652,  1653,  1654,  1655,
    1656,  1657,  1658,  1659,  1660,  1661,  1662,  1663,  1664,  1665,
    1666,  1667,  1668,  1669,  1670,  1671,  1672,  1673,     0,  1674,
    1675,  1676,  1677,  1678,  1679,  1680,  1681,  1682,  1683,  1684,
    1685,  1686,  1687,  1688,  1689,  1690,  1691,  1692,  1693,  1694,
    1695,  1696,  1697,  1698,  1699,  1700,  1701,  1702,  1703,  1704,
    1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,
    1715,  1716,  1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,
    1725,  1726,  1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,
    1735,  1736,  1737,  1738,  1739,  1740,  1741,  1742,  1743,  1744,
    1745,  1746,  1747,  1748,  1749,  1750,  1751,  1752,  1753,  1754,
    1755,  1756,  1757,     0,  1758,  1759,  1760,  1761,  1762,  1763,
    1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,  1772,  1773,
    1774,  1775,  1776,  1777,  1778,  1779,    47,    48,    49,     0,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,   566,     0,   567,   568,  1780,    79,
    1781,  1782,    82,    83,   569,    85,    86,    87,    88,   570,
      89,   571,    91,    92,    93,     0,  1783,   572,    96,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   573,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   574,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,  1784,   129,  1785,   131,   575,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   576,   144,
     145,   146,   147,   577,   148,   149,   150,  1786,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   578,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,  1787,   579,   580,   175,     0,   176,   177,   178,     0,
     180,   181,   182,   582,   184,   185,   583,   187,   188,   584,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   585,   204,   205,   206,   207,   208,
     209,   210,  1788,   212,   586,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,     0,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,  1789,  1790,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   587,   281,   282,   283,   284,     0,  1791,
    1792,   288,   289,   290,   291,   292,   293,   588,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,  1793,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   344,
     592,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     593,   356,   357,   358,  5886,   360,   361,   362,   594,   364,
     365,   366,   367,   368,   369,     0,   371,   372,   373,   374,
     595,     0,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     596,   395,   396,   597,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,  1795,   419,   420,  1796,   422,   423,
    1797,   425,   426,   427,   428,   429,   598,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   599,   441,   442,   443,
     444,   445,   446,     0,  1798,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,  1799,   460,   461,   462,   463,
       0,   464,   601,   466,  1800,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1520,  1521,  1522,  1523,  1524,  1525,  1526,  1527,  1528,
    1529,  1530,  1531,  1532,  1533,  1534,  1535,  1536,  1537,  1538,
    1539,  1540,  1541,  1542,  1543,  1544,  1545,  1546,  1547,  1548,
       0,  1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,
    1558,  1559,     0,  1560,  1561,  1562,  1563,  1564,  1565,  1566,
    1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,  1576,
    1577,  1578,  1579,  1580,  1581,  1582,  1583,  1584,  1585,  1586,
    1587,  1588,  1589,  1590,  1591,  1592,  1593,  1594,  1595,  1596,
    1597,  1598,     0,  1599,  1600,  1601,  1602,  1603,     0,     0,
    1604,  1605,  1606,  1607,  1608,  1609,  1610,  1611,  1612,  1613,
    1614,     0,  1615,  1616,     0,  1617,  1618,  1619,  1620,  1621,
    1622,  1623,  1624,  1625,  1626,  1627,  1628,  1629,  1630,  1631,
    1632,  1633,  1634,  1635,  1636,  1637,  1638,  1639,  1640,  1641,
    1642,  1643,  1644,  1645,  1646,  1647,  1648,  1649,  1650,  1651,
    1652,  1653,  1654,  1655,  1656,  1657,  1658,  1659,  1660,  1661,
    1662,  1663,  1664,  1665,  1666,  1667,  1668,  1669,  1670,  1671,
    1672,  1673,     0,  1674,  1675,  1676,  1677,  1678,  1679,  1680,
    1681,  1682,  1683,  1684,  1685,  1686,  1687,  1688,  1689,  1690,
    1691,  1692,  1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,
    1701,  1702,  1703,  1704,  1705,  1706,  1707,  1708,  1709,  1710,
    1711,  1712,  1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,
    1721,  1722,  1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,
    1731,  1732,  1733,  1734,  1735,  1736,  1737,  1738,  1739,  1740,
    1741,  1742,  1743,  1744,  1745,  1746,  1747,  1748,  1749,  1750,
    1751,  1752,  1753,  1754,  1755,  1756,  1757,     0,  1758,  1759,
    1760,  1761,  1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,
    1770,  1771,  1772,  1773,  1774,  1775,  1776,  1777,  1778,  1779,
      47,    48,    49,     0,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,   566,     0,
     567,   568,  1780,    79,  1781,  1782,    82,    83,   569,    85,
      86,    87,    88,   570,    89,   571,    91,    92,    93,     0,
    1783,   572,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   573,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   574,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,  1784,   129,  1785,   131,
     575,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   576,   144,   145,   146,   147,   577,   148,   149,
     150,  1786,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   578,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,  1787,   579,   580,   175,     0,
     176,   177,   178,     0,   180,   181,   182,   582,   184,   185,
     583,   187,   188,   584,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   585,   204,
     205,   206,   207,   208,   209,   210,  1788,   212,   586,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,  1789,  1790,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   587,   281,   282,
     283,   284,     0,  1791,  1792,   288,   289,   290,   291,   292,
     293,   588,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,  1793,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   344,   592,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   593,   356,   357,   358,     0,   360,
     361,   362,   594,   364,   365,   366,   367,   368,   369,     0,
     371,   372,   373,   374,   595,     0,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   596,   395,   396,   597,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,  1795,   419,
     420,  1796,   422,   423,  1797,   425,   426,   427,   428,   429,
     598,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     599,   441,   442,   443,   444,   445,   446,     0,  1798,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,     0,
     460,   461,   462,   463,     0,   464,   601,   466,  1800,     4,
       5,   813,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   715,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   913,   914,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     915,     0,     0,     0,   916,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   917,     0,     0,     0,     0,     0,     0,     0,     0,
     918,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     919,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   920,     0,     0,     0,     0,   921,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     922,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   923,     0,     0,     0,   924,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   925,     0,
       0,     0,   926,   927,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   928,     0,     0,     0,     0,     0,
       0,     0,   929,   930,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,    48,    49,   565,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   931,    78,    79,    80,    81,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,    94,    95,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   573,
     109,   110,   111,   112,   932,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,   151,   152,   153,   154,   155,
     933,   157,   158,   159,   160,   934,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   935,   936,   172,   173,
     579,   580,   175,     0,   176,   177,   178,   581,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     937,   318,   319,   320,   938,   322,   323,   324,   325,   326,
     939,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   940,   339,   340,   591,   342,   343,   941,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,   359,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   942,   376,
     377,   943,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     944,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   600,   460,   461,   462,   463,     0,   464,
     601,   466,   467,     4,     5,   813,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   715,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1204,   914,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   915,     0,     0,     0,   916,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   917,     0,     0,     0,     0,
       0,     0,     0,     0,   918,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   919,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   920,     0,     0,     0,
       0,   921,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   922,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   923,
       0,     0,     0,   924,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   925,     0,     0,     0,   926,   927,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   928,     0,
       0,     0,     0,     0,     0,     0,   929,   930,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,   565,    50,    51,    52,    53,    54,    55,    56,  1205,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   931,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   932,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   933,   157,   158,   159,   160,   934,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     935,   936,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   581,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   937,   318,   319,   320,  1206,   322,
     323,   324,   325,   326,   939,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   940,   339,   340,   591,   342,
     343,   941,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   942,   376,   377,   943,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   944,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   600,   460,   461,
     462,   463,     0,   464,   601,   466,   467,     4,     5,     0,
       0,     0,  2731,  2732,  4434,     0,  4435,     0,  4436,   715,
    4437,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5504,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,    48,    49,   565,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
     566,     0,   567,   568,    78,    79,    80,    81,    82,    83,
     569,    85,    86,    87,    88,   570,    89,   571,    91,    92,
      93,    94,    95,   572,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   573,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   574,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   575,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   576,   144,   145,   146,   147,   577,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   578,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   579,   580,
     175,     0,   176,   177,   178,   581,   180,   181,   182,   582,
     184,   185,   583,   187,   188,   584,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     585,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     586,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   587,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   588,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   344,   592,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   593,   356,   357,   358,
     359,   360,   361,   362,   594,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   595,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   596,   395,   396,   597,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   598,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   599,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   600,   460,   461,   462,   463,     0,   464,   601,   466,
     467,     4,     5,     0,     0,     0,  2731,  2732,  4434,     0,
    4435,     0,  4436,   715,  4437,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  6243,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    47,    48,    49,   565,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,   566,     0,   567,   568,    78,    79,
      80,    81,    82,    83,   569,    85,    86,    87,    88,   570,
      89,   571,    91,    92,    93,    94,    95,   572,    96,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   573,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   574,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   575,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   576,   144,
     145,   146,   147,   577,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   578,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   579,   580,   175,     0,   176,   177,   178,   581,
     180,   181,   182,   582,   184,   185,   583,   187,   188,   584,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   585,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   586,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   587,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   588,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   344,
     592,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     593,   356,   357,   358,   359,   360,   361,   362,   594,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     595,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     596,   395,   396,   597,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   598,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   599,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   600,   460,   461,   462,   463,
       0,   464,   601,   466,   467,     4,     5,     0,     0,     0,
    2731,  2732,  4434,     0,  4435,     0,  4436,   715,  4437,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  6291,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,    48,    49,   565,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,   566,     0,
     567,   568,    78,    79,    80,    81,    82,    83,   569,    85,
      86,    87,    88,   570,    89,   571,    91,    92,    93,    94,
      95,   572,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   573,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   574,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     575,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   576,   144,   145,   146,   147,   577,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   578,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   579,   580,   175,     0,
     176,   177,   178,   581,   180,   181,   182,   582,   184,   185,
     583,   187,   188,   584,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   585,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   586,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   587,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   588,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   344,   592,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   593,   356,   357,   358,   359,   360,
     361,   362,   594,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   595,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   596,   395,   396,   597,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     598,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     599,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   600,
     460,   461,   462,   463,     0,   464,   601,   466,   467,     4,
       5,   813,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   715,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   916,  1470,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,    48,    49,   565,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   568,    78,    79,    80,    81,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,    94,    95,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   573,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   578,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     579,   580,   175,     0,   176,   177,   178,   581,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   344,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,   359,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   595,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   600,   460,   461,   462,   463,     0,   464,
     601,   466,   467,     4,     5,   813,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   715,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2190,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2191,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,   565,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   581,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   600,   460,   461,
     462,   463,     0,   464,   601,   466,   467,     4,     5,     0,
       0,  1359,     0,     0,  1360,  1361,     0,     0,     0,  1362,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,    48,    49,   565,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
     566,     0,   567,   568,    78,    79,    80,    81,    82,    83,
     569,    85,    86,    87,    88,   570,    89,   571,    91,    92,
      93,    94,    95,   572,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   573,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   574,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   575,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   576,   144,   145,   146,   147,   577,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   578,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   579,   580,
     175,     0,   176,   177,   178,   581,   180,   181,   182,   582,
     184,   185,   583,   187,   188,   584,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     585,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     586,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   587,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   588,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   344,   592,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   593,   356,   357,   358,
     359,   360,   361,   362,   594,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   595,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   596,   395,   396,   597,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   598,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   599,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   600,   460,   461,   462,   463,     0,   464,   601,   466,
     467,     4,     5,   813,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   715,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2175,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    47,    48,    49,   565,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,   566,     0,   567,   568,    78,    79,
      80,    81,    82,    83,   569,    85,    86,    87,    88,   570,
      89,   571,    91,    92,    93,    94,    95,   572,    96,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   573,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   574,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   575,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   576,   144,
     145,   146,   147,   577,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   578,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   579,   580,   175,     0,   176,   177,   178,   581,
     180,   181,   182,   582,   184,   185,   583,   187,   188,   584,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   585,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   586,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   587,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   588,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   344,
     592,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     593,   356,   357,   358,   359,   360,   361,   362,   594,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     595,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     596,   395,   396,   597,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   598,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   599,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   600,   460,   461,   462,   463,
       0,   464,   601,   466,   467,     4,     5,   813,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   715,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1470,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,    48,    49,   565,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,   566,     0,
     567,   568,    78,    79,    80,    81,    82,    83,   569,    85,
      86,    87,    88,   570,    89,   571,    91,    92,    93,    94,
      95,   572,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   573,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   574,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     575,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   576,   144,   145,   146,   147,   577,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   578,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   579,   580,   175,     0,
     176,   177,   178,   581,   180,   181,   182,   582,   184,   185,
     583,   187,   188,   584,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   585,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   586,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   587,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   588,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   344,   592,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   593,   356,   357,   358,   359,   360,
     361,   362,   594,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   595,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   596,   395,   396,   597,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     598,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     599,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   600,
     460,   461,   462,   463,     0,   464,   601,   466,   467,     4,
       5,   813,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   715,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2225,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,    48,    49,   565,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   568,    78,    79,    80,    81,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,    94,    95,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   573,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   578,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     579,   580,   175,     0,   176,   177,   178,   581,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   344,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,   359,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   595,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   600,   460,   461,   462,   463,     0,   464,
     601,   466,   467,     4,     5,   813,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   715,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   916,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,   565,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   581,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   600,   460,   461,
     462,   463,     0,   464,   601,   466,   467,     4,     5,   813,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   715,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3344,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,    48,    49,   565,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
     566,     0,   567,   568,    78,    79,    80,    81,    82,    83,
     569,    85,    86,    87,    88,   570,    89,   571,    91,    92,
      93,    94,    95,   572,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   573,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   574,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   575,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   576,   144,   145,   146,   147,   577,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   578,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   579,   580,
     175,     0,   176,   177,   178,   581,   180,   181,   182,   582,
     184,   185,   583,   187,   188,   584,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     585,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     586,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   587,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   588,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   344,   592,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   593,   356,   357,   358,
     359,   360,   361,   362,   594,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   595,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   596,   395,   396,   597,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   598,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   599,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   600,   460,   461,   462,   463,     0,   464,   601,   466,
     467,     4,     5,   813,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   715,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2175,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    47,    48,    49,   565,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,   566,     0,   567,   568,    78,    79,
      80,    81,    82,    83,   569,    85,    86,    87,    88,   570,
      89,   571,    91,    92,    93,    94,    95,   572,    96,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   573,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   574,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   575,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   576,   144,
     145,   146,   147,   577,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   578,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   579,   580,   175,     0,   176,   177,   178,   581,
     180,   181,   182,   582,   184,   185,   583,   187,   188,   584,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   585,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   586,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   587,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   588,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   344,
     592,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     593,   356,   357,   358,   359,   360,   361,   362,   594,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     595,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     596,   395,   396,   597,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   598,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   599,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   600,   460,   461,   462,   463,
       0,   464,   601,   466,   467,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   679,     0,
       0,     0,     0,     0,     0,     0,     0,   680,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,    48,    49,   565,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,   566,     0,
     567,   568,    78,    79,    80,    81,    82,    83,   569,    85,
      86,    87,    88,   570,    89,   571,    91,    92,    93,    94,
      95,   572,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   573,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   574,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     575,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   576,   144,   145,   146,   147,   577,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   578,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   579,   580,   175,     0,
     176,   177,   178,   581,   180,   181,   182,   582,   184,   185,
     583,   187,   188,   584,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   585,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   586,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   587,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   588,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   344,   592,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   593,   356,   357,   358,   359,   360,
     361,   362,   594,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   595,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   596,   395,   396,   597,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     598,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     599,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   600,
     460,   461,   462,   463,     0,   464,   601,   466,   467,     4,
       5,   813,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   715,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,    48,    49,   565,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   568,    78,    79,    80,    81,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,    94,    95,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   573,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   578,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     579,   580,   175,     0,   176,   177,   178,   581,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   344,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,   359,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   595,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   600,   460,   461,   462,   463,     0,   464,
     601,   466,   467,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     857,   858,     0,     0,     0,     0,     0,     0,     0,     0,
     859,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,     0,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,     0,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,     0,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,   860,   861,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   179,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   862,   460,   461,
     462,   463,     0,   464,   601,   466,   467,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1930,     0,     0,     0,     0,
       0,     0,  1931,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,    48,    49,   565,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
     566,     0,   567,   568,    78,    79,    80,    81,    82,    83,
     569,    85,    86,    87,    88,   570,    89,   571,    91,    92,
      93,    94,    95,   572,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   573,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   574,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   575,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   576,   144,   145,   146,   147,   577,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   578,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   579,   580,
     175,     0,   176,   177,   178,   581,   180,   181,   182,   582,
     184,   185,   583,   187,   188,   584,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     585,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     586,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,  1932,   275,   276,   277,   278,   279,   280,   587,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   588,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   344,   592,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   593,   356,   357,   358,
     359,   360,   361,   362,   594,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   595,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   596,   395,   396,   597,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   598,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   599,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   600,   460,   461,   462,   463,     0,   464,   601,   466,
     467,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   715,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4733,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    47,    48,    49,   565,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,   566,     0,   567,   568,    78,    79,
      80,    81,    82,    83,   569,    85,    86,    87,    88,   570,
      89,   571,    91,    92,    93,    94,    95,   572,    96,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   573,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   574,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   575,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   576,   144,
     145,   146,   147,   577,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   578,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   579,   580,   175,     0,   176,   177,   178,   581,
     180,   181,   182,   582,   184,   185,   583,   187,   188,   584,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   585,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   586,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   587,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   588,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   344,
     592,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     593,   356,   357,   358,   359,   360,   361,   362,   594,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     595,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     596,   395,   396,   597,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   598,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   599,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   600,   460,   461,   462,   463,
       0,   464,   601,   466,   467,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   680,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,    48,    49,   565,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,   566,     0,
     567,   568,    78,    79,    80,    81,    82,    83,   569,    85,
      86,    87,    88,   570,    89,   571,    91,    92,    93,    94,
      95,   572,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   573,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   574,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     575,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   576,   144,   145,   146,   147,   577,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   578,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   579,   580,   175,     0,
     176,   177,   178,   581,   180,   181,   182,   582,   184,   185,
     583,   187,   188,   584,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   585,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   586,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   587,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   588,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   344,   592,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   593,   356,   357,   358,   359,   360,
     361,   362,   594,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   595,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   596,   395,   396,   597,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     598,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     599,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   600,
     460,   461,   462,   463,     0,   464,   601,   466,   467,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1839,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,    48,    49,   565,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   568,    78,    79,    80,    81,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,    94,    95,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   573,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   578,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     579,   580,   175,     0,   176,   177,   178,   581,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   344,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,   359,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   595,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   600,   460,   461,   462,   463,     0,   464,
     601,   466,   467,  1960,  1961,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1962,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,   565,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   581,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   600,   460,   461,
     462,   463,     0,   464,   601,   466,   467,  1960,  1961,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2185,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,    48,    49,   565,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
     566,     0,   567,   568,    78,    79,    80,    81,    82,    83,
     569,    85,    86,    87,    88,   570,    89,   571,    91,    92,
      93,    94,    95,   572,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   573,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   574,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   575,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   576,   144,   145,   146,   147,   577,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   578,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   579,   580,
     175,     0,   176,   177,   178,   581,   180,   181,   182,   582,
     184,   185,   583,   187,   188,   584,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     585,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     586,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   587,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   588,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   344,   592,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   593,   356,   357,   358,
     359,   360,   361,   362,   594,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   595,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   596,   395,   396,   597,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   598,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   599,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   600,   460,   461,   462,   463,     0,   464,   601,   466,
     467,  1960,  1961,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3003,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    47,    48,    49,   565,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,   566,     0,   567,   568,    78,    79,
      80,    81,    82,    83,   569,    85,    86,    87,    88,   570,
      89,   571,    91,    92,    93,    94,    95,   572,    96,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   573,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   574,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   575,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   576,   144,
     145,   146,   147,   577,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   578,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   579,   580,   175,     0,   176,   177,   178,   581,
     180,   181,   182,   582,   184,   185,   583,   187,   188,   584,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   585,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   586,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   587,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   588,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   344,
     592,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     593,   356,   357,   358,   359,   360,   361,   362,   594,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     595,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     596,   395,   396,   597,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,  3004,   426,   427,   428,   429,   598,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   599,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   600,   460,   461,   462,   463,
       0,   464,   601,   466,   467,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3015,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,    48,    49,   565,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,   566,     0,
     567,   568,    78,    79,    80,    81,    82,    83,   569,    85,
      86,    87,    88,   570,    89,   571,    91,    92,    93,    94,
      95,   572,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   573,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   574,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     575,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   576,   144,   145,   146,   147,   577,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   578,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   579,   580,   175,     0,
     176,   177,   178,   581,   180,   181,   182,   582,   184,   185,
     583,   187,   188,   584,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   585,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   586,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   587,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   588,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   344,   592,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   593,   356,   357,   358,   359,   360,
     361,   362,   594,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   595,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   596,   395,   396,   597,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     598,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     599,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   600,
     460,   461,   462,   463,     0,   464,   601,   466,   467,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3770,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,    48,    49,   565,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   568,    78,    79,    80,    81,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,    94,    95,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   573,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   578,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     579,   580,   175,     0,   176,   177,   178,   581,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   344,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,   359,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   595,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   600,   460,   461,   462,   463,     0,   464,
     601,   466,   467,  1960,  1961,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3003,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,   565,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   581,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   600,   460,   461,
     462,   463,     0,   464,   601,   466,   467,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4776,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,    48,    49,   565,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
     566,     0,   567,   568,    78,    79,    80,    81,    82,    83,
     569,    85,    86,    87,    88,   570,    89,   571,    91,    92,
      93,    94,    95,   572,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   573,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   574,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   575,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   576,   144,   145,   146,   147,   577,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   578,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   579,   580,
     175,     0,   176,   177,   178,   581,   180,   181,   182,   582,
     184,   185,   583,   187,   188,   584,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     585,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     586,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   587,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   588,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   344,   592,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   593,   356,   357,   358,
     359,   360,   361,   362,   594,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   595,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   596,   395,   396,   597,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   598,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   599,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   600,   460,   461,   462,   463,     0,   464,   601,   466,
     467,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   715,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    47,    48,    49,   565,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,   566,     0,   567,   568,    78,    79,
      80,    81,    82,    83,   569,    85,    86,    87,    88,   570,
      89,   571,    91,    92,    93,    94,    95,   572,    96,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   573,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   574,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   575,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   576,   144,
     145,   146,   147,   577,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   578,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   579,   580,   175,     0,   176,   177,   178,   581,
     180,   181,   182,   582,   184,   185,   583,   187,   188,   584,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   585,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   586,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   587,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   588,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   344,
     592,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     593,   356,   357,   358,   359,   360,   361,   362,   594,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     595,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     596,   395,   396,   597,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   598,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   599,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   600,   460,   461,   462,   463,
       0,   464,   601,   466,   467,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5141,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,    48,    49,   565,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,   566,     0,
     567,   568,    78,    79,    80,    81,    82,    83,   569,    85,
      86,    87,    88,   570,    89,   571,    91,    92,    93,    94,
      95,   572,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   573,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   574,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     575,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   576,   144,   145,   146,   147,   577,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   578,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   579,   580,   175,     0,
     176,   177,   178,   581,   180,   181,   182,   582,   184,   185,
     583,   187,   188,   584,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   585,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   586,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   587,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   588,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   344,   592,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   593,   356,   357,   358,   359,   360,
     361,   362,   594,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   595,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   596,   395,   396,   597,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     598,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     599,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   600,
     460,   461,   462,   463,     0,   464,   601,   466,   467,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5577,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,    48,    49,   565,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   568,    78,    79,    80,    81,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,    94,    95,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   573,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   578,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     579,   580,   175,     0,   176,   177,   178,   581,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   344,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,   359,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   595,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   600,   460,   461,   462,   463,     0,   464,
     601,   466,   467,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5587,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,   565,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   581,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   600,   460,   461,
     462,   463,     0,   464,   601,   466,   467,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5938,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,    48,    49,   565,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
     566,     0,   567,   568,    78,    79,    80,    81,    82,    83,
     569,    85,    86,    87,    88,   570,    89,   571,    91,    92,
      93,    94,    95,   572,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   573,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   574,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   575,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   576,   144,   145,   146,   147,   577,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   578,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   579,   580,
     175,     0,   176,   177,   178,   581,   180,   181,   182,   582,
     184,   185,   583,   187,   188,   584,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     585,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     586,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   587,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   588,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   344,   592,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   593,   356,   357,   358,
     359,   360,   361,   362,   594,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   595,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   596,   395,   396,   597,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   598,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   599,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   600,   460,   461,   462,   463,     0,   464,   601,   466,
     467,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    47,    48,    49,   565,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,   566,     0,   567,   568,    78,    79,
      80,    81,    82,    83,   569,    85,    86,    87,    88,   570,
      89,   571,    91,    92,    93,    94,    95,   572,    96,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   573,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   574,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   575,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   576,   144,
     145,   146,   147,   577,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   578,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   579,   580,   175,     0,   176,   177,   178,   581,
     180,   181,   182,   582,   184,   185,   583,   187,   188,   584,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   585,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   586,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   587,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   588,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   344,
     592,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     593,   356,   357,   358,   359,   360,   361,   362,   594,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     595,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     596,   395,   396,   597,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   598,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   599,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   600,   460,   461,   462,   463,
       0,   464,   601,   466,   467,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,    48,    49,   565,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,   566,     0,
     567,   568,    78,    79,    80,    81,    82,    83,   569,    85,
      86,    87,    88,   570,    89,   571,    91,    92,    93,    94,
      95,   572,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   573,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   574,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     575,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   576,   144,   145,   146,   147,   577,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   578,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   579,   580,   175,     0,
     176,   177,   178,   581,   180,   181,   182,   582,   184,   185,
     583,   187,   188,   584,     0,   190,   191,   192,   193,   194,
     195,   196,   722,   198,   199,   200,   201,   202,   585,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   586,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   587,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   588,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   344,   592,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   593,   356,   357,   358,   359,   360,
     361,   362,   594,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   595,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   596,   395,   396,   597,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     598,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     599,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   600,
     460,   461,   462,   463,     0,   464,   601,   466,   467,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,    48,    49,   565,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   568,    78,    79,    80,    81,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,    94,    95,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   803,   107,   573,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   578,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     579,   580,   175,     0,   176,   177,   178,   581,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   344,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,   359,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   595,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   600,   460,   461,   462,   463,     0,   464,
     601,   466,   467,  1960,  1961,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,   565,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,   581,   180,   181,   182,   582,   184,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   600,   460,   461,
     462,   463,     0,   464,   601,   466,   467,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,    48,    49,   565,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
     566,     0,   567,   568,    78,    79,    80,    81,    82,    83,
     569,    85,    86,    87,    88,   570,    89,   571,    91,    92,
      93,    94,    95,   572,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   573,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   574,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   575,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   576,   144,   145,   146,   147,   577,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   578,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   579,   580,
     175,     0,   176,   177,   178,   581,   180,   181,   182,   582,
     184,   185,   583,   187,   188,   584,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     585,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     586,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   587,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   588,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   344,   592,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   593,   356,   357,   358,
     359,   360,   361,   362,  2339,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   595,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   596,   395,   396,   597,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   598,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   599,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   600,   460,   461,   462,   463,     0,   464,   601,   466,
     467,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3020,    48,    49,   565,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,   566,     0,   567,   568,    78,    79,
      80,    81,    82,    83,   569,    85,    86,    87,    88,   570,
      89,   571,    91,    92,    93,    94,    95,   572,    96,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   573,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   574,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   575,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   576,   144,
     145,   146,   147,   577,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   578,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   579,   580,   175,     0,   176,   177,   178,   581,
     180,   181,   182,   582,   184,   185,   583,   187,   188,   584,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   585,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   586,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   587,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   588,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   344,
     592,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     593,   356,   357,   358,   359,   360,   361,   362,   594,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     595,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     596,   395,   396,   597,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   598,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   599,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   600,   460,   461,   462,   463,
       0,   464,   601,   466,   467,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,    48,    49,   565,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,   566,     0,
     567,   568,    78,    79,    80,    81,    82,    83,   569,    85,
      86,    87,    88,   570,    89,   571,    91,    92,    93,    94,
      95,   572,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,   573,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   574,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     575,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,   576,   144,   145,   146,   147,   577,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   578,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,  3797,   173,   579,   580,   175,     0,
     176,   177,   178,   581,   180,   181,   182,   582,   184,   185,
     583,   187,   188,   584,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   585,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   586,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    3798,   275,   276,   277,   278,   279,   280,   587,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   588,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   589,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     591,   342,   343,   344,   592,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   593,   356,   357,   358,   359,   360,
     361,   362,   594,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   595,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   596,   395,   396,   597,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     598,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     599,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   600,
     460,   461,   462,   463,     0,   464,   601,   466,   467,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    47,    48,    49,  3450,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   568,    78,    79,    80,    81,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,    94,    95,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   573,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   578,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     579,   580,   175,     0,   176,   177,   178,  3451,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   344,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,   359,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   595,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,     0,   460,   461,   462,   463,     0,   464,
     601,   466,   467,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   715,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3687,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    47,    48,
      49,  3688,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,   566,     0,   567,   568,
      78,    79,    80,    81,    82,    83,   569,    85,    86,    87,
      88,   570,    89,   571,    91,    92,    93,    94,    95,   572,
      96,    97,    98,    99,   100,   101,   102,   103,   104,     0,
     105,   106,   107,   573,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   574,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   575,   133,
     134,   135,     0,   136,   137,   138,   139,   140,   141,   142,
     576,   144,   145,   146,   147,   577,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   578,
     162,     0,     0,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   579,   580,   175,     0,   176,   177,
     178,  3689,   180,   181,   182,   582,     0,   185,   583,   187,
     188,   584,     0,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   585,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   586,   213,   214,   215,
     216,   217,   218,   219,     0,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   587,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   588,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   589,   311,   590,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   591,   342,
     343,   344,   592,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   593,   356,   357,   358,   359,   360,   361,   362,
     594,   364,   365,   366,   367,   368,   369,   370,     0,   372,
     373,   374,   595,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,     0,   390,   391,
     392,   393,   596,   395,   396,   597,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   598,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   599,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,  3690,   460,   461,
     462,   463,     0,   464,   601,   466,   467,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   859,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,    48,    49,     0,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
     566,     0,     0,   568,    78,    79,    80,    81,    82,    83,
     569,    85,    86,    87,    88,   570,    89,   571,    91,    92,
      93,    94,    95,   572,    96,    97,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   573,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   574,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   575,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,   576,   144,   145,   146,   147,     0,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   578,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   579,   580,
     175,     0,   176,   177,   178,   179,   180,   181,   182,   582,
     184,   185,   583,   187,   188,   584,     0,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     585,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     586,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   587,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   588,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   589,   311,   590,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   591,   342,   343,   344,   592,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   593,   356,   357,   358,
     359,   360,   361,   362,   594,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   595,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,     0,   390,   391,   392,   393,   596,   395,   396,   597,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   598,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   599,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   862,   460,   461,   462,   463,     0,   464,   601,   466,
     467,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   715,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    47,    48,    49,  3688,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,   566,     0,   567,   568,    78,    79,
      80,    81,    82,    83,   569,    85,    86,    87,    88,   570,
      89,   571,    91,    92,    93,    94,    95,   572,    96,    97,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   573,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   574,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   575,   133,   134,   135,
       0,   136,   137,   138,   139,   140,   141,   142,   576,   144,
     145,   146,   147,   577,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   578,   162,     0,
       0,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   579,   580,   175,     0,   176,   177,   178,  3689,
     180,   181,   182,   582,     0,   185,   583,   187,   188,   584,
       0,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   585,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   586,   213,   214,   215,   216,   217,
     218,   219,     0,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   587,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   588,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   589,   311,   590,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   591,   342,   343,   344,
     592,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     593,   356,   357,   358,   359,   360,   361,   362,   594,   364,
     365,   366,   367,   368,   369,   370,     0,   372,   373,   374,
     595,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,     0,   390,   391,   392,   393,
     596,   395,   396,   597,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   598,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   599,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,  3690,   460,   461,   462,   463,
       0,   464,   601,   466,   467,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,    48,    49,     0,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,   566,     0,
       0,   568,    78,    79,    80,    81,    82,    83,   569,    85,
      86,    87,    88,     0,    89,   571,    91,    92,    93,    94,
      95,     0,    96,    97,    98,    99,   100,   101,   102,   103,
     104,     0,   105,   106,   107,     0,   109,   110,   111,   112,
     113,   114,   115,   116,   117,     0,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     575,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,   147,     0,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   578,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   579,     0,   175,     0,
     176,   177,   178,   179,   180,   181,   182,   582,   184,   185,
       0,   187,   188,   584,     0,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   585,   204,
     205,   206,   207,   208,   209,   210,   211,   212,     0,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,     0,
     311,   590,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   342,   343,   344,   592,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,   356,   357,   358,   359,   360,
     361,   362,     0,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,     0,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     390,   391,   392,   393,   596,   395,   396,   597,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     599,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   464,   601,   466,   467,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1928,     0,     0,
       0,     0,     0,     0,    47,    48,    49,  1918,    50,     0,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,     0,    66,    67,    68,    69,    70,    71,
      72,    73,     0,     0,     0,     0,    78,    79,    80,    81,
      82,     0,     0,    85,    86,    87,    88,     0,     0,     0,
      91,    92,    93,    94,    95,     0,    96,    97,    98,    99,
       0,     0,     0,     0,     0,     0,   105,     0,   107,     0,
     109,   110,  1919,   112,   113,   114,   115,   116,   117,     0,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,     0,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,     0,   144,   145,   146,
     147,     0,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,     0,     0,     0,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
       0,     0,     0,     0,     0,   177,   178,  1920,   180,   181,
     182,     0,   184,   185,     0,   187,   188,     4,     5,   190,
       0,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,     0,   204,   205,   206,   207,   208,   209,   210,
     211,   212,     0,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,     0,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,     0,     0,   296,     0,
     298,   299,     0,   301,   302,   303,   304,     0,   306,   307,
     308,   309,     0,     0,     0,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   340,     0,   342,   343,   344,     0,   346,
     347,     0,   349,   350,   351,   352,   353,   354,     0,   356,
     357,   358,   359,   360,   361,   362,     0,   364,   365,   366,
       0,   368,   369,   370,   371,     0,   373,   374,     0,     0,
     377,     0,     0,   380,   381,   382,     0,   384,     0,   386,
     387,   388,   389,     0,   390,   391,   392,   393,     0,   395,
     396,     0,   398,     0,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,     0,   421,   422,   423,   424,   425,
     426,   427,   428,   429,     0,   431,   432,   433,     0,   435,
     436,   437,   438,     0,     0,   441,   442,     0,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,     0,     0,   461,   462,     0,     0,   464,
       0,   466,   467,     0,     0,  1938,     0,     0,     0,     0,
       0,     0,    47,    48,    49,  1918,    50,     0,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,     0,    66,    67,    68,    69,    70,    71,    72,    73,
       0,     0,     0,     0,    78,    79,    80,    81,    82,     0,
       0,    85,    86,    87,    88,     0,     0,     0,    91,    92,
      93,    94,    95,     0,    96,    97,    98,    99,     0,     0,
       0,     0,     0,     0,   105,     0,   107,     0,   109,   110,
    1919,   112,   113,   114,   115,   116,   117,     0,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,     0,   133,   134,   135,     0,   136,   137,   138,
     139,   140,   141,   142,     0,   144,   145,   146,   147,     0,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,     0,     0,     0,   162,     0,     0,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,     0,     0,
       0,     0,     0,   177,   178,  1920,   180,   181,   182,     0,
     184,   185,     0,   187,   188,     4,     5,   190,     0,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
       0,   204,   205,   206,   207,   208,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,     0,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,     0,     0,   296,     0,   298,   299,
       0,   301,   302,   303,   304,     0,   306,   307,   308,   309,
       0,     0,     0,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   340,     0,   342,   343,   344,     0,   346,   347,     0,
     349,   350,   351,   352,   353,   354,     0,   356,   357,   358,
     359,   360,   361,   362,     0,   364,   365,   366,     0,   368,
     369,   370,   371,     0,   373,   374,     0,     0,   377,     0,
       0,   380,   381,   382,     0,   384,     0,   386,   387,   388,
     389,     0,   390,   391,   392,   393,     0,   395,   396,     0,
     398,     0,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,     0,   421,   422,   423,   424,   425,   426,   427,
     428,   429,     0,   431,   432,   433,     0,   435,   436,   437,
     438,     0,     0,   441,   442,     0,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,     0,     0,   461,   462,     0,     0,   464,     0,   466,
     467,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      47,    48,    49,  1918,    50,     0,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,     0,
      66,    67,    68,    69,    70,    71,    72,    73,     0,     0,
       0,     0,    78,    79,    80,    81,    82,     0,     0,    85,
      86,    87,    88,     0,     0,     0,    91,    92,    93,    94,
      95,     0,    96,    97,    98,    99,     0,     0,     0,     0,
       0,     0,   105,     0,   107,     0,   109,   110,  1919,   112,
     113,   114,   115,   116,   117,     0,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
       0,   133,   134,   135,     0,   136,   137,   138,   139,   140,
     141,   142,     0,   144,   145,   146,   147,     0,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,     0,
       0,     0,   162,     0,     0,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,     0,     0,     0,     0,
       0,   177,   178,  1920,   180,   181,   182,     0,   184,   185,
       0,   187,   188,     0,     0,   190,     0,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,     0,   204,
     205,   206,   207,   208,   209,   210,   211,   212,     0,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,     0,     0,   296,     0,   298,   299,     0,   301,
     302,   303,   304,     0,   306,   307,   308,   309,     0,     0,
       0,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   340,
       0,   342,   343,   344,     0,   346,   347,     0,   349,   350,
     351,   352,   353,   354,     0,   356,   357,   358,   359,   360,
     361,   362,     0,   364,   365,   366,     0,   368,   369,   370,
     371,     0,   373,   374,     0,     0,   377,     0,     0,   380,
     381,   382,     0,   384,     0,   386,   387,   388,   389,     0,
     390,   391,   392,   393,     0,   395,   396,     0,   398,     0,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
       0,   421,   422,   423,   424,   425,   426,   427,   428,   429,
       0,   431,   432,   433,     0,   435,   436,   437,   438,     0,
       0,   441,   442,     0,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,     4,
       5,   461,   462,     0,     0,   464,     0,   466,   467,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1520,  1521,  1522,  1523,  1524,
    1525,  1526,  1527,  1528,  1529,  1530,     0,  4119,  1533,  1534,
    1535,     0,     0,  1538,  1539,  1540,  1541,  1542,  1543,  1544,
    1545,  4120,  1547,  1548,     0,  1549,  1550,  1551,  1552,  1553,
    1554,  1555,  1556,  1557,  1558,  1559,     0,  1560,  1561,  1562,
    1563,  1564,  1565,  1566,  1567,  1568,  4121,  1570,  1571,  1572,
    1573,  1574,  1575,  1576,  1577,  1578,  1579,  1580,  1581,  4122,
    1583,  1584,  1585,  1586,  1587,  1588,  1589,  1590,  1591,  1592,
    1593,  1594,  1595,  1596,  4123,  1598,     0,  1599,  1600,  1601,
    1602,  1603,     0,     0,  1604,  1605,  1606,  1607,  1608,  1609,
    1610,  1611,  1612,  1613,  1614,     0,  1615,  1616,     0,  1617,
    4124,  1619,  4125,  1621,  1622,  1623,  1624,  1625,  1626,  1627,
    1628,  1629,  1630,  1631,  1632,  1633,  1634,  1635,  1636,  1637,
    1638,     0,     0,     0,  1642,  1643,  1644,  1645,  1646,  1647,
    1648,     0,     0,     0,  1652,  1653,  1654,  1655,  1656,  1657,
    1658,  1659,  1660,  1661,  1662,  1663,  1664,     0,  1666,  1667,
    1668,  1669,  1670,  1671,  1672,  1673,     0,  1674,  1675,  1676,
    1677,  1678,  1679,  1680,  1681,  1682,  1683,  1684,  1685,  1686,
    1687,  1688,  1689,  1690,  1691,  1692,  1693,     0,  1695,  1696,
    1697,  1698,  1699,  1700,  1701,  1702,  1703,  1704,  1705,  1706,
    1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,  1715,  1716,
    1717,  1718,     0,  1720,  1721,     0,  1723,  1724,  1725,  1726,
    1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,  1735,  1736,
    1737,  1738,  1739,  1740,  1741,  1742,  1743,  1744,  1745,     0,
       0,     0,  1749,  1750,  1751,  1752,  1753,  1754,  1755,  1756,
    1757,  4126,  1758,  1759,  1760,  1761,  1762,  1763,  1764,  1765,
    1766,  1767,     0,  4127,  1770,  1771,  1772,  1773,  1774,  1775,
    1776,  1777,  1778,  1779,    47,    48,    49,     0,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,   566,     0,   567,   568,     0,    79,     0,     0,
      82,    83,   569,    85,    86,    87,    88,   570,    89,   571,
      91,    92,    93,     0,     0,   572,    96,    97,    98,    99,
     100,   101,   102,   103,   104,     0,   105,   106,   107,   573,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   574,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
    4128,   129,  4129,   131,   575,   133,   134,   135,     0,   136,
     137,   138,   139,   140,   141,   142,   576,   144,   145,   146,
     147,   577,   148,   149,   150,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   578,   162,     0,     0,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,     0,
     579,   580,   175,     0,   176,   177,   178,     0,   180,   181,
     182,   582,   184,   185,   583,   187,   188,   584,     0,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   585,   204,   205,   206,   207,   208,   209,   210,
       0,   212,   586,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
       0,  4130,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   587,   281,   282,   283,   284,     4,     5,     0,   288,
     289,   290,   291,   292,   293,   588,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   589,   311,   590,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   591,   342,   343,   344,   592,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   593,   356,
     357,   358,     0,   360,   361,   362,   594,   364,   365,   366,
     367,   368,   369,     0,   371,   372,   373,   374,   595,  4131,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,     0,   390,   391,   392,   393,   596,   395,
     396,   597,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,     0,   419,   420,     0,   422,   423,  4132,   425,
     426,   427,   428,   429,   598,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   599,   441,   442,   443,   444,   445,
     446,     0,  4133,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,     0,   460,   461,   462,   463,     0,   464,
     601,   466,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5712,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    47,    48,    49,     0,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,   566,
       0,     0,   568,     0,    79,     0,     0,    82,    83,   569,
      85,    86,    87,    88,   570,    89,   571,    91,    92,    93,
       0,     0,   572,    96,    97,    98,    99,   100,   101,   102,
     103,   104,     0,   105,   106,   107,   573,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   574,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,     0,   129,     0,
     131,   575,   133,   134,   135,     0,   136,   137,   138,   139,
     140,   141,   142,   576,   144,   145,   146,   147,     0,   148,
     149,   150,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   578,   162,     0,     0,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,     0,   579,   580,   175,
       0,   176,   177,   178,  5713,   180,   181,   182,   582,   184,
     185,   583,   187,   188,   584,     0,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   585,
     204,   205,   206,   207,   208,   209,   210,     0,   212,   586,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,     0,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,     0,     0,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   587,   281,
     282,   283,   284,     0,     0,     0,   288,   289,   290,   291,
     292,   293,   588,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     589,   311,   590,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   591,   342,   343,   344,   592,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   593,   356,   357,   358,     0,
     360,   361,   362,   594,   364,   365,   366,   367,   368,   369,
       0,   371,   372,   373,   374,   595,     0,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
       0,   390,   391,   392,   393,   596,   395,   396,   597,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,     0,
     419,   420,     0,   422,   423,     0,   425,   426,   427,   428,
     429,   598,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   599,   441,   442,   443,   444,   445,   446,     0,     0,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
    1799,   460,   461,   462,   463,     0,   464,   601,   466
};

static const yytype_int16 yycheck[] =
{
       3,    76,    76,  1424,     0,     8,    26,   626,     0,   468,
       0,   694,   695,   695,   863,   643,   634,   694,     0,   975,
    2296,   643,  2141,  1453,     0,   808,   721,    30,  1986,  1424,
    2706,  2154,    35,     0,   660,     0,  2467,    40,  1290,     0,
      43,     0,     0,   776,     0,  2593,   808,  2599,     0,  1537,
       0,  1845,  1640,  2666,  1993,    36,  1569,  3355,  2023,   661,
    3079,  2089,  2352,  2579,  2609,     8,   694,  1464,  1198,  1053,
    3682,   624,   694,   688,   761,   738,   763,   904,   741,   766,
     767,  1569,  2543,  3368,  1597,   661,  1422,     0,  1464,  3211,
     692,  3089,   645,  3988,   647,   648,   649,   650,   651,  1398,
     653,   654,  1815,  1896,   657,   658,  1416,  3824,  2326,  1597,
    2271,  2002,  1356,  4381,   852,  4387,   692,  3867,  2579,  1536,
    2212,  2213,   622,  4078,   884,  4491,  2070,  4491,  4402,  4862,
    3744,  1234,  1235,  1236,   687,  3483,  3484,  2700,  3087,  2154,
    1243,  4371,  2695,  2458,  3894,  3148,  3758,  2320,  2092,  3273,
       0,  1021,  1665,  3887,   174,  4542,  3115,  3504,   161,  2707,
    3177,   661,  2127,  2128,  2129,  2130,  2131,  2132,  2133,  2134,
    2135,  2136,  2137,  2138,  2139,  3258,  2219,  1665,  4112,  3325,
    3325,    32,  5228,  1269,  3815,  3500,   863,  3186,  1292,  3504,
     743,   744,   692,  3905,  2106,  3500,  2239,  2320,  5214,  3504,
      77,  2984,  4369,  2577,  3961,  1291,  3176,  3177,  2120,  2121,
    2544,  2123,  2124,   634,   714,  2400,  4491,     6,  2580,  3931,
    3932,  2264,  2265,   634,   634,  2317,     0,   634,   728,     6,
     634,    25,   637,   859,     6,   863,     6,    41,     6,    90,
      30,   863,  3325,    30,  1200,    41,  2989,  3315,     6,    41,
      41,    30,    30,    52,  4928,   883,    64,  1501,     6,  3002,
    1859,   883,     6,    52,   125,  1135,  1136,  1137,  4971,  2469,
    4928,    46,    14,    14,  1787,    14,  4928,  1147,  1791,   126,
    3258,  3239,    14,  3995,  3996,  1641,    14,    14,    88,    41,
       6,    14,    14,  3250,    14,  1651,   701,  4726,   788,  1787,
      30,    14,    14,  1791,  1817,  2320,  1640,  1641,   141,   312,
     178,    14,  1825,    14,     6,  2515,  1639,  1651,    15,    16,
      30,   341,   197,  4980,   235,    62,  1649,    25,  1816,  1817,
     830,  3837,  3601,   197,    25,    10,    11,  1825,   200,    46,
      98,  3658,   895,   109,    46,    25,    52,  3325,    11,    41,
      98,  1768,   237,   152,   907,   908,   261,    27,    52,    25,
     363,  3975,  5217,  1780,    25,    25,     6,  1784,   140,    25,
      25,    25,   210,   120,    41,   197,  1793,   277,  1795,  1796,
    1797,  1798,    98,  1800,  3401,   245,  3920,   164,    41,    41,
     133,   197,  1748,  1810,  1811,  1812,  1813,  1814,   294,   154,
     309,    41,  5747,   903,    23,    24,    25,    98,    27,  3935,
      29,   368,    31,   245,  1748,    27,    25,    29,  2708,   275,
     164,   140,   120,  1746,    23,    24,    25,  1783,    27,    41,
      29,  3401,    31,    18,    19,   787,   841,    98,    98,  4263,
    4264,    30,    98,    98,   178,  1972,  1973,   275,   195,  1783,
      41,   275,    41,   355,  1981,   174,   290,    41,   152,    70,
      66,  5216,   234,   309,   140,  1788,   117,   781,   441,   140,
    3213,  3214,   786,   125,   788,  3744,   468,    41,   312,  5175,
      64,  5508,   381,    41,   313,  2012,   359,  2014,   156,    18,
      19,  5701,    39,   380,   377,   428,    46,   148,   174,  3448,
     583,   309,   231,  2030,  2031,  1841,  2033,  5436,  5437,   140,
      41,    98,  2039,  2040,    41,    52,  2043,    30,   309,  3071,
     523,    46,    73,    30,   294,   218,    97,   204,  5722,   218,
     307,   633,   426,    18,    19,    50,   174,    70,   285,  5884,
     224,   533,    74,   533,   100,  5890,   574,   188,    34,    35,
      36,   191,    38,   261,    32,    50,    34,    35,    36,  4929,
      38,  4931,    40,   307,  4934,   398,  5223,   197,   533,   643,
    4813,    49,   247,   120,   979,   100,   251,  2370,  4948,  1317,
     197,   150,   224,   197,   247,    73,    52,   285,   103,  4484,
     146,   715,   138,    32,   260,    34,    35,    36,    52,    38,
    4002,    40,   772,   140,    46,    73,   715,   854,   103,    53,
      49,    13,   615,   616,   487,   645,   619,   169,   376,   622,
     623,   146,  3953,  1286,  4236,   300,     3,  4384,   376,    46,
    4244,   237,   141,   606,   309,   140,   287,   300,   634,   642,
      42,    43,   634,   190,   634,   227,   309,   156,   195,   218,
     393,   520,   655,    30,   901,   779,   163,  4886,   661,   829,
     376,   643,   293,   105,  4938,  1398,   152,   309,   376,   634,
     779,   217,  2962,   616,   152,   141,   619,   779,   660,  1138,
     364,  4956,   685,  5877,  3931,  3932,    13,   174,   771,   692,
     156,   643,  1379,   643,  5721,  1382,   228,   309,    95,  1386,
    1387,  1388,  1389,   706,   106,   686,  3975,   348,   660,   234,
     660,   714,   694,   152,   251,    42,    43,   245,    13,  4962,
     174,   332,   247,   201,   727,   728,  1226,  1489,  4013,   234,
     643,  1861,   100,   694,  1234,   291,  1236,   224,   285,   416,
     470,  1241,   694,   305,   694,   356,   679,   660,  3995,  3996,
     247,   779,  5681,  5449,   151,    56,   293,   760,  5513,   646,
    1890,   638,   201,   456,   309,   316,   291,   456,  5457,   407,
     224,  1271,   343,   776,  1512,   300,   294,   329,   146,   106,
     309,   694,   633,   621,   309,   187,    30,   247,   639,   376,
     793,   376,   468,   643,   650,   787,  3072,   465,   801,   802,
     307,   774,   294,   300,   538,   808,   708,   810,   659,   294,
     660,   106,   309,   686,   771,   281,   294,   560,   368,   715,
     147,   452,   673,   356,   658,  4537,   650,   830,   316,   226,
     735,   560,   310,  3850,  1452,   718,  4370,   840,   169,   695,
     300,   822,  6052,   294,   694,   739,   697,   376,   316,   852,
     679,   854,  3935,   730,   224,   715,  4002,  4002,  3857,   499,
     187,   738,  3861,   774,   741,   774,   234,   695,   634,   643,
    2469,   310,   771,  4379,   774,   585,   631,   859,  5535,   247,
    3850,   863,   326,   715,  5739,   660,   660,   606,   891,   774,
     893,   376,   187,   896,   897,   898,   899,   900,   901,   774,
     903,   883,   573,   771,   275,   490,  4730,   859,   374,   859,
     774,   863,   774,   774,  6259,   452,  2515,   750,  1418,  4002,
    5349,   902,  5596,   291,   905,  2355,   734,   774,   774,  3997,
     606,   883,   300,   883,  4251,   735,   774,  1490,  5596,  1398,
      49,   309,   679,  4469,  5596,  5311,   859,  5311,  3906,   679,
     863,   755,   774,   896,   897,   898,   899,  3935,   289,   962,
     703,   490,   965,   755,   755,  1455,   755,   761,   774,   972,
     883,   974,  3715,  3191,  3264,  4244,  3933,   724,   772,   778,
     774,   771,   978,   779,   771,   988,   978,   779,   978,   778,
    2881,  2882,   771,   771,  2906,  2907,   978,  2909,  2910,  3184,
    3185,   778,   978,  3377,  3378,   490,   778,  1991,   778,   859,
     778,   963,   964,   978,   966,   967,   968,   978,  3061,  2618,
     778,   973,  3384,  2007,  4002,  1005,   978,   779,   978,  1856,
     778,  1452,   771,   883,   778,  2165,  5311,   779,   779,  3239,
    5743,  1452,  1452,   771,   771,  1452,  5213,   779,  1452,   755,
     963,   964,   779,   966,   967,   968,   779,   779,  3258,   779,
     973,  2458,   778,   761,   771,   978,   779,   779,  2171,   771,
     761,  5314,   585,  1053,  6090,  6091,   779,   774,   779,   771,
    2210,   761,  2458,  2186,   778,   859,   778,   779,   755,   863,
     760,   761,   772,  2392,   774,   761,   771,  1449,  1968,  1969,
     761,   761,   755,   755,  2403,   761,   761,   761,   771,   883,
    3893,   722,   779,   963,   964,  3315,   966,   967,   968,  4876,
     635,   772,  2552,   973,  1862,  3325,   779,  6143,   978,  2559,
    2216,   771,  2218,  3423,  1896,  2221,  4538,  1140,   778,   779,
     635,  1455,  1138,   755,   774,  4094,  1138,  2233,   760,   761,
    2236,   736,   761,   772,  2240,  4767,  4487,   774,  2262,  4893,
     774,  1141,  4896,   772,   755,   774,   755,  3501,   774,  3503,
    2154,   755,  4803,   772,  4443,  4444,  5865,   724,  4447,  4448,
    4847,  2267,  2268,  2269,  4453,  4454,  2542,   715,   779,   963,
     964,   755,   966,   967,   968,  1198,    56,   755,  2521,   973,
    2523,  6217,  5445,  6132,   978,  6134,  6135,   736,  2542,   771,
      70,    13,    72,  2536,  2570,   779,  4485,  2573,   755,   520,
    1958,   779,    71,  1226,   755,  2581,  1396,  5597,   755,   774,
     715,  1234,  2555,  1236,    13,   366,  2570,   275,  1241,  2573,
      42,    43,   156,   660,  2567,   760,   771,  2581,   779,  3410,
     359,   736,   779,   569,   624,  1857,   774,  1332,  1238,  2582,
     747,   779,  2789,    42,    43,  2792,    39,  2511,  1271,   755,
     756,   757,  2142,  6319,   771,   106,  5510,   755,   756,   757,
      98,   651,   774,  2810,  1979,  4897,   683,   779,  4410,   755,
    4537,   708,  5522,   747,  2821,   165,   774,   394,  6227,  6228,
    4422,   755,   174,    39,   106,  4652,  1309,  1310,  5537,  6238,
    5539,   771,  5591,  1316,  1317,   141,   755,   756,   757,   201,
    5563,   772,  5565,   774,   695,  5568,   570,   106,   760,   761,
    1333,   149,  5575,  5576,    35,    36,  2320,  4652,   777,  1342,
     191,   585,  5585,   275,   675,   366,  1326,  4652,  5591,    66,
    2045,   221,    13,  1356,  1357,   140,   187,  1857,   760,   761,
     762,   763,   764,   765,   735,    39,   349,  2062,   147,   488,
     224,  4330,  6301,    73,  1377,  4392,  4393,  2647,   487,  4503,
      54,    42,    43,  2166,   224,   187,  4469,  6054,   564,  2122,
      49,   224,  4538,  4538,   745,  1398,  1399,  4396,  4397,  1380,
    1381,   569,  1398,   771,  2166,   366,  1398,   366,   187,  1286,
      32,  1288,    34,    35,    36,  1418,    38,   191,  5352,  2522,
     361,    52,  4392,  4393,   594,   464,   336,    49,    75,    76,
    1433,   758,   759,   760,   761,   762,   763,   764,   765,  5453,
      70,   166,   441,  6082,  1424,   106,  6085,   441,   322,   368,
    1453,  1454,   174,   117,  2237,  4538,  1452,  1449,   774,  1959,
    1452,   125,  1452,   560,    53,   760,   761,   762,   763,   764,
     765,   336,   332,   147,  1325,  2237,   126,  1480,    70,  5713,
      72,  1358,   465,   420,   148,  1336,  1489,  1452,  2683,   163,
     350,  4469,  5771,  3666,  1497,  1498,   356,   147,  1501,  5886,
     164,   275,  5214,   352,  6023,   169,  3782,  3822,   293,  1512,
     629,  4027,  4781,  4029,  2201,  2198,   190,   383,    80,   244,
     237,  2198,    39,  1928,  5570,   354,   187,  6260,  5771,    73,
     152,  4274,  5775,  1938,   251,   407,   200,    54,  2271,   455,
    2670,  4104,  2001,  3666,  5211,  4288,    66,    80,   679,  4292,
    4103,   465,   324,   100,  1497,    32,   230,    34,    35,    36,
    4538,    38,   738,    40,  3529,   662,  4027,   572,  4029,   479,
    2198,  2173,    49,  5187,  4577,  4578,  2198,   686,  2448,   520,
      73,   143,   100,  5197,  5198,    32,  1463,    34,    35,    36,
     125,    38,   154,    40,    73,   467,  2334,  2173,   774,   146,
     162,   113,    49,  6270,   564,    52,   774,   606,  2370,   399,
     143,   401,   606,   336,   479,    87,   316,   527,  3412,   501,
     281,   154,   281,   287,    39,  5359,   188,   666,   498,   162,
     147,   485,  6365,    39,    49,  3428,  4585,  5277,  6277,    54,
    3239,  2141,  2469,  5873,  5874,   485,   163,  2310,   499,   126,
     499,  3666,   485,  2272,   427,   188,   775,   695,   679,  2392,
     382,   644,   527,   294,  5398,  5895,   582,   452,  5911,  5309,
    2403,  2404,   302,  2173,  2337,   152,  5024,   288,  5692,   453,
     242,   600,  5925,  5697,  5698,  2372,  2373,   234,  2515,  2376,
    3655,   427,   281,  3632,  2381,  2382,  2383,   735,   563,    74,
     247,  2971,  2972,  3661,  3648,   152,  3906,  4259,   270,   242,
    3753,   585,    98,   230,    56,    98,  3315,   237,   679,   660,
     679,  3633,   414,  3635,   201,   499,  3325,   129,    70,   728,
      72,   560,   147,   551,   728,  3935,  6255,   270,   125,   605,
     677,   109,   747,   659,   291,  5791,   447,  3144,   163,   124,
     156,  3642,  3643,   300,   201,  2160,   479,  6015,    45,  1833,
    2379,  2380,   309,   695,   356,   376,   141,  2369,  3144,  6300,
     542,  5385,   316,   291,    71,   190,   695,    13,   738,  2462,
     774,   156,    69,  4073,   190,   221,  3207,  3208,  6062,   436,
     437,   492,   711,   163,   306,   727,  6030,  3997,  6032,  6057,
     133,   533,  4002,  2787,   527,  3057,    42,    43,   244,  6340,
    3205,   217,  3207,  3208,   696,   230,   681,  5567,  3215,  2319,
     355,   154,   109,   316,   694,  5780,  1829,   124,  2958,  2959,
     772,   572,   774,   310,  1837,  2595,  1839,   316,   564,  3215,
     532,  5855,   217,   560,   564,   207,  1849,  1850,  5582,  6215,
    6214,   461,   553,   625,  1857,     0,   218,  2987,  1861,  1862,
    2360,   328,   722,   310,   774,   479,  3165,   200,   186,  2369,
     106,  2371,  3171,   738,    17,    18,    19,   488,  6047,   117,
    2983,   451,   288,   251,   502,    56,  2501,  1890,  3853,   499,
     636,  2629,  2630,  1896,    46,   596,    39,  6169,  3001,    70,
    6168,    72,  3005,   190,  4065,   223,   441,  1850,   443,     9,
     148,  2411,  5034,   275,   704,   298,   299,   707,  5187,  1899,
     217,   695,   309,   641,  5564,  5864,   544,  1930,  5197,  5198,
    3125,   762,   763,   764,   765,   451,  4934,   307,   225,  5579,
     563,  4939,  2568,   261,  3030,  5679,  5845,     6,  3034,   563,
    3036,   187,  5592,   105,  5594,  1958,  1959,   759,   760,   761,
     762,   763,   764,   765,  3050,   207,  2466,  4580,   700,  6115,
     376,    54,   263,  6119,  5096,  4067,   218,  3063,  3064,   758,
     759,   760,   761,   762,   763,   764,   765,   719,   125,   456,
     332,   288,    70,   379,   668,   381,   531,   469,  4741,   374,
       9,  1993,  2679,  4746,  4747,  2001,   747,  3202,   350,  2001,
     393,  1991,   738,   156,   356,    39,  2631,    95,   738,   261,
    1031,  1032,  1033,   593,  3268,  4456,  2006,  2007,  5789,   520,
     108,   594,   418,   779,  4310,  2535,  3994,  2112,   138,   381,
    5302,   283,   141,   653,  2544,   123,  4594,   190,   774,   287,
     497,  2679,   169,   771,   755,   756,   757,  2679,   376,   587,
    2063,   679,   448,   454,   147,  2068,  6005,   681,   359,  1080,
     388,   606,     9,   151,   217,  2078,  2702,   593,  2706,  5813,
     163,  5980,   488,   612,  2706,   468,  2089,  6256,  6257,  2704,
    4308,  2496,   326,   679,   456,   486,    41,   758,   759,   760,
     761,   762,   763,   764,   765,   257,   578,   259,   772,  1167,
    2102,   779,  2102,   585,   605,   738,  5385,   302,   270,   591,
     305,   590,   524,   525,   738,  3081,   528,   529,   530,   138,
     301,   302,   333,   755,   756,   757,   288,  1195,  2141,  3449,
    2143,   126,  5859,    56,  5861,   288,   732,   230,   226,   125,
    6296,   668,   450,    98,   682,  5916,  2159,    98,    52,    72,
    5429,   332,  2165,  2166,  5426,   150,   190,  2147,   559,   660,
    2173,  2174,   289,   491,  2154,  2908,  5174,  5175,    32,   350,
      34,    35,    36,   755,    38,   356,    40,   429,   125,  2884,
    6219,   720,  2195,   665,   580,    49,   487,   173,   667,  2202,
    2203,  2204,  2205,  2206,  2207,  2208,  2209,  2210,  2211,   737,
     381,   586,   290,   447,  2217,   777,  2198,  2197,   355,    32,
      39,    34,    35,    36,   771,    38,     9,    40,   614,   430,
      49,  2234,  2235,   376,  2237,    54,    49,  2198,  5236,   774,
    5238,   774,   560,   202,  5978,   133,  2198,  5532,  2198,   640,
    6145,  6146,  3355,   668,   195,   727,  2259,   233,   152,  2202,
    2203,    62,  2205,  2206,  2207,  2208,   520,   558,  2271,  4469,
      62,  5393,  4066,  5990,  2217,  2152,  6305,   376,   755,   756,
     757,  5983,  5984,  2688,   383,  2198,   507,   508,  3418,  2694,
     125,   755,  2235,   343,   592,  4088,  4089,   774,   152,   398,
    2705,   522,    50,  2980,   441,   423,   443,  3906,   755,   756,
     757,   447,  4224,   138,  4226,   467,  2319,  2936,   693,  6348,
    3276,   399,   609,   401,   423,   565,   566,   774,   147,   115,
     116,  2334,   308,   639,   169,   744,  2339,   138,  4538,   152,
    2320,   402,   125,   590,   163,   488,   138,   201,  2198,  6378,
     406,   605,  2980,  6304,   406,   103,   492,  2360,  2980,   318,
     125,   479,   771,  2240,  2367,  2967,  2369,  2370,  2371,  6398,
     420,   190,  2375,   406,  2377,   393,  6360,  4316,  6090,  6091,
     722,  6098,    46,   755,  6101,  3123,  5129,  5130,   201,  2392,
     696,  2967,   410,   699,   531,   686,   617,   618,  3997,   164,
    2403,  2404,   642,  4002,   169,  6389,   660,    46,  2411,  4122,
     471,   230,  3239,   199,  6116,   779,  3752,   143,  6120,   144,
     667,   727,   147,  3618,   560,  3822,   482,   526,   154,   735,
     482,  6143,  3165,  2310,  2377,   200,   162,    46,  3171,   149,
     539,   105,  2422,  2902,  3107,   563,  3822,   117,  6399,  6400,
     761,  5449,  5737,  3186,   164,   125,   310,   748,   557,  1470,
    2337,   772,  3077,  2466,  3800,   306,   105,  2967,  3424,   606,
    3157,   549,   550,  3160,   535,    46,   537,  3164,   148,  2482,
     205,    52,   543,    54,  2984,  2488,  3881,   619,  3315,  4765,
     276,    46,    56,  4769,   164,  2569,   105,   310,  3325,   169,
    3262,    46,    30,  2577,   761,  6217,    70,    35,  2511,  3192,
    5632,  5027,    40,  5029,  5030,   772,   242,   774,   670,   671,
     672,   673,   758,   759,   760,   761,   762,   763,   764,   765,
     200,    32,  2535,    34,    35,    36,   704,    38,    30,    40,
     708,  2544,   674,   604,   270,  4033,  3676,  4978,    49,  1059,
     105,   722,  6312,  6313,   412,   126,  2464,   234,  3857,  2467,
     105,   419,  3861,   681,   342,   343,  5027,  1077,  5029,  5030,
     682,  1081,  1082,  2576,  3704,    80,   642,   133,  5009,   691,
    1483,  1484,   681,  3083,   696,   761,  2568,   648,  5133,   655,
    3693,    17,    18,    19,  6354,  2472,   772,   696,  4028,  5597,
     378,   744,    18,    19,  3707,  6307,  6308,  2610,  4121,  2612,
    3713,  3714,   264,    39,  2617,  1518,  2568,   287,  2568,   133,
     738,    39,   771,  3818,   276,   150,  2629,  2630,  1347,   707,
     779,    35,  2706,  4121,  1353,  1354,    40,  4685,   143,  4127,
      46,  4689,   420,  2646,  2647,  4133,    72,  4068,   729,   154,
     771,   152,   772,  5672,   774,  2568,   774,   162,   779,    32,
     502,    34,    35,    36,  5202,    38,  3428,  2670,   772,  5207,
     774,  2674,    98,  4068,  5417,  5418,    49,  3410,   772,   740,
     774,  2684,  3666,   188,    64,  5116,   104,   772,  2691,   774,
     751,  3368,   197,  4721,  3194,   174,  2699,  2679,  2701,   772,
     201,   774,  4119,  4120,    23,    24,    25,   251,    27,   376,
      29,  4128,    31,  4130,   772,  4132,   774,   771,  2568,  1432,
    2702,  4679,  1435,  1436,  2706,  4616,  4617,  2679,   334,  2679,
     156,  3926,  2712,    49,  4070,    23,    24,   242,   410,    27,
    3368,    29,   294,    31,   336,    32,  3368,    34,    35,    36,
    2702,    38,  2702,    40,  2706,  4646,  2706,  2749,  4716,  2749,
     138,   772,    49,   774,   190,   270,  2679,   126,   186,   195,
     738,   197,   190,   772,  3969,   774,  3971,  3972,  4669,   152,
      23,    24,  3977,   772,    27,   774,    29,   661,    31,  2702,
    3985,   217,   661,  2706,  2568,  3990,    22,  2082,  2083,    25,
      26,   772,    87,   774,    30,   223,  3762,  2787,  2788,   310,
    3505,  3488,   479,   275,  3416,   772,   594,   774,    80,   453,
    4711,  3516,  3517,  3500,  2588,  2589,  3521,  3504,   126,  2679,
    6442,   423,   772,   611,   774,    27,   505,    29,   507,   508,
    3416,   963,   964,   261,   966,   967,   968,   772,   778,   668,
    2853,   973,  2702,   522,   654,  2858,  2706,   784,   785,   637,
    3488,  6159,   288,   141,  5380,   152,  3488,   141,   141,    23,
      24,  2874,  3500,    27,   307,    29,  3504,    31,  3500,  3574,
     779,   143,  3504,   772,    74,   774,   772,   479,   774,   772,
     557,   774,   154,  2873,  3677,   726,   563,  5328,   118,   677,
     162,   755,   756,   757,  3599,  2679,  2902,  2887,  5339,   275,
    2902,   337,   649,   336,   201,  3677,  3416,  3417,   772,  5380,
     774,    71,   429,    23,    74,   735,   188,    27,  2702,    29,
     261,    31,  2706,   218,   124,   527,   772,   310,   774,  4538,
     346,   771,   755,   756,   757,   772,   613,   774,   617,   618,
     376,   141,   772,   376,   774,  2958,  2959,   113,   376,   772,
     772,   774,   774,   772,  2967,   774,   156,   281,  2971,  2972,
     388,   563,    45,   772,   124,   774,   261,   127,   463,   774,
     242,  2984,   778,   389,  2987,   391,    22,  2990,  2991,    25,
      26,   141,   748,   749,    30,   751,  2976,   753,  2980,   778,
     423,  3501,   772,  3503,   774,   772,   156,   774,   270,   126,
     138,  3014,  3015,  2993,   681,   681,  4579,  3020,  4581,   442,
     210,   147,   772,   310,   774,   598,  3029,   217,  2980,   772,
    2980,   774,  3035,    23,    24,    25,   772,    27,   774,    29,
    4979,    31,   639,   772,   329,   774,  3729,  3730,  4300,   112,
     113,   114,  3729,  3730,   721,   771,   479,   336,   468,  3062,
    5673,  4649,   488,   772,   772,   774,   774,   217,  3049,   771,
     695,   738,  3015,   491,   772,  3078,   774,  3020,   484,  3906,
    3083,  3084,  3085,   772,   771,   774,  3029,  5115,   576,   681,
    4342,   772,  3035,   774,  4050,   572,   772,   376,   774,  3079,
     771,  3729,  3730,  2980,   527,   255,    23,  3729,  3730,  3112,
      27,   772,    29,   774,    31,  4603,  3119,   772,   771,   774,
    3123,   406,   727,  4253,  3857,   772,   532,   774,  3861,   772,
    2980,   774,   197,   324,   557,  3115,  3116,   772,   288,   774,
     563,  3760,   560,  3146,   429,   324,   738,  3150,  3151,  3152,
    3027,  3154,   772,  3156,   774,   772,   324,   774,  3161,  3162,
    3163,  3038,  3165,   442,  4013,   772,   542,   774,  3171,   281,
    3997,   456,   524,   525,   580,  4002,   528,   529,   530,  3638,
     178,   197,   774,  3186,   374,   774,  4289,  3190,  4291,   771,
      80,  3194,  3195,    32,   277,    34,    35,    36,  5629,    38,
     479,    40,   420,   772,  4307,   774,  2980,   351,   778,  5003,
      49,  3154,   772,  3156,   774,  5891,   501,   771,  4304,  3162,
    3163,  4557,   771,   771,   374,  3205,   652,  3207,  3208,  3209,
    3107,   772,   771,   774,    32,   771,    34,    35,    36,   772,
      38,   774,    40,   772,  3121,   774,    14,  2531,   527,    72,
     772,    49,   774,   143,   755,   756,   757,   729,   681,  3262,
    5812,  5289,   771,   669,   154,  3268,   772,  2551,   774,  3888,
     729,   772,   162,   774,  5397,   771,  2560,  5400,   557,   772,
     771,   774,  2566,   206,   563,   691,  4481,  4482,  4483,   772,
    2574,   774,   772,   771,   774,   771,   771,   771,   188,  2583,
     771,   771,  2586,  3377,  3378,    37,   771,   197,   771,  4504,
    4505,   771,  4507,   152,    87,   738,   771,  3392,   744,   771,
     771,   771,   771,  3326,  4443,  4444,  4088,  4089,  4447,  4448,
     771,  3334,  4065,    87,  4453,  4454,  4013,   803,   206,  3216,
     771,   771,   771,   771,   771,   206,   771,  3224,   206,   771,
     771,   774,   242,   351,   152,   743,  3233,  3234,   771,   771,
     771,    30,   201,   771,   771,   650,   771,  3867,   141,   654,
     771,   771,   376,   771,   771,  5340,   771,   771,   771,   771,
     270,  5409,   755,   756,   757,  4013,  3368,   771,   771,  3392,
     771,  4013,  5668,  3893,  3894,    14,   586,   771,   396,  3402,
     771,  3404,   681,   201,   294,  4031,   771,  3410,   771,  5840,
    3413,   696,   779,  3416,  3417,  3418,  3368,   771,   771,   423,
     771,   771,   771,   771,   771,  3428,   771,  5318,  4764,    32,
     771,    34,    35,    36,   207,    38,   586,    40,   771,   771,
      14,   771,   727,  3943,   771,   218,    49,   771,   771,   771,
     735,   771,   755,   207,   771,  3368,   771,   576,  3438,   738,
     771,   771,   771,   771,   218,   771,   771,   771,   755,   756,
     757,   310,   771,  4668,   771,   479,   771,   771,   771,   477,
    4263,  4264,   771,   774,   197,   772,  6034,   774,    32,   771,
      34,    35,    36,   126,    38,  4690,    40,   197,  3501,   771,
    3503,  4263,  4264,   693,   771,    49,  3488,   771,   771,  4761,
     283,   771,   310,   771,   771,   771,   251,   771,  3500,   774,
     661,   275,  3504,  5646,   679,   164,   125,  4222,   679,   283,
    3482,  3483,  3484,   695,   667,   502,  3488,   422,  3488,   125,
     538,  5054,   140,   693,   774,   173,   774,   774,  3500,   152,
     574,   351,  3504,   557,  5844,   774,   125,   555,   556,   563,
    5850,  5851,   560,   561,   562,   319,  5054,   384,   774,  3482,
    3483,  3484,   774,   755,  5274,   571,  5276,   690,     6,  5279,
    4363,   456,  5282,   735,   456,  5285,  5286,  3500,     9,   774,
     210,  3504,    30,  5293,  3368,  5295,   133,   291,   201,   147,
      64,  4363,    41,   398,  5304,  5035,    41,     3,   152,   613,
    3613,  3488,    45,   575,   397,    44,   306,   735,  5039,  4238,
     216,    80,   771,   420,   771,   381,   771,    14,   771,   771,
     628,  5589,  3482,  3483,  3484,   771,  4739,  4740,  3488,  5667,
    3632,  3644,  3638,  5060,  5039,   779,  3638,  5064,   125,   125,
     343,   778,    53,   778,   125,   779,   429,   201,   774,   779,
     118,   423,   173,  4396,  4397,   635,  3669,   695,   772,  3649,
    3673,   324,   324,  3676,  3677,   429,   324,   681,   138,   677,
     499,    43,   306,   456,   143,   126,  3666,   553,   150,   306,
     771,   173,   778,  5658,  3768,   154,   774,   779,    46,   771,
     420,  3704,   456,   162,   772,   772,   772,   310,  3482,  3483,
    3484,  4538,   105,   327,  3488,   774,  6264,   721,   779,   772,
     772,  3717,  3725,   772,  3727,  3717,  3500,  3717,   501,   188,
    3504,   640,   772,   125,   738,  3717,   125,   772,   197,   772,
     779,  3717,   771,  3817,   163,   771,   281,  3729,  3730,  4852,
    3717,  3731,  3717,  3756,  5782,  4374,  3717,   133,  3717,  3717,
     774,  3717,   150,  3837,   774,  3717,   310,  3717,  3729,  3730,
     774,   125,    72,   762,   779,   774,   679,  3729,  3730,  3729,
    3730,   762,    32,   242,    34,    35,    36,   147,    38,   444,
      40,   483,    32,   692,    34,    35,    36,   125,    38,    49,
      40,    18,    19,   774,  3717,   428,    23,    24,    25,    49,
      27,   270,    29,   772,    31,   679,  3729,  3730,   771,   774,
     771,   594,  6112,   420,     3,  5948,   147,   774,   210,   354,
     502,   231,   502,   351,   502,   502,   502,   502,  3841,   774,
     774,   755,  5807,  3846,    32,   118,    34,    35,    36,   667,
      38,   281,    40,    46,  3857,   664,   735,   588,  3861,   772,
     772,    49,   772,   636,  3867,   772,   772,  3717,   154,  5569,
     154,   203,  3875,   771,   774,   779,   134,    64,   432,  3729,
    3730,   654,   779,   244,   656,   411,   473,   771,   473,   587,
    3893,  3894,   774,   774,   772,  6014,   650,   277,  3841,    67,
     726,  3881,   152,   293,   771,    32,   305,    34,    35,    36,
     305,    38,   152,    40,   381,    56,   755,   756,   757,    29,
     229,   774,    49,   696,   694,   214,   699,   126,   200,   197,
     774,  4626,   774,   772,   771,   774,   281,    62,   142,   150,
    3943,    41,   641,  3717,   772,   772,   420,  4730,   772,   762,
    4568,   201,   772,   126,   727,   771,  3959,   755,   756,   757,
     772,   201,   735,   774,   152,   772,   772,   761,  4730,   772,
     772,   772,   771,   727,   772,  4652,   774,    39,   774,   772,
     772,   735,   772,   772,   772,   772,   772,  5182,  5183,  5184,
    5185,   772,   772,  5188,  5189,  6426,   772,   774,  5193,   774,
    5958,  5196,  4697,   774,  5199,   772,   772,  5202,   772,   772,
     779,  5206,  5207,   201,   771,   765,   771,   368,   210,   771,
     583,   772,   755,    30,  4652,   152,    30,    30,   774,   420,
    4652,  4013,   129,   126,   774,   774,   779,   779,   779,   125,
     125,  4044,   497,   779,   774,  3922,  3923,  3924,  3925,  4031,
    3927,  3928,  6328,   774,   126,   774,   774,   772,   605,    52,
     310,  4013,  4065,   772,   774,    32,   251,    34,    35,    36,
     310,    38,   774,    40,   201,    99,    46,   661,   774,  4031,
     725,  4031,    49,   774,  4087,  4088,  4089,   125,  4068,   568,
    4093,   154,   742,   154,   432,  6053,  3973,  3974,   540,  3976,
    4013,  3978,  3979,  3980,  3981,  3982,  3983,  3984,   771,  3986,
     261,   548,  3989,   261,  5544,  5545,  3993,  5547,  4031,   649,
     309,   261,   310,    32,   261,    34,    35,    36,   261,    38,
     197,    40,   774,   771,  6092,   125,   726,  5332,   501,  5334,
      49,  5336,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   756,   757,   755,   152,   772,  6186,   312,
    4112,   755,   755,   755,   755,  6441,   755,   755,   290,   772,
     772,   774,   755,   755,   755,   755,   755,   755,   755,     6,
     294,  4031,   755,   310,   779,   152,   420,   568,   164,    33,
      17,   281,   324,   281,   747,   499,  5391,   772,   774,  4112,
     772,  4204,   382,   150,   774,   420,   774,   772,   779,   149,
     149,   755,   756,   757,  5635,  5636,    32,   779,    34,    35,
      36,   779,    38,  4203,    40,    52,   772,   779,  6193,   772,
     774,   772,   772,    49,   201,  4854,  4239,   206,   761,  4013,
    5635,  5636,   761,   152,   772,   779,   779,    64,   772,   771,
    4253,   772,  4255,    80,   774,   771,   688,  4031,   329,   281,
    4263,  4264,  4112,  4266,   281,  4257,  4269,  4270,   233,   576,
     126,   126,   779,   779,   771,   771,   485,   761,   224,    29,
    4899,   772,   774,   771,   778,   316,   771,   755,  4268,   755,
     117,   774,   201,   536,   197,   324,   124,   197,   125,  6327,
     197,    49,   281,   154,   154,   774,   133,   134,    30,   772,
      30,  5414,    30,   140,   398,   398,   143,   232,    52,  4322,
     277,   148,   771,   150,  4316,   771,  5756,   154,  5758,  5759,
     133,   771,    29,    29,   454,   162,   152,   164,  4112,   238,
     762,   173,   169,   310,   576,    32,   772,    34,    35,    36,
    4330,    38,  6310,    40,   779,   762,   140,   343,  4361,   779,
    4363,   188,    49,  4366,  4367,    94,   151,  6332,   151,   772,
     197,    29,    64,   200,   772,   772,   200,   779,   772,  4382,
     755,   126,    30,  6411,    30,   201,   771,   224,   774,  4266,
     774,   218,   771,  4396,  4397,   772,   774,  6425,   772,   772,
    4403,   310,   771,  6431,   772,   173,   771,   774,   306,   224,
    6438,   238,   771,   755,  4914,   242,   545,  4492,   774,   681,
     681,   197,   771,   398,   251,    32,   294,    34,    35,    36,
     771,    38,   294,    40,   771,   368,    52,   772,   774,  4382,
     774,    30,    49,   270,   201,   439,   281,    52,   772,   432,
     244,   129,   495,    32,   772,    34,    35,    36,    64,    38,
     287,    40,   249,   164,   772,   152,   293,   294,   309,   772,
      49,   497,   635,   200,    64,   774,   772,   772,  4553,   165,
     307,   774,   309,   309,   210,    32,  5173,    34,    35,    36,
     772,    38,   772,    40,   310,   772,   772,   440,  4375,   774,
     169,   771,    49,   163,   746,   755,   756,   757,   733,   411,
     411,   210,   197,    52,   201,   755,   756,   757,   772,   240,
     667,   240,   772,    32,   774,    34,    35,    36,   294,    38,
     294,    40,   772,  4536,   774,   166,   771,    29,  4541,    29,
      49,   585,   210,   374,   210,   152,   281,   210,    64,   210,
    4553,   155,   696,  4556,   155,   210,  4559,   696,   210,   584,
     210,   210,   595,   210,   197,   197,   376,   755,   756,   757,
     478,   245,  4568,   152,   126,   432,  4568,   576,  4568,  5266,
     197,   309,   150,    70,   772,   491,   774,   420,   772,   772,
     772,  4583,   540,  4596,   201,  5278,    32,   605,    34,    35,
      36,   151,    38,   772,    40,   152,   772,   774,  5457,    64,
     676,   772,   772,    49,   779,   774,   396,   772,   774,    49,
      52,   771,   201,   310,    64,   452,   771,   779,   755,   756,
     757,   646,   115,   771,    32,   771,    34,    35,    36,    64,
      38,   772,    40,   152,    64,   771,   439,   774,   771,    29,
     322,    49,   733,   138,   201,   156,   733,   217,  5158,   660,
     415,   417,   275,   380,   309,    32,   774,    34,    35,    36,
    4652,    38,   771,    40,  4677,   540,   772,   438,   772,   774,
     772,   772,    49,   575,   771,    32,   156,    34,    35,    36,
     156,    38,   201,    40,  5194,   771,   412,   771,   228,   772,
    4652,  4704,    49,   310,    52,   420,   771,   104,   772,   197,
     125,    64,    64,    64,  4717,   774,   152,   774,  4721,    30,
     402,   125,   125,   156,   774,   309,  4722,  4730,  5281,   774,
    4733,   310,   772,   576,   641,  4727,   772,   772,   433,  4652,
     593,   593,   779,   771,    32,   357,    34,    35,    36,   294,
      38,   771,    40,   771,   152,   771,   779,    71,   125,   778,
    4763,    49,   205,   310,  5451,   201,   779,   778,  5455,  5456,
     772,   281,  4775,   778,   118,    32,   118,    34,    35,    36,
    5457,    38,   281,    40,   275,   152,   676,   576,   755,   756,
     757,    71,    49,    71,    14,   156,    49,   702,   772,   687,
      29,   310,   774,   201,  4807,   152,   774,   774,   771,    17,
    4813,   772,    64,    64,  4817,   771,    32,   771,    34,    35,
      36,    98,    38,    98,    40,   421,   715,  4704,   291,  5457,
     576,   411,   576,    49,   201,  5457,   641,  4840,   411,   771,
     771,  5797,   423,   772,   772,   176,   755,   756,   757,   774,
     771,   771,   771,   156,   201,  5532,  4733,   693,   733,   156,
     195,   330,   291,    98,   152,   774,    52,   778,   778,   245,
     688,   150,   581,   197,   310,   771,   419,   772,  4652,    71,
    5508,   729,    74,  4886,   771,   771,  5508,   771,  5737,   420,
     192,   343,  4895,   125,   415,   152,   772,   771,   169,   772,
     577,   329,   771,   240,  5532,   772,   244,   771,   774,  6012,
    5532,  4914,   310,   201,   774,   742,    32,    14,    34,    35,
      36,   323,    38,   772,    40,  4802,   772,   473,   755,   197,
     197,   420,   124,    49,   772,   127,   152,   715,   111,   755,
     756,   757,    64,   310,   201,   772,   100,   774,   291,   141,
     777,   778,   772,   641,    29,   140,   251,   771,   774,  4962,
    3717,   774,  3096,   310,   156,  6395,  3991,  5336,  5332,  4972,
    3834,  5334,  1288,  5849,  4977,  4465,  5527,  5893,    32,  6046,
      34,    35,    36,  6266,    38,   201,    40,  4979,   774,  2167,
    5225,  2457,  4541,  4017,  1475,    49,  4031,  5000,  5139,  4553,
    2153,  2592,  5689,  3116,  4330,  6108,  4083,  4103,   353,  2702,
    2497,   845,  2703,  1517,  2704,   360,  6211,  2475,   210,  5011,
    2618,  5011,   310,  5711,  5710,   217,  5503,  4961,  4491,  4972,
     375,  5583,  4713,  5100,  5402,  4912,   152,  2944,  4717,  6080,
     385,   386,   387,  6188,  5658,  5406,  6332,  6286,  5971,  6334,
     395,  3215,  1464,   310,  5273,  4956,  6159,  5871,  6208,  5039,
    5737,  5314,  5445,   255,  5139,  4962,  5560,  5567,   755,   756,
     757,  5172,  5024,    32,  6147,    34,    35,    36,  6313,    38,
    6158,    40,  6057,  4649,  1640,   201,  4122,   774,  6074,  6161,
      49,  2533,  5773,  5721,   310,  4208,   288,  5100,   152,  5721,
    2545,  4689,  4681,  4686,  6338,   488,   488,  6307,  5856,  5737,
    6308,  5024,  5115,  6104,  3826,  5737,  6120,  6116,   523,  2559,
    5556,  5554,  5114,  5742,  5114,  4364,  4961,  5311,  1494,  3814,
    5930,  1905,  2349,  3809,  6071,  3268,  5139,  5772,  3669,  2514,
     643,  5121,  5216,  5218,  5147,  4093,  3085,   201,   755,   756,
     757,  4586,  3448,   780,  5836,  5158,   533,   660,  5161,  2625,
    5163,  1449,  3632,  3757,  1400,  1223,  5008,   774,  4704,  1436,
    6273,   674,  3680,  3573,  5024,  5178,   755,   756,   757,  3885,
    3569,  2086,   374,  4238,  4149,  2143,  2007,  1997,  5865,   534,
    1975,  5194,   695,   152,   310,   774,  5036,  2404,  1398,  2399,
    1398,   546,  1398,  1398,  1398,  5542,  5240,  4766,   755,   756,
     757,  5214,  6050,    32,  5217,    34,    35,    36,   721,    38,
    5147,    40,  5225,  6051,  2394,  3200,  2420,   774,  1981,  4231,
      49,  3877,  4229,  4895,  5397,  4894,  5948,  5865,  5782,  5393,
    5133,  3881,   201,  5865,  5421,   786,   755,   756,   757,  1456,
    5024,  1428,  4899,  1202,  3402,  5275,   310,   506,  3194,  2668,
     488,  3441,  5265,  5891,  4583,   774,   689,  5667,  5288,  5891,
    4727,  3919,  5153,  6327,  5277,  2610,   891,  3058,  5298,  4763,
    2226,   892,  6015,   695,  5287,  5305,  5289,  5307,  5308,  5971,
    3059,  3751,   523,  5296,  5297,  1452,   695,  5429,  5707,  5302,
    2338,  4589,   647,  3110,  6330,  5245,  5309,  6373,  5551,  1910,
    6431,  5314,  6438,  5190,  5191,  1009,  3078,  5409,  3488,   755,
     756,   757,   727,  5200,  6057,  3729,  5329,  3438,   694,  3730,
    2709,  6434,  3731,   152,  2993,   694,  3726,  5214,   774,   684,
     843,  3722,  3721,   692,  4275,  2684,  2369,  1898,  1898,  3676,
    5227,   310,  2167,   698,  4480,  3829,   859,   755,   756,   757,
     863,  3262,  1204,  5626,  5014,  4492,  4914,   512,   488,   734,
    1343,   776,  4580,   488,   488,   978,   774,  2705,  4105,  6167,
     883,  5739,   201,   978,  4773,  6316,  6168,   997,   755,   756,
     757,  6074,  4379,  3835,   586,  5721,  5728,  5713,  5721,  5712,
    5352,  5404,  1833,  5534,   883,   772,  5409,  5410,   755,   756,
     757,   997,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5426,    -1,  6158,    -1,   774,    -1,    -1,
    5433,    -1,    -1,  5436,  5437,    -1,    -1,    -1,  5441,  5352,
      -1,  5515,  5445,    -1,    -1,    -1,  5323,    -1,    -1,    -1,
    5453,    -1,    -1,    -1,    -1,  5458,    -1,    -1,    -1,    -1,
     963,   964,    -1,   966,   967,   968,    -1,   755,   756,   757,
     973,    -1,  6428,    -1,    -1,  5457,    -1,    -1,    -1,    -1,
      -1,    -1,  5557,    -1,  5559,    -1,   774,    -1,    -1,    -1,
      -1,   310,    -1,    -1,    -1,    -1,    -1,    -1,   755,   756,
     757,   693,  5352,    -1,    -1,  5457,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  6014,    -1,    -1,   774,  1021,    -1,
      -1,    -1,  1025,    -1,    -1,    -1,  5508,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5537,    -1,  5539,    -1,  5558,   755,
     756,   757,    -1,    -1,  5457,    -1,  1049,    -1,    -1,    -1,
    5532,    -1,    -1,    -1,    -1,  1058,  5508,   962,   774,    -1,
    5563,  5564,  5565,    -1,  5567,  5568,    -1,  5570,    -1,    -1,
      -1,    -1,  5575,  5576,    -1,    -1,  5579,    -1,  5352,    -1,
    5532,  5584,  5585,  5460,    -1,    -1,    -1,    -1,  5591,  5592,
      -1,  5594,    -1,  6093,    -1,  5508,    -1,    -1,  5601,  5476,
      -1,    -1,    -1,    -1,    32,    -1,    34,    35,    36,    -1,
      38,    -1,    40,    -1,    -1,    -1,    -1,    -1,  5621,  5532,
      -1,    49,    -1,    -1,    -1,    -1,    -1,  5630,    -1,    -1,
      -1,    -1,  1135,  1136,  1137,  1138,    -1,    -1,    -1,   755,
     756,   757,    -1,    -1,  1147,    -1,  6265,    -1,    -1,    -1,
      -1,    -1,  6334,    -1,    -1,  5635,  5636,    32,   774,    34,
      35,    36,    -1,    38,  5667,    40,    -1,    -1,    -1,  5744,
      -1,  5745,    -1,  5747,    49,    -1,    -1,    -1,  5681,    -1,
      -1,    -1,  5685,  5457,    -1,    -1,    -1,    -1,  6147,  5692,
    5693,    -1,  5672,    -1,  5697,  5698,    -1,    -1,    -1,    -1,
      -1,   755,   756,   757,  5707,    -1,    -1,    -1,  6208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5710,    -1,
     774,    -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,    32,
      -1,    34,    35,    36,  5508,    38,  5739,    40,    -1,  5721,
      -1,    -1,  5745,    -1,  5747,    -1,    49,    -1,    -1,    -1,
      -1,    -1,  3218,  3219,    -1,  5737,    -1,    -1,  5532,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5771,  5721,
      -1,  3237,  5775,   201,  5777,    -1,    -1,   152,    -1,  5782,
      -1,  3247,  3248,    -1,  6284,  5737,    -1,    -1,  5791,  5864,
      -1,    -1,    -1,  5868,    -1,    -1,   755,   756,   757,  5802,
    5803,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5721,    -1,
    5884,    -1,    -1,    -1,    -1,   774,  5890,  5891,    -1,  1322,
    6439,    -1,  1325,    -1,  5737,  5828,   201,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5837,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5845,    -1,  3310,  3311,  3312,  3313,    -1,   152,
    5853,    -1,  5855,    -1,    -1,    -1,    32,    -1,    34,    35,
      36,    -1,    38,    -1,    40,    -1,  5869,    -1,    -1,    -1,
      -1,    -1,    -1,    49,    -1,    -1,    -1,  5880,    -1,  5882,
      -1,  5884,   310,  5865,    -1,    -1,    -1,  5890,    -1,    32,
      -1,    34,    35,    36,    -1,    38,    -1,    40,   201,    -1,
      -1,    -1,  5922,    -1,    -1,  1310,    49,    -1,  5911,  5891,
      -1,  1316,    -1,  5865,    -1,  6415,    -1,    -1,    -1,    -1,
    6420,  5924,  5925,  5926,    -1,    32,    -1,    34,    35,    36,
    6005,    38,    -1,    40,    -1,   310,   755,   756,   757,  5891,
      -1,  5891,    49,    -1,    -1,    -1,    -1,  5721,  6023,    -1,
      -1,    -1,  5865,    -1,  1457,   774,    32,    -1,    34,    35,
      36,    -1,    38,  5737,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    49,    -1,    -1,   152,  5980,  5891,    -1,
      -1,    32,  5985,    34,    35,    36,    -1,    38,  5991,    40,
      -1,    -1,    -1,  1398,    -1,    -1,    -1,    -1,    49,  1502,
      -1,    -1,    32,    -1,    34,    35,    36,   310,    38,   152,
      40,  6014,    -1,    -1,    -1,    -1,    -1,    -1,    32,    49,
      34,    35,    36,    -1,    38,   201,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    49,    -1,    -1,    -1,  6042,
      -1,  5891,  6045,    -1,    -1,   152,    -1,  6050,  6051,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,    -1,
      -1,    32,    -1,    34,    35,    36,    -1,    38,  6071,    40,
      -1,    -1,    -1,    -1,    -1,  1480,   152,  6080,    49,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  6161,    -1,    -1,    -1,
    6093,  5865,    -1,  1498,   201,    -1,    32,    -1,    34,    35,
      36,   152,    38,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    49,    -1,    -1,    -1,  5891,    -1,    -1,
      -1,  6124,   152,    -1,  6001,   201,    -1,    -1,    -1,  6132,
      -1,  6134,  6135,    -1,   310,    -1,    -1,    -1,   152,    -1,
    6143,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     201,  6147,    -1,    -1,    -1,  6147,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   306,    -1,    -1,    -1,   310,    -1,    -1,
      -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6255,   152,    -1,  6186,    -1,  6259,    -1,   201,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   310,    -1,  6208,    -1,    -1,    -1,    -1,
    6087,  6088,    -1,    -1,  6217,    32,   152,    34,    35,    36,
      -1,    38,  6099,    40,  6227,  6228,    -1,    -1,  6231,    -1,
     201,    -1,    49,    -1,   310,  6238,    -1,  6312,  6313,    -1,
      -1,  6315,  6316,  6318,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  6259,    -1,    -1,   310,
    6263,    -1,    -1,    -1,    -1,   201,  6143,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6354,
     310,  6284,    32,    -1,    34,    35,    36,    -1,    38,    -1,
      40,    -1,    -1,    -1,    -1,    -1,   310,    -1,  6301,    49,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  6315,  6316,    -1,    -1,  6391,    -1,    -1,    -1,
    6197,    -1,    -1,  6200,  6327,    -1,    -1,   755,   756,   757,
      32,    -1,    34,    35,    36,   152,    38,    -1,    40,   310,
    6217,   277,    -1,    -1,    -1,    -1,   774,    49,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    34,    35,    36,    -1,    38,    -1,
      40,    -1,    -1,    -1,   310,    -1,    -1,    -1,    -1,    49,
     755,   756,   757,    -1,   201,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,
      -1,    -1,   152,    -1,    -1,  1908,    -1,  1910,  6411,    -1,
      -1,    -1,  6415,    -1,    -1,    -1,    -1,  6420,    -1,    -1,
      -1,    -1,  6425,    -1,    -1,    -1,    -1,    -1,  6431,    -1,
      -1,    -1,  1837,    -1,  1839,  6438,    -1,    -1,    -1,    -1,
      -1,    -1,  3908,  3909,    -1,  3911,  3912,    -1,    -1,    -1,
     152,   201,   755,   756,   757,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1968,  1969,    -1,    -1,   772,
      -1,  1974,    -1,    -1,    -1,  1978,  1979,  1980,    -1,    -1,
      -1,    -1,   152,    -1,    -1,    -1,  1989,  1990,    -1,    -1,
      -1,    -1,  1995,   310,    -1,    -1,  1999,  2000,  2001,   201,
    2003,  2004,  2005,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2013,    -1,  2015,    -1,    -1,  2018,  2019,  2020,  2021,    -1,
    2023,    -1,  2025,  2026,  2027,    -1,    -1,    -1,    -1,  2032,
      -1,   201,  2035,    -1,  4000,    -1,    -1,    -1,  2041,  2042,
      -1,  2044,  2045,  2046,  2047,  2048,  2049,  2050,  2051,  2052,
    2053,    -1,  2055,  2056,  2057,  2058,  2059,    -1,  2061,  2062,
     310,  2064,  2065,  2066,    -1,    -1,  2069,  2070,  2071,    -1,
    2073,  2074,  2075,    -1,  2077,    -1,  2079,    -1,  2081,   755,
     756,   757,  2085,  2086,  2087,    -1,    -1,  2090,  2091,  2092,
    2093,  2094,    -1,  2096,    -1,    -1,    -1,    -1,   774,    -1,
    2103,    -1,    -1,  2106,    -1,    -1,    -1,    -1,   310,    -1,
      -1,  2114,   755,   756,   757,  2118,  2119,  2120,  2121,    -1,
    2123,  2124,    -1,    -1,  2127,  2128,  2129,  2130,  2131,  2132,
    2133,  2134,  2135,  2136,  2137,  2138,  2139,    -1,    -1,  2142,
     310,     6,    -1,    -1,     6,    -1,    -1,    -1,   755,   756,
     757,    -1,    17,    18,    19,    17,    18,    19,  2063,    -1,
      -1,    -1,    -1,  2068,    -1,    -1,    -1,   774,    -1,    -1,
      -1,    -1,    -1,  2078,    -1,    -1,  2179,    -1,    -1,   755,
     756,   757,    -1,    45,    -1,    47,    48,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   774,    -1,
      -1,    -1,    -1,    -1,   755,   756,   757,    69,    -1,    71,
      -1,    -1,    -1,    -1,    32,    77,    34,    35,    36,    -1,
      38,    -1,    40,   774,    -1,   755,   756,   757,    -1,    -1,
      -1,    49,    -1,    98,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   755,   756,   757,   774,    -1,    -1,   109,    -1,    -1,
      -1,    -1,    -1,    -1,  2159,    -1,    -1,    -1,    -1,    -1,
     774,    -1,    -1,  2266,    -1,    -1,    32,    -1,    34,    35,
      36,    -1,    38,    -1,    40,    -1,   141,    -1,    -1,   141,
      -1,    -1,    -1,    49,   755,   756,   757,    -1,    -1,    -1,
      -1,  2294,    32,  2296,    34,    35,    36,    -1,    38,  2204,
      40,    -1,    -1,   774,  2209,    -1,  2211,   169,    -1,    49,
      32,    -1,    34,    35,    36,    -1,    38,    -1,    40,   755,
     756,   757,    -1,    -1,    -1,    -1,    -1,    49,  2331,    -1,
      -1,    -1,    -1,    -1,   152,    -1,   198,    -1,   200,    -1,
      -1,    -1,    -1,   208,    -1,    -1,   208,    -1,   210,    -1,
      -1,    -1,    -1,    -1,  2259,    -1,    32,    -1,    34,    35,
      36,    -1,    38,    -1,    40,    -1,  2271,    -1,    -1,    -1,
     232,    -1,    -1,    49,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   201,    -1,    -1,   152,    -1,    -1,    -1,
      32,    -1,    34,    35,    36,    -1,    38,    -1,    40,   353,
     265,   266,   267,   265,   266,   267,   360,    49,    -1,    -1,
      -1,    -1,   152,    -1,  2417,    -1,    -1,    -1,    -1,    -1,
      -1,   375,   287,    -1,    -1,   287,    -1,    -1,    -1,    -1,
     152,   385,   386,   387,    -1,   201,    -1,    -1,   755,   756,
     757,   395,    -1,    -1,    -1,  2448,    -1,    32,    -1,    34,
      35,    36,    -1,    38,    -1,    40,    -1,   774,    -1,    -1,
      -1,   201,    -1,    -1,    49,    -1,    -1,   329,    -1,    -1,
    2375,    -1,   337,    -1,   339,   337,   152,   339,    32,   201,
      34,    35,    36,    -1,    38,    -1,    40,  2392,    -1,    -1,
      -1,    -1,   310,   358,    -1,    49,   358,    -1,  2403,  2404,
      -1,    -1,    -1,   365,    -1,   755,   756,   757,    -1,    -1,
     152,   376,    -1,    -1,   376,    -1,    -1,    -1,   383,    -1,
      -1,   383,    -1,    -1,   774,   201,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   398,    -1,    -1,   398,    -1,    -1,    -1,
      -1,    -1,    -1,   408,   310,    -1,   408,    -1,    -1,    -1,
     412,   413,    -1,   755,   756,   757,    -1,   419,   423,   201,
      -1,   423,    -1,    -1,    -1,  2568,    -1,   152,    -1,   431,
     310,    -1,   774,    -1,    -1,    -1,    -1,  2482,    -1,    -1,
     534,    -1,    -1,  2488,    -1,   755,   756,   757,   310,    -1,
     452,    -1,   546,    -1,    -1,    -1,    -1,    -1,   152,    -1,
      -1,    -1,    -1,    -1,   774,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   476,   480,   201,    -1,   480,    -1,
      -1,    -1,    -1,    -1,    -1,   490,    -1,    -1,   490,    -1,
      -1,    -1,    -1,    32,   310,    34,    35,    36,    -1,    38,
      -1,    40,    -1,    -1,    -1,    -1,    -1,   201,    -1,    -1,
      49,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   526,    -1,    -1,   526,    -1,  2669,    -1,   310,    -1,
      -1,    -1,    -1,    -1,   539,    -1,  2679,   539,   632,   541,
      -1,    -1,    17,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   647,    -1,    -1,    -1,    -1,    -1,  2702,
      -1,    -1,    -1,  2706,    -1,    32,    -1,    34,    35,    36,
    2713,    38,    -1,    40,   579,    -1,    -1,   579,  2721,  2722,
     585,    -1,    49,   585,    -1,   310,    -1,    -1,    -1,    -1,
     684,    -1,    -1,    -1,    -1,    70,    -1,    72,    -1,    -1,
      -1,  2646,  2647,    -1,   698,    -1,    -1,    -1,   610,    -1,
      -1,    -1,    -1,   152,    -1,    -1,   310,    -1,    -1,   621,
     622,   623,    -1,    98,    -1,    -1,    -1,    -1,    -1,  2674,
      -1,    -1,    -1,  2776,    -1,    -1,    -1,    -1,   643,  2684,
      -1,   643,    -1,    -1,    -1,   650,    -1,    -1,   650,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   201,    -1,    -1,    -1,   141,    -1,    -1,  2812,
    2813,  2814,    -1,    -1,    -1,    -1,   681,    -1,    -1,   681,
      -1,    -1,    -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,
      -1,   696,   697,    -1,   696,   697,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   709,    -1,    -1,   709,    -1,    -1,
      -1,   713,  4818,  4819,  4820,  4821,  4822,  4823,  4824,  4825,
    4826,  4827,    -1,  4829,  4830,  4831,  4832,  4833,  4834,  4835,
    4836,  4837,  4838,   208,   201,  4841,  4842,    -1,    -1,    -1,
      -1,  2884,    -1,    -1,    -1,    32,    -1,    34,    35,    36,
      -1,    38,    -1,    40,    -1,    -1,    -1,    -1,    -1,  2902,
      -1,    -1,    49,  2906,  2907,    -1,  2909,  2910,    -1,    -1,
      -1,   310,    -1,   778,    -1,  2918,   778,  2920,    32,    -1,
      34,    35,    36,    -1,    38,    -1,    40,    -1,    -1,    -1,
     265,   266,   267,    -1,    -1,    49,    -1,   755,   756,   757,
      -1,    -1,    -1,    -1,    -1,  2948,    -1,    -1,  2853,    -1,
      -1,    -1,   287,  2858,   772,    32,    -1,    34,    35,    36,
      -1,    38,    32,    40,    34,    35,    36,    -1,    38,  4935,
      40,    -1,    49,  2976,  4940,    -1,    -1,  2980,    -1,    49,
      -1,    -1,    -1,   310,    -1,    -1,  2989,    -1,    -1,   755,
     756,   757,    32,    -1,    34,    35,    36,    -1,    38,  3002,
      40,    -1,   337,    -1,   339,   152,   772,    -1,    -1,    49,
      -1,    -1,    -1,    -1,    -1,   755,   756,   757,    -1,    -1,
      -1,   356,    -1,   358,    -1,  3028,    -1,    -1,    -1,    -1,
      -1,    -1,   772,   755,   756,   757,    -1,    -1,   152,    -1,
      -1,   376,    -1,    -1,    -1,    -1,    -1,    -1,   383,    -1,
     772,    -1,    -1,    32,   201,    34,    35,    36,    -1,    38,
      -1,    40,    -1,   398,    -1,    -1,  2971,  2972,    -1,  3072,
      49,    -1,    -1,   408,    -1,   152,    -1,    -1,    -1,   755,
     756,   757,   152,    -1,    -1,    -1,    -1,   201,   423,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   772,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3110,    -1,    -1,
      -1,    -1,   152,   755,   756,   757,    -1,    32,    -1,    34,
      35,    36,    -1,    38,   201,    40,    -1,    -1,    -1,    -1,
     772,   201,    -1,    -1,    49,    32,    -1,    34,    35,    36,
      -1,    38,    -1,    40,    -1,   480,    -1,    -1,    -1,    -1,
      -1,    -1,    49,    -1,    -1,   490,    -1,  3062,    -1,    -1,
      -1,   201,    -1,   310,    -1,    -1,    -1,    -1,    -1,    -1,
     755,   756,   757,   152,    -1,    32,    -1,    34,    35,    36,
    3085,    38,    32,    40,    34,    35,    36,   772,    38,    -1,
      40,   526,    49,    -1,  3197,    -1,   310,    -1,    -1,    49,
      -1,   755,   756,   757,   539,    -1,    -1,    -1,  3211,    -1,
    3213,  3214,    -1,    32,  5180,    34,    35,    36,   772,    38,
      -1,    40,   201,    -1,    -1,    -1,  5192,    -1,    -1,    -1,
      49,    -1,    -1,   310,    -1,    -1,    -1,   152,    -1,    -1,
     310,    -1,    -1,    -1,   579,    -1,    -1,  3152,    -1,    -1,
     585,    -1,    -1,    -1,    -1,   152,  3161,    -1,    -1,    -1,
    3165,    -1,    -1,    -1,    -1,    -1,  3171,    -1,    -1,  3272,
     310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3186,    -1,    -1,    -1,    -1,   201,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,
      -1,    -1,   152,    -1,   201,    -1,    -1,    -1,   643,    -1,
      -1,    -1,    -1,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      32,    -1,    34,    35,    36,    -1,    38,    -1,    40,    -1,
      -1,   310,    -1,   152,    -1,    -1,    -1,    49,    -1,    -1,
      -1,    -1,    -1,    -1,   201,    -1,   681,    -1,    -1,    -1,
      -1,   201,    -1,    -1,    -1,    -1,   755,   756,   757,    -1,
      -1,   696,   697,    -1,    -1,  3368,    -1,  3370,  3371,    -1,
      -1,    -1,    -1,   772,   709,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   310,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   310,    -1,    -1,    32,    -1,    34,    35,
      36,    -1,    38,    -1,    40,    -1,    -1,    -1,   755,   756,
     757,    -1,    -1,    49,    -1,    -1,    -1,    -1,    -1,   774,
     152,    -1,    -1,    -1,    -1,   772,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   310,    -1,    32,    -1,    34,    35,    36,
     310,    38,    -1,    40,    -1,    -1,    -1,    32,    -1,    34,
      35,    36,    49,    38,    -1,    40,    -1,    -1,    -1,  3482,
    3483,  3484,    -1,    -1,    49,  3488,  3489,    -1,    -1,   201,
    3493,   310,    -1,  3496,    -1,    -1,    -1,  3500,    -1,    -1,
      -1,  3504,  3505,    -1,    -1,  3410,    -1,    -1,  3413,    -1,
      -1,  3514,    -1,  3516,  3517,    -1,  3519,  3520,  3521,  3522,
      -1,  3524,    -1,  3526,  3527,    -1,  3529,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3537,  3538,   152,    -1,    -1,  3542,
    3543,  3544,  3545,    -1,    -1,  3548,  3549,    -1,    -1,  3552,
      -1,  3554,    -1,  3556,    -1,  3558,    -1,    -1,    -1,  3562,
      -1,    -1,    -1,    -1,    -1,    -1,  3569,    -1,  3571,    -1,
    3573,  3574,  3575,    -1,  3577,   152,    -1,  3580,  3581,  3582,
    3583,    -1,    -1,  3586,    -1,   201,    -1,   152,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3599,    -1,   310,  3602,
      -1,  3604,  3605,  3606,    -1,    -1,  3609,    -1,   755,   756,
     757,    32,  3615,    34,    35,    36,    -1,    38,    -1,    40,
      -1,    -1,    -1,    -1,   201,   772,    -1,    -1,    49,    -1,
    3633,    -1,  3635,    -1,    -1,  3638,   201,    -1,    -1,    -1,
      -1,   755,   756,   757,    -1,  3648,    -1,  3650,    -1,    -1,
      -1,    -1,  3655,    32,    -1,    34,    35,    36,   772,    38,
      -1,    40,    -1,    -1,    -1,    32,    -1,    34,    35,    36,
      49,    38,    -1,    40,    -1,    -1,    -1,    -1,   755,   756,
     757,    -1,    49,    -1,    -1,   755,   756,   757,    -1,    -1,
      -1,    -1,    -1,    -1,   310,   772,    -1,    -1,    -1,    -1,
    3703,    32,   772,    34,    35,    36,    -1,    38,    -1,    40,
      -1,    -1,  3715,    -1,    -1,   755,   756,   757,    49,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   152,   772,   310,    32,    -1,    34,    35,    36,    -1,
      38,    -1,    40,    -1,    32,   310,    34,    35,    36,    -1,
      38,    49,    40,    -1,    -1,    -1,    -1,    -1,  3761,    -1,
      -1,    49,    -1,    -1,  3669,    -1,    -1,    -1,  3673,    -1,
      -1,    -1,    -1,   152,    -1,    -1,   755,   756,   757,  3782,
     201,    -1,    -1,    -1,    -1,   152,    -1,    -1,    32,    -1,
      34,    35,    36,   772,    38,    -1,    40,    -1,    32,    -1,
      34,    35,    36,    -1,    38,    49,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    49,    -1,    -1,    -1,    -1,
      -1,   152,   201,    -1,    -1,    -1,    -1,    32,    -1,    34,
      35,    36,    -1,    38,   201,    40,    -1,    -1,    -1,    -1,
     755,   756,   757,    -1,    49,    -1,    -1,    -1,    -1,    -1,
    3853,    -1,    -1,    -1,   152,    -1,    -1,   772,   755,   756,
     757,    -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,
     201,  3874,    -1,    -1,    -1,   772,    -1,    -1,    -1,    32,
      -1,    34,    35,    36,    -1,    38,    -1,    40,    -1,   310,
      -1,    -1,    -1,    -1,    -1,    -1,    49,    -1,   755,   756,
     757,    -1,  3905,   201,    -1,   755,   756,   757,   152,    -1,
      -1,    -1,    -1,   201,    -1,   772,    -1,    -1,   152,    -1,
      -1,    -1,   772,    -1,    -1,    -1,    -1,    -1,  3931,  3932,
      -1,   310,    -1,    -1,    -1,    -1,   755,   756,   757,   674,
      -1,  3846,    32,   310,    34,    35,    36,   152,    38,    -1,
      40,    -1,  3857,   772,    -1,    -1,  3861,   201,    -1,    49,
      32,    -1,    34,    35,    36,    -1,    38,   201,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    49,    -1,   310,
      -1,    -1,    -1,    -1,    -1,    -1,   721,    -1,    -1,    -1,
      -1,    -1,  3995,  3996,    -1,    -1,   201,  5963,  5964,   152,
    5966,  5967,  5968,  5969,    -1,    -1,    -1,    -1,    -1,    -1,
    4013,    -1,   310,    -1,    -1,    -1,    -1,    32,    -1,    34,
      35,    36,   310,    38,    -1,    40,    -1,    -1,  4031,    -1,
      -1,    -1,    -1,    -1,    49,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   755,   756,   757,    -1,    32,   201,    34,
      35,    36,    -1,    38,    -1,    40,    -1,    -1,    -1,    -1,
     772,    -1,   152,    -1,    49,    32,   310,    34,    35,    36,
      -1,    38,    -1,    40,    -1,    -1,   310,    -1,    -1,  4082,
     152,    -1,    49,    32,    -1,    34,    35,    36,    -1,    38,
      -1,    40,    -1,    32,    -1,    34,    35,    36,  4101,    38,
      49,    40,    -1,    -1,    -1,   310,    -1,    -1,   843,  4112,
      49,   201,  4115,    -1,    -1,  4118,    -1,    -1,    -1,    -1,
    6086,    -1,    -1,  6089,    -1,    -1,    -1,    -1,    -1,   201,
      -1,  6097,    -1,    -1,  6100,    -1,    -1,   152,    -1,   755,
     756,   757,  4145,  4146,    -1,    -1,    -1,  4150,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   772,   310,    -1,    -1,
    4065,    -1,    -1,    -1,    -1,    -1,    -1,   152,  4171,    -1,
    4173,    -1,  4175,    -1,  4177,    -1,    -1,    -1,   755,   756,
     757,    -1,    -1,    -1,    -1,   152,   201,    -1,  4093,    -1,
     755,   756,   757,    -1,  4197,   772,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   152,    -1,    -1,    -1,   772,    -1,    -1,
      -1,    -1,    -1,   152,  4217,  4218,   201,    -1,    -1,  4222,
     310,  4224,    -1,  4226,    -1,    -1,    -1,    -1,  4231,    -1,
      -1,    -1,    -1,    -1,   201,    -1,    -1,    -1,   310,    32,
    4243,    34,    35,    36,    -1,    38,    -1,    40,    -1,    -1,
      -1,    -1,   201,    -1,    -1,    -1,    49,    -1,    -1,    -1,
      -1,    32,   201,    34,    35,    36,    -1,    38,    -1,    40,
    1005,  4274,    -1,    -1,    -1,    -1,    -1,    -1,    49,    -1,
      -1,    -1,    -1,    -1,    -1,  4288,  1021,    -1,    -1,  4292,
    1025,    -1,    -1,    -1,    32,   310,    34,    35,    36,    -1,
      38,    -1,    40,    -1,    -1,    -1,    -1,  4310,    -1,    -1,
      -1,    49,    -1,    -1,  1049,    -1,    -1,    -1,  1053,    -1,
      -1,    -1,    -1,  1058,    -1,   310,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   755,   756,   757,    -1,    -1,    -1,
      -1,    -1,    -1,   310,    -1,    -1,    -1,    -1,    -1,    -1,
    4255,   772,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,
      -1,   310,    -1,    -1,    -1,  4368,  4369,    -1,    -1,    -1,
      -1,   310,    -1,    -1,    -1,    -1,   755,   756,   757,    -1,
      -1,   152,    -1,    -1,    -1,    -1,    -1,    -1,   755,   756,
     757,    -1,    -1,   772,    -1,    -1,    -1,  4400,    -1,    -1,
    1135,  1136,  1137,  1138,    -1,   772,  1141,  4410,   201,    -1,
      -1,    -1,  1147,    -1,   152,    -1,    -1,    -1,    -1,  4422,
      -1,  4424,    -1,    -1,   755,   756,   757,    -1,    -1,    32,
     201,    34,    35,    36,    -1,    38,    32,    40,    34,    35,
      36,   772,    38,    -1,    40,    -1,    49,    -1,    -1,    -1,
      -1,    -1,    -1,    49,    -1,    -1,  4361,   755,   756,   757,
      -1,  4366,  4367,   201,    -1,    -1,    -1,   755,   756,   757,
      -1,    -1,    -1,    32,   772,    34,    35,    36,    -1,    38,
      -1,    40,    -1,    -1,   772,    -1,    -1,    -1,  4491,    -1,
      49,  4396,  4397,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1238,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   755,   756,   757,    -1,    -1,    -1,   310,    -1,    -1,
      -1,   755,   756,   757,    -1,    -1,    -1,    -1,   772,    -1,
      -1,    -1,    -1,    -1,  4537,    -1,    -1,    -1,   772,   310,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,
     755,   756,   757,    -1,    -1,    -1,   152,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   772,    -1,    -1,
      -1,    -1,   310,    -1,    -1,    -1,    -1,    -1,    32,    -1,
      34,    35,    36,    -1,    38,    -1,    40,  1322,    -1,    -1,
      -1,  1326,    -1,   152,    -1,    49,    -1,    -1,   201,    -1,
      -1,    -1,   755,   756,   757,   201,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   772,
    4623,  4624,    -1,  4626,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4637,    -1,  4639,    -1,    -1,  4642,
      -1,    -1,   201,    -1,    -1,    -1,    -1,    -1,    -1,  4652,
      -1,  4654,    -1,  4656,    -1,  4658,    -1,  4660,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   755,   756,   757,    -1,  4672,
    4673,    -1,   126,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   772,   755,   756,   757,    -1,    -1,    -1,  1424,
      -1,    -1,    -1,    32,  4697,    34,    35,    36,   152,    38,
     772,    40,    -1,    -1,    -1,    -1,    -1,   310,    -1,    -1,
      49,    -1,    -1,    -1,   310,    32,    -1,    34,    35,    36,
      -1,    38,  1457,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    49,    -1,    -1,    -1,    -1,    -1,  4741,    -1,
     755,   756,   757,  4746,  4747,    -1,    -1,   201,    -1,    -1,
      -1,   310,    -1,    -1,    -1,    -1,    -1,   772,    -1,    -1,
      -1,    -1,  4765,    -1,    -1,    -1,  4769,  1502,    -1,    -1,
     755,   756,   757,    -1,    -1,    -1,    17,    18,    19,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   772,   755,   756,
     757,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    -1,
      -1,    -1,    -1,    -1,    -1,   772,   755,   756,   757,    -1,
      -1,    52,    -1,   152,    -1,    -1,   755,   756,   757,    -1,
      -1,    -1,    32,   772,    34,    35,    36,    -1,    38,    -1,
      40,    72,    -1,   772,    -1,   152,    -1,    -1,    -1,    49,
      -1,    42,    52,    -1,  4847,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   310,    98,    -1,    -1,
      -1,    -1,   201,    -1,    -1,    -1,    67,    -1,    32,    -1,
      34,    35,    36,    -1,    38,    76,    40,    -1,    -1,    -1,
      -1,    -1,    87,    -1,   201,    49,    -1,    -1,    -1,    32,
      -1,    34,    35,    36,    -1,    38,    97,    40,    -1,    -1,
      -1,    -1,  4807,    -1,    -1,    -1,    49,    -1,    -1,    -1,
      -1,    -1,  4817,    -1,    -1,   156,    -1,    -1,    -1,    -1,
     121,    -1,   127,    -1,   125,    -1,    32,   128,    34,    35,
      36,    -1,    38,    -1,    40,    -1,   141,   138,    -1,    -1,
      -1,    -1,   152,    49,    -1,    -1,    -1,    -1,    -1,   190,
      -1,    -1,   153,  4956,   195,    -1,   197,    -1,    -1,    -1,
     161,    -1,   755,   756,   757,    -1,  4969,  4970,    -1,    -1,
      -1,   310,   173,    -1,    -1,    -1,   217,    -1,    -1,   772,
      -1,    -1,    -1,   126,   755,   756,   757,    -1,   152,    -1,
      -1,   201,    -1,   310,   195,    -1,    32,    -1,    34,    35,
      36,   772,    38,    -1,    40,    17,    18,    19,    -1,   152,
      -1,    -1,    -1,    49,    -1,    -1,    -1,   755,   756,   757,
     126,  5024,    -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,
      -1,  5034,   233,    -1,   772,    -1,    -1,   201,   239,   240,
      -1,    -1,    -1,    -1,    -1,    -1,   152,   288,    -1,    -1,
     255,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,    -1,
      72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     275,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   288,    -1,    -1,    98,    -1,    -1,    -1,
     126,    -1,    -1,  5096,    -1,   201,   337,    -1,    -1,    -1,
     310,    -1,    -1,    -1,    -1,    -1,    -1,   308,    -1,    -1,
      -1,    -1,    -1,   277,    -1,    -1,   152,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   329,    -1,  5129,  5130,    -1,    -1,
      32,    -1,    34,    35,    36,   376,    38,    -1,    40,    -1,
      -1,    -1,   343,    -1,   156,    -1,   310,    49,    -1,    -1,
    5153,    -1,   755,   756,   757,    -1,    -1,    -1,    -1,   755,
     756,   757,    -1,   364,  1899,   201,    -1,   310,    -1,   772,
      -1,    -1,    -1,  1908,    -1,  1910,   772,    -1,   190,    -1,
      -1,    -1,    -1,   195,    -1,   197,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   755,   756,   757,    -1,
      -1,   406,    -1,    -1,   310,   217,    -1,    -1,  5211,    -1,
    5213,    -1,    -1,   772,    -1,    -1,    -1,   458,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5230,    -1,  5232,
      -1,    -1,    -1,  1968,  1969,    -1,   437,    -1,    -1,  1974,
      -1,    -1,    -1,  1978,  1979,  1980,    -1,   488,    -1,    -1,
     152,    -1,    -1,    -1,  1989,  1990,  1991,    -1,    -1,    -1,
    1995,    -1,    -1,    -1,  1999,  2000,  2001,    -1,  2003,  2004,
    2005,  2006,  2007,  5178,   310,    -1,   288,    -1,  2013,    -1,
    2015,    -1,    -1,  2018,  2019,  2020,  2021,    -1,  2023,    -1,
    2025,  2026,  2027,    -1,    -1,    -1,    -1,  2032,    -1,   201,
    2035,   755,   756,   757,    -1,    -1,  2041,  2042,  5311,  2044,
    2045,  2046,  2047,  2048,  2049,  2050,  2051,  2052,  2053,    -1,
    2055,  2056,  2057,  2058,  2059,   337,  2061,  2062,    -1,  2064,
    2065,  2066,    -1,    -1,  2069,  2070,  2071,  5340,  2073,  2074,
    2075,    -1,  2077,    -1,  2079,    -1,  2081,    -1,    -1,  5352,
    2085,  2086,  2087,    -1,    -1,  2090,  2091,  2092,  2093,  2094,
      -1,  2096,    -1,  5366,   376,    -1,    -1,    -1,  2103,   381,
      -1,  2106,    -1,   574,    -1,    -1,    -1,    -1,    -1,  2114,
      -1,    -1,    -1,  2118,  2119,  2120,  2121,    -1,  2123,  2124,
    5393,  5296,  2127,  2128,  2129,  2130,  2131,  2132,  2133,  2134,
    2135,  2136,  2137,  2138,  2139,    -1,    -1,  2142,   310,    -1,
      -1,   652,  2147,    -1,  5417,  5418,   755,   756,   757,  2154,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,   636,    -1,   772,    -1,    -1,    -1,    -1,   755,   756,
     757,    -1,    -1,    -1,  2179,   650,    -1,    -1,    -1,   654,
      -1,    -1,    -1,    54,  5457,   772,    -1,    32,    -1,    34,
      35,    36,  2197,    38,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    49,    -1,   488,    52,    -1,    32,
      -1,    34,    35,    36,    -1,    38,    -1,    40,    -1,    -1,
      -1,    -1,    -1,    -1,   699,    -1,    49,    -1,    32,    -1,
      34,    35,    36,   744,    38,  5508,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    49,    -1,    -1,    52,   120,
      -1,    -1,   727,    -1,    -1,    -1,    -1,    -1,    -1,  5532,
      -1,  2266,    -1,    -1,    -1,    -1,    -1,    -1,    91,    92,
      93,    94,    -1,    -1,    -1,   755,   756,   757,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2294,
      -1,  2296,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   774,    -1,    -1,    -1,   152,    -1,    -1,
      -1,    -1,   135,   136,   137,  2320,    -1,    -1,    -1,    -1,
      -1,   755,   756,   757,   195,    -1,  2331,    -1,    -1,   152,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   755,   756,   757,    -1,    -1,    -1,   152,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   201,    -1,    -1,  5632,
      -1,   184,   185,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     652,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,   755,
     756,   757,    -1,    -1,    -1,  5658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5668,    -1,   201,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    -1,
      -1,    -1,  2417,    -1,   285,  5688,    -1,  2422,    -1,    -1,
      -1,    -1,    -1,   246,    -1,    -1,    -1,    -1,    -1,    -1,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    -1,    -1,  2448,   674,    -1,    -1,    -1,  5721,   755,
     756,   757,    -1,    -1,    -1,  5630,    -1,    -1,    -1,    -1,
      -1,    -1,   744,    -1,  5737,   310,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   310,   311,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,    67,    -1,    -1,   310,    -1,    -1,    18,
      19,    -1,    76,    -1,    -1,    -1,    -1,    -1,  5693,    -1,
      -1,    -1,   393,    -1,    -1,    -1,    -1,    -1,    -1,   120,
     401,    -1,    -1,    97,  5807,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   121,    -1,    -1,
      -1,   125,    -1,    -1,   128,    -1,    -1,    -1,    18,    19,
      -1,    42,   195,    -1,   138,    -1,    -1,    -1,    -1,   402,
      -1,    -1,    -1,   755,   756,   757,    -1,    -1,    -1,   153,
      -1,  5864,  5865,    -1,    -1,  5868,    67,   161,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    76,    56,    -1,    10,   173,
      12,    -1,    -1,   843,    -1,    17,    18,    19,  5891,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    97,    -1,    -1,    -1,
      -1,   195,    -1,    91,    92,    93,    94,    -1,    -1,    -1,
      -1,   112,   113,   114,    -1,    -1,    -1,    -1,   471,    -1,
     121,    -1,    -1,    -1,   125,    -1,    -1,   128,  5931,    -1,
      -1,    -1,   285,    -1,  2669,    -1,    -1,   138,    70,   233,
      72,    -1,    -1,    -1,    -1,   239,   240,   135,   136,   137,
      -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     161,    -1,    -1,    -1,   285,    -1,    98,    -1,    -1,    -1,
      -1,    -1,   173,    -1,  5977,    -1,    -1,  2712,  2713,    -1,
    5983,  5984,   535,    -1,   537,    -1,  2721,  2722,    -1,    -1,
     543,    -1,    -1,    -1,   195,    -1,   184,   185,    -1,    -1,
      -1,    -1,  6005,    -1,    -1,    -1,    -1,    -1,    -1,   141,
      -1,    -1,  6015,    -1,   308,    -1,    -1,    -1,    -1,    -1,
    6023,  5926,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,
      -1,   163,   233,    -1,    -1,    -1,   275,    -1,   239,   240,
     393,  2776,    -1,    -1,    -1,    -1,    -1,    -1,   401,   343,
      -1,   604,  2787,  2788,  6057,    -1,    -1,    -1,   246,    -1,
      -1,    -1,    -1,  6066,    -1,  1025,    -1,    -1,    -1,    -1,
     364,    -1,    -1,    -1,    -1,    -1,   208,  2812,  2813,  2814,
     401,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,  1049,
      -1,    -1,    -1,    -1,    -1,   648,    -1,    -1,  1058,    -1,
      -1,  6104,    -1,   704,    -1,   306,   707,   308,    -1,    -1,
      -1,    -1,    -1,  6116,    -1,    -1,   717,  6120,    -1,    -1,
      -1,    -1,    -1,   311,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   265,   266,   267,    -1,    -1,  2873,    -1,
    6045,    -1,   343,   437,  6147,    -1,    -1,    -1,    -1,  2884,
      -1,    -1,  2887,    -1,    -1,   287,    -1,    -1,  6161,    -1,
      -1,    -1,    -1,   364,    -1,    -1,    -1,  2902,    -1,    -1,
     409,  2906,  2907,    -1,  2909,  2910,    -1,    -1,  1138,    -1,
     755,   756,   757,  2918,   423,  2920,   425,   740,    -1,    -1,
    6193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   751,    -1,
      -1,    -1,   755,   756,   757,   337,    -1,   339,    -1,    -1,
      -1,    -1,    -1,  2948,   402,    -1,  6219,  6220,   457,   420,
      -1,   755,   756,   757,   356,    -1,   358,    -1,    -1,   409,
      -1,   470,    -1,    -1,    -1,    -1,   437,    -1,    -1,    -1,
      -1,  2976,    -1,   423,   376,   425,    -1,    -1,    -1,    -1,
      -1,   383,  6255,    -1,  2989,    -1,    -1,    -1,  2993,    -1,
      -1,    -1,   107,   502,    -1,    -1,   398,  3002,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   408,   457,    -1,    -1,
     574,   520,    -1,   471,    -1,    -1,    -1,    -1,    -1,    -1,
     470,   423,    -1,  3028,   139,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  6305,    -1,  6307,  6308,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   502,    -1,    -1,  6328,    -1,    -1,    -1,  6332,
     175,    -1,    -1,    -1,    -1,    -1,    -1,  3072,    -1,    -1,
     520,    -1,    -1,    -1,  3079,  6348,    -1,   535,   480,   537,
      -1,   704,    -1,    -1,   707,   543,    -1,    -1,   490,   598,
      -1,    -1,  1322,    -1,   717,    -1,   605,    -1,    -1,    -1,
      -1,    -1,    -1,   574,    -1,  6378,   615,    -1,    -1,    -1,
    3115,  3116,    -1,   704,    -1,    -1,   707,    -1,    -1,    -1,
     629,    -1,    -1,    -1,   526,  6398,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   539,    -1,    42,
      -1,    -1,    -1,    -1,    -1,    -1,   604,    -1,   598,    -1,
      -1,   660,    -1,    -1,   663,   605,    -1,    42,    -1,    -1,
      -1,   725,    -1,    -1,    67,   615,    -1,    -1,  6441,    -1,
     679,    -1,    -1,    76,    -1,    -1,    -1,   579,    -1,   629,
      -1,    -1,    67,   585,    -1,    -1,   695,    -1,    -1,    -1,
     648,    76,  3197,    -1,    97,    -1,    -1,    -1,    -1,    -1,
    3205,   710,  3207,  3208,  3209,    -1,  3211,    -1,  3213,  3214,
     660,    -1,    97,   663,    -1,    -1,    -1,    -1,   121,    -1,
      -1,    -1,   125,    -1,    -1,   128,    -1,  1457,    -1,   679,
      -1,    -1,    -1,    -1,    -1,   138,   121,    -1,    -1,    -1,
     125,   643,    -1,   128,    -1,    -1,    -1,    -1,   650,    -1,
     153,    -1,    -1,   138,    -1,    -1,    -1,    -1,   161,    -1,
     710,    -1,    -1,    -1,    -1,    -1,    -1,  3272,   153,    -1,
     173,    -1,  1502,    -1,    -1,    -1,   161,    -1,    -1,   681,
      -1,    -1,   740,    -1,    -1,    -1,    -1,    -1,   173,    -1,
      -1,    -1,   195,   751,   696,   697,    -1,    18,    19,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   709,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,    -1,
     233,    -1,    -1,    -1,    -1,    56,   239,   240,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    70,
      -1,    -1,    -1,    -1,   239,   240,    -1,    78,    79,   474,
      -1,    -1,    -1,    -1,    -1,  3370,  3371,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   503,   504,
      -1,   506,   507,   508,   509,   510,    -1,   512,   513,   514,
     515,   516,   517,   518,   519,   308,   521,   522,   523,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     141,    -1,    -1,   308,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   316,    -1,  3438,   155,    -1,    -1,    -1,    -1,    -1,
     343,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   343,    -1,
      -1,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   364,
      -1,    -1,    -1,    -1,  3489,    -1,   207,    -1,  3493,    -1,
      -1,  3496,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
    3505,    -1,   617,   618,    -1,    -1,    -1,    -1,    -1,  3514,
      -1,  3516,  3517,    -1,  3519,  3520,  3521,  3522,    -1,  3524,
      -1,  3526,  3527,    -1,  3529,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3537,  3538,   437,   420,    -1,  3542,  3543,  3544,
    3545,    -1,    -1,  3548,  3549,    -1,    -1,  3552,    -1,  3554,
      -1,  3556,   437,  3558,   275,    -1,    -1,  3562,    -1,    -1,
      -1,    -1,    -1,    -1,  3569,    -1,  3571,    -1,  3573,  3574,
    3575,    -1,  3577,    -1,    -1,  3580,  3581,  3582,  3583,    -1,
      -1,  3586,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3599,    -1,    -1,  3602,   319,  3604,
    3605,  3606,    -1,    -1,  3609,    -1,    -1,    -1,    -1,    -1,
    3615,    -1,    -1,    -1,   335,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   344,    -1,    -1,    -1,    -1,  3633,    -1,
    3635,    -1,    -1,  3638,    -1,   356,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3648,  3649,  3650,   367,    -1,    -1,    -1,
    3655,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3666,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   390,
      -1,   574,    -1,    -1,    -1,    -1,    -1,    -1,  1908,    -1,
    1910,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   574,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3703,    -1,
      -1,   422,   423,    -1,    -1,   426,    -1,   428,    -1,    -1,
    3715,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3731,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   455,   456,    -1,    -1,    -1,    -1,
     461,   462,    -1,    -1,  1974,    -1,    -1,    -1,  1978,    -1,
    1980,    -1,    -1,    -1,    -1,    -1,  3761,   478,    -1,  1989,
    1990,    -1,    -1,    -1,    -1,  1995,    -1,    -1,    -1,  1999,
    2000,  2001,    -1,  2003,  2004,  2005,    -1,  3782,   499,    -1,
      -1,    -1,    -1,  2013,    -1,  2015,    -1,    -1,  2018,  2019,
    2020,  2021,    -1,    -1,    -1,  2025,  2026,  2027,    -1,   520,
      -1,    -1,  2032,    -1,    -1,  2035,    -1,    -1,    -1,    -1,
      -1,  2041,  2042,    -1,  2044,    -1,  2046,  2047,  2048,  2049,
    2050,  2051,    -1,  2053,    -1,  2055,  2056,  2057,  2058,  2059,
      -1,  2061,  2062,    -1,  2064,  2065,  2066,    -1,    -1,  2069,
      -1,  2071,    -1,  2073,  2074,  2075,    -1,  2077,  3853,  2079,
      -1,  2081,    -1,   574,    -1,  2085,  2086,  2087,    -1,    -1,
    2090,  2091,    -1,  2093,  2094,    -1,  2096,    -1,   589,  3874,
      -1,    -1,    -1,  2103,    -1,    -1,  3881,   598,    -1,    -1,
     601,   602,    -1,    -1,  2114,    -1,    -1,    -1,  2118,  2119,
      -1,    -1,    -1,    -1,    -1,   616,    42,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    17,
      18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    67,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      76,    -1,   653,    17,    18,    19,    17,    18,    19,   660,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2179,
      -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,   679,    -1,
     681,    45,    70,    47,    72,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   121,    -1,    -1,    -1,   125,
      -1,    -1,   128,    -1,    -1,    69,    -1,    -1,    -1,    -1,
      98,    -1,   138,    77,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   153,    -1,    -1,
      -1,   732,    -1,    -1,    98,   161,    -1,    98,   739,    -1,
      -1,    -1,    -1,    -1,    -1,   109,    -1,   173,    -1,    -1,
      -1,    -1,    -1,   141,    -1,    -1,  2266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     141,    -1,    -1,  4068,  2294,    -1,  2296,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4082,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   169,    -1,   233,    -1,    -1,
      -1,    -1,    -1,   239,   240,    -1,  4101,    -1,    -1,    -1,
     208,  2331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4115,    -1,    -1,  4118,    -1,    -1,   200,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4145,  4146,    -1,    -1,    -1,  4150,    -1,    -1,   232,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   265,   266,   267,
      -1,    -1,   308,    -1,    -1,    -1,  4171,    -1,  4173,    -1,
    4175,    -1,  4177,    -1,    -1,    -1,    -1,    -1,    -1,   287,
      -1,   265,   266,   267,   265,   266,   267,  2417,    -1,    -1,
      -1,    -1,  4197,    -1,    -1,    -1,    -1,   343,  4203,    -1,
      -1,    -1,    -1,   287,    -1,    -1,   287,    -1,    -1,    -1,
      -1,    -1,  4217,  4218,    -1,    -1,    -1,  4222,   364,  4224,
      -1,  4226,    -1,    -1,    -1,    -1,  4231,    -1,    -1,   337,
      -1,   339,    -1,    -1,    -1,    -1,    -1,    -1,  4243,    -1,
      -1,    -1,    -1,    -1,    47,   329,    -1,    -1,   356,    -1,
     358,    -1,    -1,   337,    -1,   339,   337,    -1,   339,    -1,
      -1,    -1,    -1,  4268,    -1,    -1,    -1,    -1,   376,  4274,
      -1,    -1,    -1,    -1,   358,   383,    79,   358,    -1,    -1,
      -1,    -1,    -1,  4288,    -1,    -1,    -1,  4292,    -1,    -1,
     398,   437,   376,    -1,    -1,   376,    -1,   100,    -1,   383,
     408,    -1,   383,    -1,    -1,  4310,   109,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   398,   423,    -1,   398,    -1,    -1,
      -1,    -1,    -1,    -1,   408,  4330,   129,   408,   412,    -1,
      -1,    -1,    -1,    -1,    -1,   419,    -1,    -1,   141,   423,
      -1,    -1,   423,   146,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   169,    -1,   452,    -1,
      -1,    -1,   480,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   490,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4400,   480,    -1,    -1,   480,
      -1,    -1,    -1,    -1,    -1,  4410,   490,    42,    -1,   490,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4422,   526,  4424,
      -1,   224,    -1,    -1,    -1,   228,    -1,    -1,   574,    -1,
      -1,   539,    67,    -1,    -1,    -1,    -1,    -1,    -1,  2669,
      -1,    76,   526,    -1,   247,   526,    -1,    -1,   251,   252,
      -1,    -1,    -1,    -1,    -1,   539,    -1,   541,   539,    -1,
      -1,    -1,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   579,    -1,    -1,    -1,    -1,    -1,   585,    -1,    -1,
     283,    -1,    -1,  2713,    -1,    -1,   121,    -1,   291,   292,
     125,  2721,  2722,   128,    -1,   579,    -1,    -1,   579,    -1,
      -1,   585,    -1,   138,   585,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   161,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   643,    -1,    -1,   173,    -1,
      -1,   344,   650,    -1,    -1,    -1,  2776,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   643,
     195,    -1,   643,    -1,    -1,    -1,   650,    -1,    -1,   650,
      -1,    -1,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     383,    -1,  2812,  2813,  2814,    -1,    -1,    -1,   696,   697,
      -1,    -1,    -1,    -1,    -1,    42,    -1,   681,   233,    -1,
     681,   709,    -1,    -1,   239,   240,    -1,    -1,    -1,    -1,
      -1,    -1,   696,   697,    42,   696,   697,    -1,  4623,  4624,
      67,  4626,    -1,    -1,    -1,   709,   429,    -1,   709,    76,
      -1,   434,  4637,    -1,  4639,    -1,    -1,  4642,    -1,    67,
      -1,    -1,   445,   446,    -1,    -1,    -1,    -1,    76,  4654,
      97,  4656,    -1,  4658,    -1,  4660,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4672,  4673,    97,
      -1,    -1,  2902,   308,   121,    -1,    -1,    -1,   125,    -1,
      -1,   128,    -1,    -1,    -1,    -1,    -1,    -1,  2918,    -1,
    2920,   138,  4697,   121,    -1,    -1,    -1,   125,    -1,    -1,
     128,    -1,    -1,    -1,    -1,    -1,   153,    -1,   343,    -1,
     138,    -1,    -1,    -1,   161,    -1,    -1,    -1,  2948,    -1,
      -1,    -1,    -1,    -1,    -1,   153,   173,    -1,    -1,   364,
      -1,    -1,    -1,   161,    -1,    -1,  4741,    -1,    -1,    -1,
      -1,  4746,  4747,    -1,    -1,   173,  2976,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2989,
    4765,    -1,    -1,    -1,  4769,    -1,    -1,   195,    -1,    -1,
      -1,    -1,  3002,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   420,   233,    -1,    -1,    -1,
      -1,    -1,   239,   240,    -1,    -1,   599,    -1,  3028,    -1,
      -1,    -1,   437,    -1,    -1,   233,   609,    -1,    -1,    -1,
      -1,   239,   240,    -1,    -1,    -1,    -1,   620,    -1,    -1,
      -1,    -1,    -1,   626,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3072,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   657,    -1,    -1,   660,    -1,    -1,
      -1,   308,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     308,    -1,    -1,    -1,    -1,    -1,   689,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   343,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   343,    -1,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   364,    -1,    -1,   574,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4969,  4970,    -1,  3197,    -1,    -1,
      -1,    -1,    -1,   420,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3211,    -1,  3213,  3214,    -1,    -1,    -1,    -1,    -1,
     437,    -1,   420,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   437,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5034,
      -1,    -1,    -1,    -1,  5039,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5096,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5129,  5130,    -1,   574,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3370,  3371,    -1,    -1,    -1,    -1,   574,    -1,  5153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5230,    -1,  5232,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3489,
      -1,    -1,    -1,  3493,    -1,    -1,  3496,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3514,    -1,    -1,    -1,    -1,  3519,
    3520,  3521,  3522,    -1,  3524,    -1,  3526,  3527,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3537,  3538,    -1,
      -1,    -1,  3542,  3543,  3544,  3545,    -1,    -1,  3548,  3549,
      -1,    -1,  3552,    -1,  3554,    -1,  3556,    -1,  3558,    -1,
      -1,    -1,  3562,    -1,    -1,  5340,    -1,    -1,    -1,  3569,
      -1,  3571,    -1,  3573,    -1,  3575,    -1,  3577,    -1,    -1,
    3580,  3581,  3582,  3583,    -1,    -1,  3586,    -1,    -1,    -1,
      -1,  5366,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3602,    -1,  3604,  3605,  3606,    -1,    -1,  3609,
      -1,    -1,    -1,    -1,    -1,  3615,    -1,    -1,  5393,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3638,    -1,
      -1,    -1,  5417,  5418,    -1,    -1,    -1,    -1,    -1,    -1,
    3650,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3703,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3715,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3761,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3782,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5632,    -1,    -1,
    5635,  5636,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3874,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5668,    -1,    -1,    -1,  5672,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5688,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5807,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4082,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4101,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4115,    -1,    -1,  4118,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4145,  4146,    -1,    -1,    -1,
    4150,    -1,    -1,    -1,    -1,    -1,  5931,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4171,    -1,  4173,    -1,  4175,    -1,  4177,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4197,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4217,  4218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6015,    -1,    -1,  4243,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  6057,    -1,    -1,    -1,    -1,    -1,  4288,    -1,
      -1,  6066,  4292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  6147,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4400,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6193,    -1,
      -1,    -1,  4422,    -1,  4424,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  6328,    -1,    -1,    -1,  6332,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4623,  4624,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4637,    -1,  4639,
      -1,    -1,  4642,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4654,    -1,  4656,    -1,  4658,    -1,
    4660,    -1,    -1,    -1,    -1,    -1,  6441,    -1,    -1,    -1,
      -1,    -1,  4672,  4673,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4741,    -1,    -1,    -1,    -1,  4746,  4747,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4765,    -1,    -1,    -1,  4769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4969,
    4970,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5034,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5096,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5129,
    5130,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5230,    -1,  5232,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5366,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5393,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5417,  5418,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5632,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5668,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5688,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5931,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,    -1,
      -1,     7,     8,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    -1,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,  6066,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      56,    57,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    67,    68,    -1,    70,    -1,    -1,    -1,    -1,    -1,
      -1,    77,    78,    -1,    -1,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  6147,    -1,    -1,
      -1,    -1,   118,   119,   120,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   130,   131,   132,    -1,    -1,    -1,
      -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,   149,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     176,   177,    -1,   179,    -1,    -1,    -1,   183,    -1,    -1,
      -1,   187,    -1,    -1,   190,    -1,   192,   193,   194,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   211,   212,   213,    -1,   215,
      -1,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,   234,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   261,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6328,   295,
     296,   297,    -1,    -1,   300,    -1,    -1,   303,   304,    -1,
      -1,    -1,    -1,   309,    -1,    -1,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,  6441,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,    -1,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,    -1,   748,   749,   750,   751,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   760,   761,    -1,    -1,    -1,     3,
     766,    -1,    -1,     7,     8,   771,    -1,    -1,    -1,   775,
     776,    -1,    -1,   779,    18,    19,    -1,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    56,    57,    58,    59,    -1,    -1,    -1,    63,
      -1,    -1,    -1,    67,    68,    -1,    70,    -1,    -1,    -1,
      -1,    -1,    -1,    77,    78,    -1,    -1,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   118,   119,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   130,   131,   132,    -1,
      -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,   149,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   158,   159,   160,    -1,   162,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   176,   177,    -1,   179,    -1,    -1,    -1,   183,
      -1,    -1,    -1,   187,    -1,    -1,   190,    -1,   192,   193,
     194,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,   212,   213,
      -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,   222,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
     234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   261,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,   296,   297,    -1,    -1,    -1,    -1,    -1,   303,
     304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,    -1,   748,   749,   750,   751,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   760,   761,    -1,    -1,
      -1,     3,   766,    -1,    -1,     7,     8,   771,    -1,    -1,
      -1,   775,   776,    -1,    -1,   779,    18,    19,    -1,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,
      -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    56,    57,    58,    59,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    67,    68,    -1,    70,    -1,
      -1,    -1,    -1,    -1,    -1,    77,    78,    -1,    -1,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   118,   119,   120,    -1,
     122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   130,   131,
     132,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,   149,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   176,   177,    -1,   179,    -1,    -1,
      -1,   183,    -1,    -1,    -1,   187,    -1,    -1,   190,    -1,
     192,   193,   194,   195,    -1,   197,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,
     212,   213,    -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,
     222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,   234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   261,
      -1,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,   296,   297,    -1,    -1,    -1,    -1,
      -1,   303,   304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,    -1,    -1,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
      -1,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,    -1,   748,   749,   750,   751,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   760,   761,
      -1,    -1,    -1,     3,   766,    -1,    -1,     7,     8,   771,
      -1,    -1,    -1,   775,   776,    -1,    -1,   779,    18,    19,
      -1,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    56,    57,    58,    59,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    67,    68,    -1,
      70,    -1,    -1,    -1,    -1,    -1,    -1,    77,    78,    -1,
      -1,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   118,   119,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     130,   131,   132,    -1,    -1,    -1,    -1,    -1,   138,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,   149,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   176,   177,    -1,   179,
      -1,    -1,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
     190,    -1,   192,   193,   194,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   211,   212,   213,    -1,   215,    -1,    -1,    -1,    -1,
      -1,    -1,   222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   233,   234,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,   296,   297,    -1,    -1,
      -1,    -1,    -1,   303,   304,    -1,   306,    -1,    -1,    -1,
      -1,    -1,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,    -1,    -1,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,    -1,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,    -1,   748,   749,
     750,   751,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     760,   761,    -1,    -1,    -1,     3,   766,    -1,    -1,     7,
       8,   771,    -1,    -1,    -1,   775,   776,    -1,    -1,   779,
      18,    19,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,    57,
      58,    59,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    67,
      68,    -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,    77,
      78,    -1,    -1,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     118,   119,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   130,   131,   132,    -1,    -1,    -1,    -1,    -1,
     138,    -1,   140,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,   177,
      -1,   179,    -1,    -1,    -1,   183,    -1,    -1,    -1,   187,
      -1,    -1,   190,    -1,   192,   193,   194,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   211,   212,   213,    -1,   215,    -1,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   233,   234,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,   296,   297,
      -1,    -1,    -1,    -1,    -1,   303,   304,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,    -1,    -1,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,    -1,
     748,   749,   750,   751,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   760,   761,    -1,    -1,    -1,     3,   766,    -1,
      -1,     7,     8,   771,    -1,    -1,    -1,   775,   776,    -1,
      -1,   779,    18,    19,    -1,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      56,    57,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    67,    68,    -1,    70,    -1,    -1,    -1,    -1,    -1,
      -1,    77,    78,    -1,    -1,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   118,   119,   120,    -1,   122,    -1,    -1,    -1,
     126,    -1,    -1,    -1,   130,   131,   132,    -1,    -1,    -1,
      -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,   149,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     176,   177,    -1,   179,    -1,    -1,    -1,   183,    -1,    -1,
      -1,   187,    -1,    -1,   190,    -1,   192,   193,   194,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   211,   212,   213,    -1,   215,
      -1,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,   234,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   261,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
     296,   297,    -1,    -1,    -1,    -1,    -1,   303,   304,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,    -1,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,    -1,   748,   749,   750,   751,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   760,   761,    -1,    -1,    -1,     3,
     766,    -1,    -1,     7,     8,   771,    -1,    -1,    -1,   775,
     776,    -1,    -1,   779,    18,    19,    -1,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    56,    57,    58,    59,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    67,    68,    -1,    70,    -1,    -1,    -1,
      -1,    -1,    -1,    77,    78,    -1,    -1,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   118,   119,   120,    -1,   122,    -1,
      -1,    -1,   126,    -1,    -1,    -1,   130,   131,   132,    -1,
      -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,   149,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   176,   177,    -1,   179,    -1,    -1,    -1,   183,
      -1,    -1,    -1,   187,    -1,    -1,   190,    -1,   192,   193,
     194,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,   212,   213,
      -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,   222,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
     234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   261,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,   296,   297,    -1,    -1,    -1,    -1,    -1,   303,
     304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,    -1,   748,   749,   750,   751,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   760,   761,    -1,    -1,
      -1,     3,   766,    -1,    -1,     7,     8,   771,    -1,    -1,
      -1,   775,   776,    -1,    -1,   779,    18,    19,    -1,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    56,    57,    58,    59,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    67,    68,    -1,    70,    -1,
      -1,    -1,    -1,    -1,    -1,    77,    78,    -1,    -1,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   118,   119,   120,    -1,
     122,    -1,    -1,    -1,   126,    -1,    -1,    -1,   130,   131,
     132,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,   149,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   176,   177,    -1,   179,    -1,    -1,
      -1,   183,    -1,    -1,    -1,   187,    -1,    -1,   190,    -1,
     192,   193,   194,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,
     212,   213,    -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,
     222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,   234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   261,
      -1,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,   296,   297,    -1,    -1,    -1,    -1,
      -1,   303,   304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,    -1,    -1,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
      -1,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,    -1,   748,   749,   750,   751,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   760,   761,
      -1,    -1,    -1,     3,   766,    -1,    -1,     7,     8,   771,
      -1,    -1,    -1,   775,   776,    -1,    -1,   779,    18,    19,
      -1,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    56,    57,    58,    59,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    67,    68,    -1,
      70,    -1,    -1,    -1,    -1,    -1,    -1,    77,    78,    -1,
      -1,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   118,   119,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     130,   131,   132,    -1,    -1,    -1,    -1,    -1,   138,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,   149,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   176,   177,    -1,   179,
      -1,    -1,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
     190,    -1,   192,   193,   194,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   211,   212,   213,    -1,   215,    -1,    -1,    -1,    -1,
      -1,    -1,   222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   233,   234,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,   296,   297,    -1,    -1,
      -1,    -1,    -1,   303,   304,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,    -1,    -1,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,    -1,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,    -1,   748,   749,
     750,   751,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     760,   761,    -1,    -1,    -1,     3,   766,    -1,    -1,     7,
       8,   771,    -1,    -1,    -1,   775,   776,    -1,    -1,   779,
      18,    19,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,    57,
      58,    59,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    67,
      68,    -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,    77,
      78,    -1,    -1,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     118,   119,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   130,   131,   132,    -1,    -1,    -1,    -1,    -1,
     138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,   177,
      -1,   179,    -1,    -1,    -1,   183,    -1,    -1,    -1,   187,
      -1,    -1,   190,    -1,   192,   193,   194,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   211,   212,   213,    -1,   215,    -1,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   233,   234,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,   296,   297,
      -1,    -1,    -1,    -1,    -1,   303,   304,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,    -1,    -1,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,    -1,
     748,   749,   750,   751,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   760,   761,    -1,    -1,    -1,     3,   766,    -1,
      -1,     7,     8,   771,    -1,    -1,    -1,   775,   776,    -1,
      -1,   779,    18,    19,    -1,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      56,    57,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    67,    68,    -1,    70,    -1,    -1,    -1,    -1,    -1,
      -1,    77,    78,    -1,    -1,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   118,   119,   120,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   130,   131,   132,    -1,    -1,    -1,
      -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,   149,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     176,   177,    -1,   179,    -1,    -1,    -1,   183,    -1,    -1,
      -1,   187,    -1,    -1,   190,    -1,   192,   193,   194,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   211,   212,   213,    -1,   215,
      -1,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,   234,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   261,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
     296,   297,    -1,    -1,    -1,    -1,    -1,   303,   304,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,    -1,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,    -1,   748,   749,   750,   751,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   760,   761,    -1,    -1,    -1,     3,
     766,    -1,    -1,     7,     8,   771,    -1,    -1,    -1,   775,
     776,    -1,    -1,   779,    18,    19,    -1,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    56,    57,    58,    59,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    67,    68,    -1,    70,    -1,    -1,    -1,
      -1,    -1,    -1,    77,    78,    -1,    -1,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   118,   119,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   130,   131,   132,    -1,
      -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,   149,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   176,   177,    -1,   179,    -1,    -1,    -1,   183,
      -1,    -1,    -1,   187,    -1,    -1,   190,    -1,   192,   193,
     194,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,   212,   213,
      -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,   222,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
     234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   261,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,   296,   297,    -1,    -1,    -1,    -1,    -1,   303,
     304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,    -1,   748,   749,   750,   751,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   760,   761,    -1,    -1,
      -1,     3,   766,    -1,    -1,     7,     8,   771,    -1,    -1,
      -1,   775,   776,    -1,    -1,   779,    18,    19,    -1,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,
      -1,    -1,    -1,    -1,    46,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    56,    57,    58,    59,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    67,    68,    -1,    70,    -1,
      -1,    -1,    -1,    -1,    -1,    77,    78,    -1,    -1,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   118,   119,   120,    -1,
     122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   130,   131,
     132,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,   149,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   176,   177,    -1,   179,    -1,    -1,
      -1,   183,    -1,    -1,    -1,   187,    -1,    -1,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,
     212,   213,    -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,
     222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,   234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   261,
      -1,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,   296,   297,    -1,    -1,    -1,    -1,
      -1,   303,   304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,    -1,    -1,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
      -1,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,    -1,   748,   749,   750,   751,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   760,   761,
      -1,    -1,    -1,     3,   766,    -1,    -1,     7,     8,   771,
      -1,    -1,    -1,   775,   776,    -1,    -1,   779,    18,    19,
      -1,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    56,    57,    58,    59,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    67,    68,    -1,
      70,    -1,    -1,    -1,    -1,    -1,    -1,    77,    78,    -1,
      -1,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   118,   119,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     130,   131,   132,    -1,    -1,    -1,    -1,    -1,   138,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,   149,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   176,   177,    -1,   179,
      -1,    -1,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
     190,    -1,   192,   193,   194,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   211,   212,   213,    -1,   215,    -1,    -1,    -1,    -1,
      -1,    -1,   222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   233,   234,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,   296,   297,    -1,    -1,
      -1,    -1,    -1,   303,   304,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,    -1,    -1,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,    -1,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,    -1,   748,   749,
     750,   751,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     760,   761,    -1,    -1,    -1,     3,   766,    -1,    -1,     7,
       8,   771,    -1,    -1,    -1,   775,   776,    -1,    -1,   779,
      18,    19,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,    57,
      58,    59,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    67,
      68,    -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,    77,
      78,    -1,    -1,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     118,   119,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   130,   131,   132,    -1,    -1,    -1,    -1,    -1,
     138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,   177,
      -1,   179,    -1,    -1,    -1,   183,    -1,    -1,    -1,   187,
      -1,    -1,   190,    -1,   192,   193,   194,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   211,   212,   213,    -1,   215,    -1,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   233,   234,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,   296,   297,
      -1,    -1,    -1,    -1,    -1,   303,   304,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,    -1,    -1,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,    -1,
     748,   749,   750,   751,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   760,   761,    -1,    -1,    -1,     3,   766,    -1,
      -1,     7,     8,   771,    -1,    -1,    -1,   775,   776,    -1,
      -1,   779,    18,    19,    -1,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      56,    57,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    67,    68,    -1,    70,    -1,    -1,    -1,    -1,    -1,
      -1,    77,    78,    -1,    -1,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   118,   119,   120,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   130,   131,   132,    -1,    -1,    -1,
      -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,   149,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     176,   177,   178,   179,    -1,    -1,    -1,   183,    -1,    -1,
      -1,   187,    -1,    -1,    -1,    -1,   192,   193,   194,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   211,   212,   213,    -1,   215,
      -1,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,   234,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   261,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
     296,   297,    -1,    -1,    -1,    -1,    -1,   303,   304,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,    -1,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,    -1,   748,   749,   750,   751,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   760,   761,    -1,    -1,    -1,     3,
     766,    -1,    -1,     7,     8,   771,    -1,    -1,    -1,   775,
     776,    -1,    -1,   779,    18,    19,    -1,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    56,    57,    58,    59,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    67,    68,    -1,    70,    -1,    -1,    -1,
      -1,    -1,    -1,    77,    78,    -1,    -1,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   118,   119,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   130,   131,   132,    -1,
      -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,   149,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   176,   177,    -1,   179,    -1,    -1,    -1,   183,
      -1,    -1,    -1,   187,    -1,    -1,    -1,    -1,   192,   193,
     194,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,   212,   213,
      -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,   222,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
     234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   261,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,   296,   297,    -1,    -1,    -1,    -1,    -1,   303,
     304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,    -1,   748,   749,   750,   751,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   760,   761,    -1,    -1,
      -1,     3,   766,    -1,    -1,     7,     8,   771,    -1,    -1,
      -1,   775,   776,    -1,    -1,   779,    18,    19,    -1,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    56,    57,    58,    59,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    67,    68,    -1,    70,    -1,
      -1,    -1,    -1,    -1,    -1,    77,    78,    -1,    -1,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   118,   119,   120,    -1,
     122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   130,   131,
     132,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,   149,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   176,   177,    -1,   179,    -1,    -1,
      -1,   183,    -1,    -1,    -1,   187,    -1,    -1,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,
     212,   213,    -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,
     222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,   234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   261,
      -1,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,   296,   297,    -1,    -1,    -1,    -1,
      -1,   303,   304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,    -1,    -1,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
      -1,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,    -1,   748,   749,   750,   751,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   760,   761,
      -1,    -1,    -1,     3,   766,    -1,    -1,     7,     8,   771,
      -1,    -1,    -1,   775,   776,    -1,    -1,   779,    18,    19,
      -1,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    56,    57,    58,    59,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    67,    68,    -1,
      70,    -1,    -1,    -1,    -1,    -1,    -1,    77,    78,    -1,
      -1,    81,    82,    83,    84,    -1,    86,    87,    -1,    89,
      90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   118,   119,
     120,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     130,   131,   132,    -1,    -1,    -1,    -1,    -1,   138,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,   149,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   176,   177,    -1,   179,
      -1,    -1,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,   193,   194,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   211,   212,   213,    -1,   215,    -1,    -1,    -1,    -1,
      -1,    -1,   222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   233,   234,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,   296,   297,    -1,    -1,
      -1,    -1,    -1,   303,   304,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,    -1,    -1,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,    -1,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,    -1,   748,   749,
     750,   751,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     760,   761,    -1,    -1,    -1,     3,   766,    -1,    -1,     7,
       8,   771,    -1,    -1,    -1,   775,   776,    -1,    -1,   779,
      18,    19,    -1,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    39,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,    57,
      58,    59,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    67,
      68,    -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,    77,
      78,    -1,    -1,    81,    82,    83,    84,    -1,    86,    87,
      -1,    89,    90,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     118,   119,   120,    -1,   122,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   130,   131,   132,    -1,    -1,    -1,    -1,    -1,
     138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,   149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,   177,
      -1,   179,    -1,    -1,    -1,   183,    -1,    -1,    -1,   187,
      -1,    -1,    -1,    -1,   192,   193,   194,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   211,   212,   213,    -1,   215,    -1,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   233,   234,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   261,    -1,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,   296,   297,
      -1,    -1,    -1,    -1,    -1,   303,   304,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,    -1,    -1,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,    -1,
     748,   749,   750,   751,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   760,   761,    -1,    -1,    -1,     3,   766,    -1,
      -1,     7,     8,   771,    -1,    -1,    -1,   775,   776,    -1,
      -1,   779,    18,    19,    -1,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    39,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      56,    57,    58,    59,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    67,    68,    -1,    70,    -1,    -1,    -1,    -1,    -1,
      -1,    77,    78,    -1,    -1,    81,    82,    83,    84,    -1,
      86,    87,    -1,    89,    90,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   118,   119,   120,    -1,   122,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   130,   131,   132,    -1,    -1,    -1,
      -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     146,    -1,    -1,   149,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     176,   177,    -1,   179,    -1,    -1,    -1,   183,    -1,    -1,
      -1,   187,    -1,    -1,    -1,    -1,   192,   193,   194,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   211,   212,   213,    -1,   215,
      -1,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,   234,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   261,    -1,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
     296,   297,    -1,    -1,    -1,    -1,    -1,   303,   304,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,    -1,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,    -1,   748,   749,   750,   751,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   760,   761,    -1,    -1,    -1,     3,
     766,    -1,    -1,     7,     8,   771,    -1,    -1,    -1,   775,
     776,    -1,    -1,   779,    18,    19,    -1,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    39,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    56,    57,    58,    59,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    67,    68,    -1,    70,    -1,    -1,    -1,
      -1,    -1,    -1,    77,    78,    -1,    -1,    81,    82,    83,
      84,    -1,    86,    87,    -1,    89,    90,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   118,   119,   120,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   130,   131,   132,    -1,
      -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,   149,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   176,   177,    -1,   179,    -1,    -1,    -1,   183,
      -1,    -1,    -1,   187,    -1,    -1,    -1,    -1,   192,   193,
     194,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,   212,   213,
      -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,   222,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
     234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   261,    -1,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,   296,   297,    -1,    -1,    -1,    -1,    -1,   303,
     304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,    -1,   748,   749,   750,   751,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   760,   761,    -1,    -1,
      -1,     3,   766,    -1,    -1,     7,     8,   771,    -1,    -1,
      -1,   775,   776,    -1,    -1,   779,    18,    19,    -1,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    57,    58,    59,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    67,    68,    -1,    70,    -1,
      -1,    -1,    -1,    -1,    -1,    77,    78,    -1,    -1,    81,
      82,    83,    84,    -1,    86,    87,    -1,    89,    90,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   118,   119,   120,    -1,
     122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   130,   131,
     132,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   146,    -1,    -1,   149,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   176,   177,    -1,   179,    -1,    -1,
      -1,   183,    -1,    -1,    -1,   187,    -1,    -1,    -1,    -1,
     192,   193,   194,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,
     212,   213,    -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,
     222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,   234,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   261,
      -1,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,   296,   297,    -1,    -1,    -1,    -1,
      -1,   303,   304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,    -1,    -1,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
      -1,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,    -1,   748,   749,   750,   751,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   760,   761,
       3,    -1,    -1,    -1,     7,    -1,    -1,    -1,    -1,   771,
      -1,    -1,    -1,    -1,   776,    18,    19,   779,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,    -1,   748,   749,   750,   751,     3,
      -1,    -1,    -1,     7,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,    -1,   748,   749,   750,   751,     3,    -1,
      -1,    -1,     7,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    -1,    -1,    -1,   772,    -1,
      -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,     7,   748,   749,   750,   751,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,     7,   748,   749,   750,   751,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,     7,   748,   749,   750,   751,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,    -1,   748,   749,   750,   751,     5,     6,     7,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    65,    -1,    67,
      -1,    69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    97,
      -1,    -1,   100,    -1,   102,   103,    -1,    -1,    -1,    -1,
      -1,   109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,
      -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   146,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   167,
      -1,   169,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     198,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   209,   210,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,   220,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   231,   232,   233,   234,    -1,   236,    -1,
      -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,    -1,   247,
      -1,    -1,    -1,   251,   252,   253,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   289,    -1,   291,    -1,   293,    -1,    -1,    -1,    -1,
      -1,    -1,   300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     308,   309,    -1,    -1,    -1,   313,   314,   315,    -1,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,   361,   362,   363,    -1,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,    -1,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,    -1,    -1,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,    -1,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,    -1,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,    -1,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,    -1,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,    -1,
     748,   749,   750,   751,     5,    -1,     7,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    -1,
      -1,    -1,    -1,   771,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    48,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    65,    -1,    67,    -1,    69,    -1,
      71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    79,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    97,    -1,    -1,   100,
      -1,   102,   103,    -1,    -1,    -1,    -1,    -1,   109,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   146,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   167,    -1,   169,    -1,
      -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   198,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   209,   210,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,   220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     231,   232,   233,   234,    -1,   236,    -1,    -1,    -1,    -1,
     241,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,
     251,   252,   253,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   289,    -1,
     291,    -1,   293,    -1,    -1,    -1,    -1,    -1,    -1,   300,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   308,   309,    -1,
      -1,    -1,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,    -1,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,    -1,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
      -1,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,    -1,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,    -1,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,    -1,   748,   749,   750,
     751,     5,    -1,     7,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    -1,    -1,    -1,    -1,
     771,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    65,    -1,    -1,    -1,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    79,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   100,    -1,   102,   103,
      -1,    -1,    -1,    -1,    -1,   109,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   157,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   167,    -1,   169,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   198,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   209,   210,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   231,   232,    -1,
     234,    -1,   236,    -1,    -1,    -1,    -1,   241,    -1,    -1,
      -1,    -1,    -1,   247,    -1,    -1,    -1,   251,   252,   253,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   289,    -1,   291,    -1,   293,
      -1,    -1,    -1,    -1,    -1,    -1,   300,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   309,    -1,    -1,    -1,   313,
     314,   315,    -1,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
      -1,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,    -1,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,    -1,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,    -1,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,    -1,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
      -1,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,    -1,   748,   749,   750,   751,    18,    19,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    74,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   156,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   255,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,    -1,    -1,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,    -1,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,    -1,   748,   749,
     750,   751,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   300,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   309,    -1,    -1,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,    -1,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,    -1,   748,   749,   750,   751,    18,    19,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,    -1,    -1,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
      -1,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,    -1,   748,   749,   750,   751,
      18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   771,
      -1,    -1,    -1,    -1,   776,    -1,    -1,   779,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,    -1,    -1,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,    -1,
     748,   749,   750,   751,    18,    19,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   771,    -1,    -1,    -1,    -1,   776,    -1,
      -1,   779,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,    -1,   748,   749,   750,   751,    18,    19,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,    -1,    -1,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,    -1,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,    -1,   748,   749,
     750,   751,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,    -1,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,    -1,   748,   749,   750,   751,    18,    19,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,    -1,    -1,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
      -1,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,    -1,   748,   749,   750,   751,
      18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,    -1,    -1,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,    -1,
     748,   749,   750,   751,    18,    19,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   779,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,    -1,   748,   749,   750,   751,    18,    19,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   779,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,    -1,    -1,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,    -1,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,    -1,   748,   749,
     750,   751,    18,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   779,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,    -1,   669,   670,   671,    -1,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,    -1,   748,   749,   750,   751,    18,    19,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   771,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,    -1,    -1,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
      -1,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,     3,   748,   749,   750,   751,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   771,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,    -1,    -1,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,     3,
     748,   749,   750,   751,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,     3,   748,   749,   750,   751,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,    -1,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,    -1,    -1,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,    -1,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,    -1,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,     3,   748,   749,
     750,   751,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
      -1,    -1,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,    -1,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,     3,   748,   749,   750,   751,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    70,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,    -1,    -1,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
      -1,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,     3,   748,   749,   750,   751,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,    -1,    -1,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,    -1,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,     3,
     748,   749,   750,   751,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,    -1,   748,   749,   750,   751,     7,     8,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    27,    -1,
      29,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   244,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,    -1,   748,
     749,   750,   751,     7,     8,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    27,    -1,    29,    -1,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,    -1,    -1,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,    -1,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,    -1,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,    -1,   748,   749,   750,   751,     7,     8,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    27,    -1,
      29,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,    -1,   748,
     749,   750,   751,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,    -1,   748,   749,   750,   751,    18,    19,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,    -1,   748,   749,   750,
     751,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,    -1,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
      -1,   748,   749,   750,   751,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,    -1,   748,   749,   750,   751,    18,
      19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   762,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,    -1,   748,
     749,   750,   751,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   762,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,    -1,   748,   749,   750,   751,    18,    19,    -1,
      -1,    -1,    -1,    -1,    25,    -1,    -1,   762,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    39,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   202,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   258,    -1,   260,
      -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,    -1,   748,   749,   750,
     751,    18,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
     761,    -1,    -1,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,    -1,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
      -1,   748,   749,   750,   751,    18,    19,    20,   755,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,    -1,   748,   749,   750,   751,    18,
      19,    -1,   755,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,    -1,   145,   146,    -1,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,    -1,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,    -1,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,    -1,   653,   654,   655,   656,   657,    -1,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,    -1,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,    -1,   748,
     749,   750,   751,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    -1,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
      -1,   126,   127,   128,   129,   130,    -1,    -1,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,    -1,
     145,   146,    -1,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,    -1,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,    -1,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,    -1,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,    -1,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,    -1,   653,   654,
     655,   656,   657,    -1,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,    -1,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,    -1,   748,   749,   750,   751,    18,    19,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    -1,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,    -1,   126,   127,   128,   129,   130,
      -1,    -1,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,    -1,   145,   146,    -1,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,    -1,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
      -1,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,    -1,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,    -1,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
      -1,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,    -1,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,    -1,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,    -1,   748,   749,   750,
     751,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    -1,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,    -1,   126,
     127,   128,   129,   130,    -1,    -1,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,    -1,   145,   146,
      -1,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,    -1,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,    -1,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,    -1,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
      -1,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,    -1,   653,   654,   655,   656,
     657,    -1,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,    -1,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,    -1,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
      -1,   748,   749,   750,   751,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      -1,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,    -1,   126,   127,   128,   129,   130,    -1,    -1,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,    -1,   145,   146,    -1,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,    -1,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,    -1,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,    -1,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,    -1,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,    -1,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,    -1,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,    -1,
     653,   654,   655,   656,   657,    -1,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,    -1,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,    -1,
     743,   744,   745,   746,    -1,   748,   749,   750,   751,    18,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    46,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      79,    -1,    -1,    -1,    83,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   100,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,    -1,    -1,   146,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     169,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   224,    -1,    -1,    -1,   228,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,
      -1,    -1,   251,   252,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   283,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,   292,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,    -1,   748,
     749,   750,   751,    18,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    46,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    79,    -1,    -1,    -1,    83,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   100,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,    -1,
      -1,   146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   169,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   224,
      -1,    -1,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   247,    -1,    -1,    -1,   251,   252,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   283,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   291,   292,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,    -1,   748,   749,   750,   751,    18,    19,    -1,
      -1,    -1,    23,    24,    25,    -1,    27,    -1,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,    -1,   748,   749,   750,
     751,    18,    19,    -1,    -1,    -1,    23,    24,    25,    -1,
      27,    -1,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,    -1,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
      -1,   748,   749,   750,   751,    18,    19,    -1,    -1,    -1,
      23,    24,    25,    -1,    27,    -1,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,    -1,   748,   749,   750,   751,    18,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    83,    84,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,    -1,   748,
     749,   750,   751,    18,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    56,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,    -1,   748,   749,   750,   751,    18,    19,    -1,
      -1,    22,    -1,    -1,    25,    26,    -1,    -1,    -1,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,    -1,   748,   749,   750,
     751,    18,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,    -1,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
      -1,   748,   749,   750,   751,    18,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    84,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,    -1,   748,   749,   750,   751,    18,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    46,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,    -1,   748,
     749,   750,   751,    18,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    83,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,    -1,   748,   749,   750,   751,    18,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,    -1,   748,   749,   750,
     751,    18,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,    -1,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
      -1,   748,   749,   750,   751,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,    -1,   748,   749,   750,   751,    18,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,    -1,   748,
     749,   750,   751,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      75,    76,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      85,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,    -1,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,    -1,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,    -1,   748,   749,   750,   751,    18,    19,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,    -1,    -1,
      -1,    -1,   133,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,    -1,   748,   749,   750,
     751,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    52,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,    -1,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
      -1,   748,   749,   750,   751,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,    -1,   748,   749,   750,   751,    18,
      19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   126,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,    -1,   748,
     749,   750,   751,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,    -1,   748,   749,   750,   751,    18,    19,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,    -1,   748,   749,   750,
     751,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,    -1,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
      -1,   748,   749,   750,   751,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,    -1,   748,   749,   750,   751,    18,
      19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,    -1,   748,
     749,   750,   751,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,    -1,   748,   749,   750,   751,    18,    19,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   217,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,    -1,   748,   749,   750,
     751,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,    -1,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
      -1,   748,   749,   750,   751,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    46,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,    -1,   748,   749,   750,   751,    18,
      19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,    -1,   748,
     749,   750,   751,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,    -1,   748,   749,   750,   751,    18,    19,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   217,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,    -1,   748,   749,   750,
     751,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,    -1,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
      -1,   748,   749,   750,   751,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,    -1,   748,   749,   750,   751,    18,
      19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,    -1,   748,
     749,   750,   751,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,    -1,   748,   749,   750,   751,    18,    19,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,    -1,   748,   749,   750,
     751,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,    -1,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
      -1,   748,   749,   750,   751,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,    -1,   748,   749,   750,   751,    18,
      19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,    -1,   743,   744,   745,   746,    -1,   748,
     749,   750,   751,    18,    19,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,    -1,    -1,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,    -1,   462,   463,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,    -1,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,    -1,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,    -1,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,    -1,   748,   749,   750,   751,    18,    19,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    85,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   313,   314,   315,    -1,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,    -1,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,    -1,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,    -1,   748,   749,   750,
     751,    18,    19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,    -1,
      -1,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,    -1,   462,   463,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,    -1,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,    -1,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,    -1,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
      -1,   748,   749,   750,   751,    18,    19,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,   315,    -1,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,    -1,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,   419,    -1,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,    -1,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,    -1,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,    -1,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
      -1,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,    -1,   638,   639,   640,   641,   642,
     643,   644,    -1,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,    -1,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,    -1,   748,   749,   750,   751,    18,
      19,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,    -1,    -1,
      -1,    -1,    -1,    -1,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,    -1,   333,   334,   335,   336,   337,   338,
     339,   340,    -1,    -1,    -1,    -1,   345,   346,   347,   348,
     349,    -1,    -1,   352,   353,   354,   355,    -1,    -1,    -1,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
      -1,    -1,    -1,    -1,    -1,    -1,   375,    -1,   377,    -1,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,    -1,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,    -1,   416,   417,   418,
     419,    -1,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,    -1,    -1,    -1,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
      -1,    -1,    -1,    -1,    -1,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,    -1,   464,   465,    18,    19,   468,
      -1,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
     489,   490,    -1,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,    -1,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,    -1,    -1,    -1,   577,    -1,
     579,   580,    -1,   582,   583,   584,   585,    -1,   587,   588,
     589,   590,    -1,    -1,    -1,    -1,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,    -1,   622,    -1,   624,   625,   626,    -1,   628,
     629,    -1,   631,   632,   633,   634,   635,   636,    -1,   638,
     639,   640,   641,   642,   643,   644,    -1,   646,   647,   648,
      -1,   650,   651,   652,   653,    -1,   655,   656,    -1,    -1,
     659,    -1,    -1,   662,   663,   664,    -1,   666,    -1,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,    -1,   678,
     679,    -1,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,    -1,   704,   705,   706,   707,   708,
     709,   710,   711,   712,    -1,   714,   715,   716,    -1,   718,
     719,   720,   721,    -1,    -1,   724,   725,    -1,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,    -1,    -1,   744,   745,    -1,    -1,   748,
      -1,   750,   751,    -1,    -1,   306,    -1,    -1,    -1,    -1,
      -1,    -1,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,    -1,   333,   334,   335,   336,   337,   338,   339,   340,
      -1,    -1,    -1,    -1,   345,   346,   347,   348,   349,    -1,
      -1,   352,   353,   354,   355,    -1,    -1,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,    -1,    -1,
      -1,    -1,    -1,    -1,   375,    -1,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,    -1,   408,   409,   410,
     411,   412,   413,   414,    -1,   416,   417,   418,   419,    -1,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,    -1,    -1,    -1,   435,    -1,    -1,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,    -1,    -1,
      -1,    -1,    -1,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,    -1,   464,   465,    18,    19,   468,    -1,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,   489,   490,
      -1,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,    -1,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,    -1,    -1,    -1,   577,    -1,   579,   580,
      -1,   582,   583,   584,   585,    -1,   587,   588,   589,   590,
      -1,    -1,    -1,    -1,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
      -1,   622,    -1,   624,   625,   626,    -1,   628,   629,    -1,
     631,   632,   633,   634,   635,   636,    -1,   638,   639,   640,
     641,   642,   643,   644,    -1,   646,   647,   648,    -1,   650,
     651,   652,   653,    -1,   655,   656,    -1,    -1,   659,    -1,
      -1,   662,   663,   664,    -1,   666,    -1,   668,   669,   670,
     671,    -1,   673,   674,   675,   676,    -1,   678,   679,    -1,
     681,    -1,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,    -1,   704,   705,   706,   707,   708,   709,   710,
     711,   712,    -1,   714,   715,   716,    -1,   718,   719,   720,
     721,    -1,    -1,   724,   725,    -1,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,    -1,    -1,   744,   745,    -1,    -1,   748,    -1,   750,
     751,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
     333,   334,   335,   336,   337,   338,   339,   340,    -1,    -1,
      -1,    -1,   345,   346,   347,   348,   349,    -1,    -1,   352,
     353,   354,   355,    -1,    -1,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,    -1,    -1,    -1,    -1,
      -1,    -1,   375,    -1,   377,    -1,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,    -1,   408,   409,   410,   411,   412,
     413,   414,    -1,   416,   417,   418,   419,    -1,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,    -1,
      -1,    -1,   435,    -1,    -1,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,    -1,    -1,    -1,    -1,
      -1,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
      -1,   464,   465,    -1,    -1,   468,    -1,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,   489,   490,    -1,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,    -1,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,    -1,    -1,    -1,   577,    -1,   579,   580,    -1,   582,
     583,   584,   585,    -1,   587,   588,   589,   590,    -1,    -1,
      -1,    -1,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,    -1,   622,
      -1,   624,   625,   626,    -1,   628,   629,    -1,   631,   632,
     633,   634,   635,   636,    -1,   638,   639,   640,   641,   642,
     643,   644,    -1,   646,   647,   648,    -1,   650,   651,   652,
     653,    -1,   655,   656,    -1,    -1,   659,    -1,    -1,   662,
     663,   664,    -1,   666,    -1,   668,   669,   670,   671,    -1,
     673,   674,   675,   676,    -1,   678,   679,    -1,   681,    -1,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
      -1,   704,   705,   706,   707,   708,   709,   710,   711,   712,
      -1,   714,   715,   716,    -1,   718,   719,   720,   721,    -1,
      -1,   724,   725,    -1,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,    18,
      19,   744,   745,    -1,    -1,   748,    -1,   750,   751,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    -1,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    -1,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,    -1,   126,   127,   128,
     129,   130,    -1,    -1,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,    -1,   145,   146,    -1,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,   178,
     179,    -1,    -1,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,    -1,   197,   198,
     199,   200,   201,   202,   203,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,    -1,
      -1,    -1,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,    -1,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,    -1,   343,   344,    -1,   346,    -1,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,    -1,    -1,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,    -1,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,    -1,    -1,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,    -1,
     449,   450,   451,    -1,   453,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,    -1,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    18,    19,    -1,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,    -1,    -1,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,    -1,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,    -1,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,    -1,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,    -1,   702,   703,    -1,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,    -1,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,    -1,   743,   744,   745,   746,    -1,   748,
     749,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   313,   314,   315,    -1,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
      -1,    -1,   344,    -1,   346,    -1,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
      -1,    -1,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,    -1,   421,
     422,   423,    -1,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,    -1,    -1,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
      -1,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,    -1,
     532,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,    -1,    -1,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,    -1,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,    -1,    -1,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,    -1,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
      -1,   653,   654,   655,   656,   657,    -1,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
      -1,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,    -1,
     702,   703,    -1,   705,   706,    -1,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,    -1,    -1,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,    -1,   748,   749,   750
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,     5,     6,     7,    18,    19,    47,    48,    65,    67,
      69,    71,    79,    97,   100,   102,   103,   109,   125,   129,
     138,   146,   157,   167,   169,   173,   198,   209,   210,   219,
     220,   231,   232,   233,   234,   236,   241,   247,   251,   252,
     253,   289,   291,   293,   300,   308,   309,   313,   314,   315,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   357,
     358,   359,   360,   361,   362,   363,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   451,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   748,   749,   750,   751,   771,   781,
     784,   785,   786,   787,   788,   790,   796,   798,   811,   857,
     895,   896,   903,   904,   917,   947,   972,  1032,  1088,  1140,
    1238,  1290,  1293,  1303,  1308,  1314,  1327,  1330,  1336,  1339,
    1344,  1351,  1363,  1366,  1369,  1370,  1372,  1375,  1376,  1378,
    1379,  1382,  1383,  1386,  1603,  1605,  1618,  1621,  1658,  1667,
    1685,  1693,  1707,  1711,  1712,  1716,  1726,  1733,  1741,  1743,
    1749,  1752,  1753,  1785,  1807,  1827,  1830,  1831,  1832,  1833,
    1834,  1836,  1877,  1884,  1886,  1895,  1898,  1933,  1935,  1940,
    1941,  1942,  1943,  1968,  1977,  1978,  1979,  1981,  2006,  2008,
    2009,  2060,  2061,  2079,  2085,   316,   341,   343,   344,   351,
     356,   358,   364,   378,   388,   403,   415,   420,   434,   449,
     450,   456,   460,   463,   466,   481,   491,   560,   574,   592,
     594,   623,   627,   637,   645,   657,   677,   680,   713,   723,
     742,   749,  1807,  1809,  1816,  1823,  1827,  1828,  1829,  1830,
    1831,  1832,  1833,  1834,  1988,    87,   218,   329,   406,   456,
     501,   650,   654,   696,   727,  1239,  1947,  1948,  1949,  1950,
     191,   453,   499,  1338,  1714,   851,  1816,   948,   520,  1331,
     201,   501,   696,  2087,  1668,    87,   141,   207,   218,   283,
     429,   456,   501,   636,   654,   696,   699,   727,   735,  1617,
     975,   848,   918,  1619,  1744,   141,   398,   750,  1758,   275,
     695,  1880,   973,  1338,  1141,  1033,    56,   520,  1699,   251,
     260,   892,   897,   899,  1816,   645,   727,  1880,   977,  1622,
     897,   898,   848,  1373,  1837,  1694,   897,  1885,  1659,  1816,
    1371,   974,   227,  1787,   169,   289,   675,  1727,  1934,    39,
     190,  1418,  1980,  2084,     3,    30,  1810,   141,  1880,   745,
    1937,  1604,   475,  1816,  1338,   393,   905,  1887,   797,   590,
     667,  1816,  1338,  1734,  1937,  1816,  1750,    46,   660,   708,
      46,   660,  1686,   590,   667,   342,   343,   378,   420,   594,
     611,   637,   677,  1971,  1372,  1379,  1382,     0,     6,   782,
     594,    87,   127,   141,   255,   288,   636,   727,   828,  1217,
    1218,  1617,  1947,  1948,  1949,  1950,   126,   150,  1389,  1390,
    1599,  1367,  1364,   117,   148,   287,  1381,  1944,  1380,  1944,
     441,   453,   583,   779,  1713,  1714,  1804,  1816,  1376,  1378,
      41,   779,   779,   376,  1258,  1816,   851,   755,   755,   851,
     133,   138,  1616,    20,  1810,  1816,  1818,   980,   981,   984,
    1007,  1816,  1616,  1282,  1283,   261,  1407,  1951,  1952,  1947,
     755,  1880,  1363,  1366,  1618,  1621,  1658,  1667,  1710,   858,
     779,   306,   928,   929,   949,   952,   955,   809,   810,  1810,
     735,  1328,  1880,   234,   133,   982,  1007,    75,    76,    85,
     436,   437,   742,   879,   880,   882,   888,   915,   916,  1809,
    1827,  1828,  1829,  1830,  1831,  1834,  1980,  1990,  2006,  2007,
    2053,  2069,  2070,  2072,  2073,  2075,   140,   174,   468,   606,
    1670,  1683,  1684,  1616,  1607,    62,  1616,  1616,  1616,  1616,
    1616,   133,  1616,  1616,  1007,  1616,  1616,   650,  1880,   960,
    1809,  1992,  2007,    46,    47,    79,    83,   100,   109,   129,
     141,   146,   169,   224,   228,   247,   251,   252,   283,   291,
     292,   344,   383,   429,   434,   445,   446,   599,   603,   609,
     620,   626,   657,   660,   689,  1818,  1899,  1903,  1904,  1906,
    1908,  1909,  1910,  1911,   928,   943,  1624,   464,   666,  1745,
     150,  1754,  1878,    42,    76,   121,   128,   153,   161,   195,
     239,   240,   364,   437,   574,   874,   917,   919,   920,   921,
     922,   923,   924,   925,   926,   927,   937,   938,   939,   940,
     941,   947,   962,   965,   972,  1997,  1998,  2013,  2014,  2077,
    2078,  2080,  2085,  1880,     3,     7,     8,    18,    19,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      39,    56,    57,    58,    59,    67,    68,    70,    77,    78,
      81,    82,    83,    84,    86,    87,    89,    90,    98,   101,
     118,   119,   120,   122,   130,   131,   132,   138,   146,   149,
     158,   160,   162,   176,   177,   179,   183,   187,   190,   192,
     193,   194,   195,   211,   212,   213,   215,   222,   233,   234,
     242,   243,   261,   268,   269,   271,   272,   273,   284,   285,
     295,   296,   297,   303,   304,   325,   332,   340,   356,   365,
     367,   369,   370,   371,   372,   373,   388,   400,   401,   402,
     404,   405,   453,   459,   471,   493,   494,   535,   537,   543,
     553,   554,   570,   577,   585,   597,   604,   635,   641,   642,
     648,   655,   685,   704,   705,   706,   707,   712,   713,   727,
     729,   740,   741,   743,   751,   760,   761,   766,   771,   775,
     776,   779,  1382,  1388,  1413,  1414,  1415,  1419,  1431,  1433,
    1434,  1435,  1436,  1437,  1438,  1439,  1440,  1441,  1442,  1450,
    1456,  1457,  1458,  1459,  1460,  1462,  1465,  1777,  1780,  1782,
    1783,  1784,  1801,  1808,  1809,  1816,  1823,    64,  1034,   502,
     353,   360,   375,   385,   386,   387,   395,   534,   546,   647,
     684,   698,   900,   902,   729,   893,   899,  1816,   848,  1616,
     874,   963,  1624,   899,    46,   324,   603,  1896,  1897,  1904,
    1906,    46,   105,   257,   259,   270,   288,   467,   670,   671,
     672,   673,  1392,  1399,  1400,  1946,     3,    70,    98,   316,
     356,   456,   461,   499,   547,   585,   636,   653,   678,   708,
     742,  1180,  1807,  1814,  1825,  1827,  1828,  1829,  1831,  1832,
    1833,  1834,  1838,  1848,  1859,  1988,    46,    78,    79,    88,
     141,   155,   207,   218,   275,   319,   335,   344,   356,   367,
     390,   423,   426,   428,   455,   456,   461,   462,   478,   499,
     520,   574,   589,   598,   601,   602,   616,   653,   660,   681,
     739,  1180,  1216,  1695,  1699,  1700,  1702,  1711,  1809,  1849,
     899,  1880,   174,  1666,   771,  1638,  1647,   928,  1994,  1786,
    1728,  1816,  1937,   334,  2086,  1818,  1345,  1304,    49,  1938,
    1413,  1485,   791,   294,   793,  1717,   410,  1804,  1806,  1816,
    1888,  1818,   138,  1087,  1810,   126,  1309,   520,   605,   660,
    1735,  1736,   281,  1938,   738,  1751,   661,   809,   224,   309,
    1294,  1295,  1296,   661,   809,   275,  1688,  1616,  1616,    22,
      25,    26,    30,  1778,  1779,  1811,  1970,  1970,  1970,   453,
    1969,  1970,  1970,   772,   772,   778,  1816,  1087,  1087,   141,
    1087,  1087,   654,   832,   141,   141,   275,   650,   207,   218,
     283,   429,  1951,   328,   849,   849,  1947,   110,   771,   776,
    1388,  1391,  1491,  1492,  1493,  1494,  1495,  1506,  1507,  1508,
    1509,  1511,  1512,  1513,  1804,   204,   416,  1594,  1595,  1600,
     307,  1536,  1389,   125,   164,   169,   200,  1401,  1561,  1566,
    1572,  1573,  1577,   218,  1576,  1589,  1599,    46,   105,  1945,
    1945,  1945,  1572,  1574,  1382,  1385,  1386,  1573,  1575,  1384,
      46,  1816,  1709,  1708,   779,  1368,  1365,  2010,  1816,  1816,
      41,   755,  1641,  1642,  1241,   726,  1243,   533,   700,   719,
      84,  1818,  1819,  1820,  1903,  1244,   986,  1008,  1816,   118,
    1249,  1248,    45,    69,   109,   190,   225,   609,  1009,   848,
     275,   140,   573,  1284,  1285,  1286,   649,   429,   735,  1951,
    1818,  1315,   771,   859,  1816,   928,   950,  1413,   113,   957,
     955,   281,  1329,  1610,  1611,  1804,   985,  1008,    45,  2007,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   126,
     127,   128,   129,   130,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   145,   146,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     345,   347,   348,   363,   399,   401,   424,   448,   489,   549,
     550,   566,   567,   608,   641,   701,   704,   707,   731,   742,
     751,   875,   915,  1146,  1148,  1149,  1151,  1152,  1153,  1154,
    1155,  1156,  1157,  1158,  1159,  1160,  1809,  1826,  1827,  1828,
    1829,  1830,  1831,  1834,  1835,  1987,  1988,   778,   463,   774,
      73,   316,  2088,  2071,  2075,   882,   778,   126,  1671,   126,
    1671,  1672,  1673,  1680,  1681,  1816,  1683,  1816,   138,  1615,
    1616,   851,   851,   851,   851,  1816,  1008,   848,  1818,  1018,
    1700,   848,  1608,  1616,  1616,   976,   147,   961,   598,  1907,
     639,   639,   696,   699,   727,   735,   771,  1412,   468,   576,
     695,   572,   727,    88,   735,   324,   542,   625,   324,   324,
     197,   324,   361,   520,   660,   542,   281,   197,   774,   771,
     277,   420,   174,   407,   467,  1626,  1628,   383,   605,  1746,
    1747,   351,   174,   382,  1760,  1804,  1881,  1882,   316,   381,
     456,  1809,  1817,  1830,  1831,  1832,  1834,  1989,   306,  1817,
     126,   133,   553,  1816,  1817,  1817,  1817,  1816,   306,  1817,
    1816,   420,  2077,  1981,  1982,  2008,   928,   942,  1816,   125,
     173,   233,   308,    97,   343,  2014,  2078,   778,  1337,  1466,
      18,    19,    29,  1808,  1823,    30,  1779,   149,   760,   761,
    1436,   771,   771,   771,   306,  1413,  1488,  1489,   771,   771,
     771,   771,   771,  1412,  1412,  1412,   771,  1411,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,  1413,   771,   771,   771,     7,   771,  1486,  1487,
    1801,  1808,   771,   771,   771,   771,  1413,  1411,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,    14,
     771,   771,   771,   771,  1411,   771,  1412,  1411,  1411,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,    30,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   729,   771,   771,
     771,   771,   729,   771,   771,   771,   771,   771,   771,   771,
      30,   771,   771,   771,    30,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   149,  1436,   149,  1436,  1436,  1142,
    1382,  1413,  1785,  1816,  1808,    32,    34,    35,    36,    38,
      40,    49,   152,   201,   310,   755,   756,   757,  1416,  1417,
    1420,    54,   147,   163,   230,   668,  1418,    13,    42,    43,
     106,   187,   758,   759,   760,   761,   762,   763,   764,   765,
    1436,    72,    37,   206,   206,   743,  1811,   779,   771,    14,
    1035,    53,   281,   774,   755,  1811,  1341,  1819,  1821,  1340,
     725,  1627,  1628,  1907,   576,   197,   126,   197,  1374,  1400,
       3,  1818,   251,   636,   779,    56,    98,  1181,  1182,  1641,
    1818,   125,  1641,  1641,  1818,    98,  1808,  1842,  1851,  1839,
      56,    98,  1184,  1185,  1818,   779,  1641,  1840,   774,   661,
     771,    87,   207,   218,   275,   283,   319,   429,   456,   650,
     727,   735,   163,   307,  1706,    62,   679,   366,   679,   679,
     313,   679,   428,   679,  1706,    46,  1099,  1818,  1565,  1566,
    1567,   126,   147,  1701,  1703,   366,   679,   125,   679,   695,
     667,    46,   346,   389,   391,   484,   532,   580,   669,   691,
    1689,  1690,  1691,   809,   470,   679,   810,  1567,  1706,  1703,
     502,   422,   368,   600,   695,   711,   125,  1406,   679,   732,
     140,  1281,  1648,   774,   173,  1788,  1789,  1796,  1816,  1804,
    2025,  2089,   774,  1346,  1347,  1348,  1349,  1804,  1610,   354,
     560,   231,   560,  1939,   774,  1413,   794,    56,   263,   409,
     423,   425,   457,   470,   502,   520,   598,   605,   615,   629,
     660,   663,   679,   710,  1718,  1723,  1724,  1809,  1880,     3,
      73,   906,   907,   908,   909,  1808,   574,   224,   364,  1418,
    1816,   789,   735,  1306,  1880,  1738,   351,  1737,   774,   645,
    1816,  1939,   125,  1297,  1298,  1297,   572,   747,   384,   774,
    1297,  1297,  1611,  1816,  1810,   774,   571,  1973,   690,  1974,
     755,   154,   631,  1972,     6,   783,  1816,   815,  1087,   848,
     848,  1087,   819,   821,  1087,  1087,    62,  1087,  1087,   826,
     827,   735,   456,   456,  1951,  1491,  1495,  1507,  1508,  1509,
    1510,  1511,  1816,     9,  1397,    80,   143,   154,   162,   188,
     242,   270,  1502,  1503,   774,   210,  1504,  1505,    30,  1812,
    1812,     3,  1596,  1597,  1598,  1816,  1818,  1537,   133,  1540,
    1536,   291,     7,    27,    29,    31,   244,  1568,  1569,  1780,
    1808,   147,    64,  1565,  1401,  1816,  1401,  1402,  1402,  1385,
    1710,  1715,  1778,  1816,  1816,  1573,  1576,    46,    56,    98,
     197,  1413,  1876,    41,    41,  1810,    98,   376,  1084,  1085,
    1096,  1097,  1189,   398,   852,  1412,     3,   852,    45,   987,
    1804,   575,   397,  1004,  1004,  1004,    44,  1819,  1820,  1821,
    1917,  1921,  1616,  1286,   406,   482,   851,  1804,   735,  1316,
    1317,  1611,   860,   861,  1413,   956,   306,   951,   953,  1986,
    2003,  2004,   420,   799,  1610,   125,   355,   441,   443,   531,
     606,   774,  1332,  1333,  1334,   987,  1004,  2076,   771,  1166,
    1167,  1167,   381,  1166,  1172,  1174,   771,  1162,  1163,  1166,
     216,  1162,  1172,    56,    70,    72,   301,   332,   350,   722,
    1150,  1155,  1157,  1174,  1180,  1190,  1191,  1193,  1150,  1172,
    1150,  1162,   771,  1172,  1150,  1167,  1167,  1150,  1167,   771,
    1162,  1172,    70,   302,   302,   305,  1162,  1167,   771,   878,
    1167,  1167,  1167,  1167,  1167,    14,   779,   881,   305,  1167,
    1167,  1167,  1167,  1167,   771,  1163,  1168,  1162,  1162,  1162,
     125,  1816,   125,   343,  1980,  2073,  2074,   778,   778,  1804,
      53,  1669,  1613,  1614,  1805,  1816,   125,  1395,  1396,  1536,
     774,  1674,   779,  1682,   118,  1816,   851,   779,  1018,  1902,
    1904,   563,   738,  1019,  1020,   423,  1821,  1916,  1610,  1609,
    1606,   173,  1996,   635,   959,   695,   772,   324,  1821,   324,
     324,  1917,   207,   218,   275,   456,   850,  1905,   344,   383,
     429,   434,   445,   446,   599,   609,   620,   626,   657,   660,
     689,  1909,  1911,  1794,  1795,  1808,   944,   138,  1281,   472,
     727,  1413,  1748,  1748,  1352,   499,  1759,    52,   755,  1532,
    1533,  1534,   564,   738,   774,  1879,    43,   928,   306,  1816,
     553,   126,   150,   928,   306,   771,   936,   173,   778,   779,
    1983,   774,   968,   966,   971,   967,  2082,  2081,  1610,     3,
    1467,  1818,   779,   771,    46,  1476,  1535,  1476,  1476,  1413,
    1489,   113,   306,   420,  1413,  1485,  1413,   105,  1476,  1535,
     772,    23,    24,    25,    27,    29,    31,   772,  1581,  1585,
    1586,   772,  1413,  1413,  1801,   772,  1377,  1378,  1387,  1785,
      91,    92,    93,    94,   135,   136,   137,   184,   185,   246,
     311,   402,   471,   535,   537,   543,   604,   648,   740,   751,
    1529,  1530,  1413,   105,  1468,  1468,  1455,  1413,  1413,  1413,
    1529,  1413,  1413,  1413,  1808,  1487,   327,   774,   779,   105,
    1476,  1413,   105,  1476,  1413,  1413,  1413,  1413,  1413,   772,
    1415,   772,  1413,  1413,  1413,   772,   640,  1476,  1476,  1413,
     105,  1476,    63,   159,   282,  1413,  1432,  1476,  1476,  1413,
    1413,   105,  1476,  1413,  1485,  1413,  1413,  1413,  1413,  1428,
    1429,  1413,  1413,  1484,  1485,  1413,  1413,  1413,  1413,  1413,
    1413,   399,   401,   704,   707,  1531,  1413,  1413,  1485,  1804,
    1413,  1413,  1413,   125,  1804,  1413,  1484,  1413,   125,  1413,
    1413,  1413,   772,  1413,  1804,  1413,  1413,  1530,  1530,  1413,
    1432,  1413,   772,     7,   779,  1802,  1816,  1413,  1413,  1484,
    1413,  1413,  1413,   772,   774,  1378,  1413,   779,  1414,   120,
     195,   285,   724,  1418,  1413,  1413,  1413,    46,   331,  1414,
    1421,  1414,   771,  1388,  1414,  1414,   163,    54,   147,   163,
     230,  1415,  1415,  1415,  1415,  1415,  1415,  1415,   149,  1415,
     149,  1415,  1415,  1415,  1415,  1415,  1186,  1818,  1436,   771,
    1464,  1546,  1816,   771,   133,  1808,  1443,   454,   486,   559,
     640,  1430,   165,   221,   498,   694,  1036,  1040,  1742,  1810,
     902,   401,   704,   707,   901,  1465,  1782,  1801,   774,   281,
    1342,  1343,  1804,   928,   150,  1629,   774,   125,  1821,  1820,
    1918,   850,  1905,   762,  1404,  1405,  1407,   461,   499,   653,
    1850,  1641,  1904,  1816,    72,  1187,  1413,  1869,  1868,  1867,
     779,   779,  1641,   774,  1841,   224,   485,  1870,  1871,  1872,
    1873,  1816,  1860,    98,   708,  1808,  1843,  1855,  1845,  1846,
    1848,  1859,   679,   762,  1087,    62,   851,   851,  1804,   851,
     313,   851,   851,   851,  1804,  1821,  1804,  1406,  1406,   366,
     679,  1706,   851,  1706,  1701,   366,   679,  1706,   147,  1704,
     502,   544,   679,  1698,  1698,  1706,  1816,   851,  1706,  1820,
    1701,  1706,  1810,   483,   692,   444,   125,  1692,   774,   428,
     679,  1804,  1703,  1701,  1701,  1413,  1706,  1706,  1706,  1492,
    1657,  1804,  1407,  1650,  1652,   771,  1645,  1995,   774,   771,
    1792,   873,   420,     3,   147,   774,   210,  1357,  1359,  1360,
     441,   606,  1305,   354,   231,  1413,   792,    98,   140,   795,
    1413,  1653,   502,   502,   502,   502,   351,   502,   809,   502,
     774,  1406,  1719,  1818,   901,   911,   774,   755,  1533,  1889,
     118,   667,  1413,  1307,  1610,   281,  1740,   809,  1736,  1816,
      46,  1292,   619,   674,  1299,  1300,  1291,   664,  1296,  1879,
    1778,   588,  1975,  1818,   823,  1816,   817,  1902,  1917,  1818,
    1087,  1087,   812,  1804,  1087,   851,  2062,  1407,  1960,   836,
    1407,  1087,  1087,  1087,   735,   774,   772,   772,   772,   772,
     772,   774,   772,  1491,    46,    52,    54,   126,  1398,  1534,
     154,   154,   203,  1514,   162,   242,  1502,  1514,  1491,  1493,
     771,  1397,  1601,  1818,   774,   779,  1413,    64,   134,  1538,
    1540,   564,   738,  1403,  1808,   432,   244,   569,   774,   779,
     656,  1562,  1590,  2011,  2012,  1242,  1642,  1085,    72,  1180,
     411,   186,   223,   261,   376,   388,   491,   560,   854,   856,
    1625,  1818,  1625,   612,   720,  1005,  1006,   479,  1001,  1002,
    1003,  1010,  1018,  1020,  1250,   771,  1810,   336,   527,   995,
     996,   997,  1010,  1011,  1012,  1018,  1020,   988,   989,   995,
     473,   235,   774,  1925,  1804,  1247,  1246,  1804,   774,   587,
    1318,   772,   774,   277,   928,   953,   874,    67,   107,   139,
     175,   474,   503,   504,   506,   507,   508,   509,   510,   512,
     513,   514,   515,   516,   517,   518,   519,   521,   522,   523,
     617,   618,   800,   801,   808,   125,  1335,   726,  1611,  1333,
     376,   557,   613,   721,   998,   999,  1000,  1010,  1014,  1015,
    1016,  1017,  1018,  1020,   293,   983,   771,   884,    23,    27,
      29,    31,  1172,  1171,  1641,  1172,    29,   290,   312,   658,
    1164,  1165,  1165,  1190,    98,  1186,  1188,  1172,  1150,  1192,
    1193,  1181,    56,  1191,  1194,   381,  1175,  1165,  1237,  1778,
    1172,  1237,  1165,   305,  1165,  1172,   876,   877,  1993,  2007,
      41,    98,  1980,  2000,  1150,  1150,  1165,   245,   715,  1816,
    2000,  1192,  1194,  1150,  1172,  1165,    29,  1165,   229,  1161,
    1161,  1161,   883,    25,   761,   891,   892,  1578,  1580,  2089,
    1504,   694,   774,  1676,   779,  1682,   214,  1560,  1561,  1681,
     126,   762,  1816,   197,  1816,  1019,   774,  1642,   774,    66,
     237,  1287,  1610,  1610,   874,   771,   930,   933,   281,   309,
    1901,    62,   762,  1804,  1816,  1915,  1915,   772,   774,  1985,
    2003,  1629,  1413,  1821,  1353,  1354,  1355,  1356,  1804,   142,
     316,   456,  1809,  1813,  1822,  1827,  1828,  1829,  1830,  1831,
    1832,  1833,  1834,  1988,   174,   224,   747,  1883,  1580,  1882,
     928,   150,   641,  1816,   928,   930,   931,   935,  1816,   859,
    1816,   960,   962,   963,  1994,  2069,  2089,  1879,  1850,    41,
    1808,  1413,   772,  1477,   772,   772,   277,   420,  1413,  1413,
      52,   294,   772,   294,   774,  1451,   772,   762,   772,   774,
     774,   772,   772,  1378,   126,   772,  1453,  1454,  1413,   774,
     774,   774,   761,   772,   774,   772,   774,   774,   772,   771,
    1801,  1808,  1476,   772,   772,  1476,   772,   774,   774,   772,
     772,   772,   147,   774,   774,   774,   772,   772,   126,   774,
    1476,   772,   126,  1413,   126,  1413,   126,  1413,   126,   772,
     772,   772,   774,   772,  1476,   772,   772,   772,   772,   774,
     772,   774,   772,   774,   774,   774,   772,   774,   772,   772,
     774,   774,   774,   774,   772,   772,   774,   772,   772,   772,
     772,  1804,   772,   772,   772,   772,  1804,   772,   772,   774,
     772,   774,   774,   772,   774,   774,   774,   772,   772,   774,
    1808,  1816,   772,   779,   772,   774,    52,   497,   774,  1205,
     772,   772,  1529,  1529,  1485,   772,   777,  1808,   120,   195,
     285,   724,   771,    49,  1413,   427,  1414,  1414,   771,  1388,
    1414,  1414,  1413,  1413,  1547,   210,  1549,   771,   771,   779,
    1407,  1447,  1448,  1449,   368,   771,  1045,  1046,  1038,  1045,
    1039,   583,  1048,   156,   465,  1413,   755,  1821,  1821,   774,
    1879,   420,  1630,  1631,   129,  1904,   126,   774,  1915,  1915,
     774,  1413,  1799,  1808,   779,   779,   779,    98,   316,   456,
     742,  1809,  1810,  1815,  1824,  1827,  1828,  1829,  1830,  1832,
    1833,  1834,  1988,  1863,   125,  1641,  1188,  1821,    30,   570,
     585,  1875,  1876,  1816,  1816,  1852,  1851,   125,   572,   747,
     497,   774,   774,  1641,  1876,   779,  1844,   779,  1641,   774,
     774,  1847,   772,  1816,   851,   851,  1810,  1413,   851,  1706,
    1706,   851,  1706,  1810,   126,  1705,   848,  1706,   605,  1567,
    1691,  1704,  1701,  1804,  1706,  1706,   251,  1504,  1653,   772,
     774,  1646,   874,  1789,  1793,  1795,    52,  2077,  2090,  1818,
      98,  1350,  1816,  1348,  1804,  1031,  1359,   141,   156,  1214,
    1361,   793,   774,    99,  1729,   809,  1724,  1610,  1725,   909,
     912,   913,   908,   565,   566,   642,   910,   447,   553,  1816,
    1890,  1891,  1810,  1610,   441,   606,   728,  1310,  1311,  1312,
    1580,    46,  1739,   661,   774,   725,  1301,  1687,   774,   125,
    1976,  1083,  1084,   294,   715,  1226,  1816,   309,  1900,  1925,
     833,  1816,  1816,  1804,   814,   851,  2033,  2034,   851,  2057,
    1087,  1087,  1804,   851,  1816,   851,  1087,  1491,  1491,   777,
     568,   704,   708,  1393,  1394,  1438,  1394,   154,  1514,  1514,
    1506,   154,   197,   294,  1528,  1816,  1533,  1180,  1183,  1597,
    1816,  1413,  1541,  1800,  1539,   742,  1543,  1538,  1580,  1569,
    1570,   432,  1569,  1569,  1808,   540,  1563,  1800,   771,  1876,
    1876,  1083,  1810,  1642,  1642,   548,   261,   261,   649,  1810,
     261,   261,   261,  1810,  1810,  1642,   774,  1003,   178,   351,
     396,   477,   538,   555,   556,   560,   561,   562,   628,   677,
     830,   831,    87,   469,   578,   585,   591,   665,   727,   834,
     835,  1642,  1642,   774,   997,   990,   991,  1010,  1011,  1012,
      64,   309,   734,  1919,   263,   359,   487,   558,   686,   748,
    1913,  1914,  1921,   309,  1928,  1879,   197,   844,  1255,   771,
    1953,  1245,  1317,   125,  1413,  1986,   954,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   774,   726,  1642,  1642,  1642,  1642,   774,  1000,   501,
     442,   992,   993,   994,  1010,  1011,  1012,  1013,  1016,  1017,
    1018,  1020,   864,   865,   866,  1816,  2054,   152,   772,   772,
     772,   772,  1816,   774,   312,   290,  1171,   772,   774,   772,
     772,   774,  1146,  1809,  1827,  1828,  1829,  1830,  1831,  1834,
    1413,  1413,  2000,  2000,   779,  1194,   755,   202,   258,   262,
     889,   890,   891,   894,  1418,  1816,    23,    24,    27,    29,
      31,   420,  1394,  1614,  1816,   294,  1816,   568,   164,  1571,
    1492,   779,  1682,  1804,  1904,  1098,  1818,  1821,  1879,   420,
     885,   886,   934,    33,  1917,   324,   779,   779,   281,   281,
    1794,   945,  1630,   774,  1357,  1359,  1812,   747,   499,   382,
     150,   932,   772,   774,  1984,   969,   958,   964,  1817,   964,
     964,  2083,   420,  1815,  1413,   774,  1413,  1413,   277,    56,
      70,    95,   108,   123,   149,   151,   290,   302,   399,   401,
     550,   658,   707,   731,  1478,  1482,  1483,  1809,  1826,  1987,
    1181,  1181,  1478,  1485,   772,   149,   149,  1413,  1485,  1485,
     774,  1413,  1413,  1413,  1413,  1413,  1413,  1413,  1415,   772,
     772,  1413,  1413,  1413,  1413,  1413,  1413,  1413,  1413,   772,
    1413,   126,  1413,   126,  1413,   126,  1413,   149,  1413,   772,
    1429,  1413,  1428,  1485,  1413,  1413,  1413,  1413,  1490,  1413,
    1413,  1413,  1485,    27,   760,  1578,  1582,   149,  1413,  1413,
    1413,  1413,  1413,   779,   779,  1816,  1413,    56,    70,  1200,
    1201,  1202,  1203,  1204,  1581,  1580,   772,   761,   761,  1387,
    1414,   772,   774,  1414,    49,  1413,   427,  1529,  1529,  1548,
    1816,    64,   772,  1461,  1484,  1808,  1413,   772,   774,   771,
    1054,  1415,  1046,   149,   164,  1080,  1581,   688,  1049,   329,
    1041,  1037,   901,   281,  1343,   281,   233,  1623,  1612,  1804,
     576,  1916,  1820,   126,   126,  1405,  1408,  1408,   779,   779,
     779,  1641,  1413,  1821,  1862,  1641,   771,   771,  1641,  1641,
    1876,   784,   224,   624,   651,  1874,  1872,  1871,  1861,  1816,
    1870,  1816,  1856,  1845,  1846,  1855,   426,   739,  1578,  1583,
    1696,    29,  1705,  1536,  1701,  1662,  1663,  1802,  1395,  1408,
    1407,  1649,  1651,  1653,   420,   772,   771,   778,   316,  1980,
    2015,  1358,   771,  1653,   755,   125,   309,  1720,  1721,   755,
     774,    35,    36,   447,   492,   553,   596,   755,   756,   757,
    1892,  1894,  1536,   126,  1313,  1311,  1300,   505,   808,  1302,
     109,   634,  1980,  1991,  1580,   536,   349,   465,   644,  1232,
    1232,   197,  1226,   324,  1928,   124,   197,   197,   813,   829,
     830,  2033,    52,   152,  2024,   376,   856,  1980,  2030,  2031,
    2032,  2058,  1961,   851,   824,  2064,   633,  2063,  1804,  1394,
      30,  1415,    49,   281,  1491,  1506,   154,   154,  1491,  1506,
    1496,  1497,   772,   774,  1523,  1524,  1182,  1602,    15,    16,
     774,  1542,    50,   103,  1564,  1413,  1464,  1544,  1545,  1543,
    1570,  1403,   774,  1564,  1407,  1591,  1592,  1593,  1188,  1182,
     398,   398,   406,   482,    25,    27,    29,    31,  1021,  1584,
    1585,  1809,  1003,  1642,  1642,    64,  1642,  1644,  1642,   178,
     538,   309,  1642,  1643,  1643,   831,  1251,  1810,  1810,  1810,
    1810,  1580,  1810,  1810,   772,   774,  1021,  1021,   997,   774,
     991,    30,   585,  1818,  1922,  1923,    30,    30,    30,    49,
    1912,   524,   525,   528,   529,   530,  1926,  1927,   322,   585,
    1254,  1240,   380,   646,   232,  1256,  1816,  1954,    52,  1953,
      46,   368,  1319,   277,   771,   771,  1580,   771,  1580,  1580,
    1810,  1810,  1583,  1810,  1580,  1810,  1810,  1810,  1810,  1810,
    1810,  1810,  1580,  1810,   394,   560,   662,  1783,  1810,  1580,
     801,  1810,  1581,  1021,  1021,  1000,   133,  1642,   774,   994,
     772,   774,   641,   915,  1146,   886,    29,  1192,  1778,  1192,
     876,  1816,    29,   774,  2077,   454,   779,  1492,  1682,  1406,
     244,  1569,   238,  1678,  1536,  1879,  1287,   173,   887,   772,
    1413,   933,   309,  1930,   576,   762,   762,  1917,  1917,   112,
     113,   114,   946,  1620,  1355,  1804,  1359,   140,  1362,  1755,
    1413,   931,   859,  1996,   343,   958,   779,  1413,  1413,  1167,
    1167,  1162,  1168,    94,   151,  1166,  1167,  1167,   151,  1167,
    1166,   772,   772,   772,   772,  1452,  1413,  1413,   772,   200,
    1470,  1470,  1413,   774,   774,   772,   774,   772,   772,   772,
     147,  1444,  1445,   772,   772,   772,   772,   774,   772,   125,
     772,   772,   774,  1413,  1413,  1413,  1413,   772,   772,    52,
    1422,   772,    52,   772,   774,   772,   774,   772,   774,   772,
     774,   772,   772,   772,    27,    29,    29,   772,   774,  1413,
     772,   772,   774,   774,   772,  1808,  1816,   779,   772,   771,
    1195,  1195,    50,   103,   635,   760,  1197,  1198,  1199,   774,
     774,  1413,  1413,   772,  1485,  1414,   772,   774,  1414,  1549,
    1541,   200,  1463,   772,  1408,  1449,  1042,  1043,  1044,  1816,
     772,  1413,  1583,    64,   771,  1056,   755,   771,  1046,  1821,
    1804,    10,    11,   251,  1026,  1377,  1632,  1634,  1637,  1504,
     126,  1918,  1918,    52,  1409,  1810,  1816,   762,  1808,  1816,
    1816,  1864,  1876,  1875,    30,    30,  1854,  1853,   377,   718,
     224,  1876,  1641,  1641,  1876,    23,    24,    27,    29,    31,
    1567,  1697,  1706,   774,  1660,  1641,  1533,  1653,   772,   774,
     173,  1377,   306,  2016,  2017,   771,   217,  1525,  1526,  1527,
    1816,   771,  1722,   224,   353,   360,   375,   385,   386,   387,
     395,   534,   546,   632,   647,   684,   698,   914,   913,  1893,
    1567,   545,   755,   774,   681,   681,  1804,   197,  1820,  1254,
     398,  1804,  1804,    10,    12,    17,   141,   163,   208,   265,
     266,   267,   287,   337,   339,   358,   376,   383,   398,   408,
     423,   480,   490,   526,   539,   579,   585,   643,   650,   681,
     696,   697,   709,  1022,  1024,  1089,  1091,  1092,  1095,  1096,
    1097,  1104,  1809,  1089,  2024,  1407,  1810,  2030,   771,   870,
    1980,  2019,  2021,   851,   837,  1953,   771,   872,  2019,  2020,
      95,   151,   226,   683,  1102,  2020,   825,  1394,  1394,   197,
    1499,  1506,  1506,   197,  1501,  1413,   771,  1031,  1816,  1521,
    1522,   368,  1762,  1800,    52,   774,  1800,  1413,   772,   774,
    1582,  1582,  1582,  1582,  1582,  1582,  1625,   835,   991,    30,
      52,   294,  1920,  1924,   201,  1913,  1580,  1580,  1580,  1783,
     760,  1578,  1579,  1926,   169,   289,  1252,   439,    45,    47,
      48,    69,    71,    77,   109,   169,   198,   200,   210,   232,
     329,   365,   412,   413,   419,   431,   452,   476,   541,   610,
     621,   622,   623,   713,  1029,  1090,  1092,  1259,  1263,  1265,
    1268,  1274,  1275,  1276,  1278,  1279,  1557,  1418,  1936,   333,
     430,   838,   281,   412,   419,   840,   772,   774,  1955,  1956,
      52,    46,   771,  1320,  1986,   804,   805,  1580,   806,   807,
    1580,   802,   803,  1580,  1816,  1021,   994,   866,   878,    14,
     779,   772,   890,  1816,  1536,  1816,   432,   244,  1679,  1675,
    1363,  1785,   129,  1925,  1925,   943,  1985,   943,  1632,  1362,
     495,   140,   234,  1761,   970,  2089,  1816,  1479,  1166,  1480,
    1481,   772,  1529,  1529,    64,   249,  1469,   164,  1472,  1473,
    1474,   772,  1413,  1413,  1485,   188,   348,   772,   309,  1446,
    1413,  1413,  1413,  1529,    95,   108,   123,   151,   226,   290,
     399,   401,   549,   550,   707,  1155,  1156,  1423,  1424,  1425,
    1426,  1478,  1413,  1413,  1413,  1413,   120,   285,  1580,  1588,
    1529,  1413,  1413,  1816,  1581,   772,  1205,  1200,  1198,  1200,
    1201,  1580,   772,  1485,   200,  1550,    64,   772,  1409,   772,
     774,  1529,  1040,   210,  1057,  1058,  1581,  1042,  1635,  1636,
    1797,  1798,  1802,  1816,  1785,  1633,  1678,  1637,  1918,  1810,
    1816,   779,  1641,  1641,  1876,   772,   772,  1876,  1876,  1858,
    1857,  1567,  1663,  1536,  1653,  1523,  1408,  1653,   772,  2018,
    2017,    46,  1264,  1272,  1273,  1816,   772,   774,  1583,  1730,
    1731,   440,   169,   771,  1810,   808,   816,  1804,   746,   820,
     822,    74,   586,   779,  1105,  1106,  1107,  1108,  1116,  1117,
    1122,  1123,  1124,  1214,  1217,  1218,  1803,  1816,   163,   733,
     411,  1804,  1642,  1642,  1642,  1642,  1642,  1642,  1642,  1642,
    1642,  1642,   411,  1642,  1642,  1642,  1642,  1642,  1642,  1642,
    1642,  1642,  1642,   414,   532,  1816,  1642,  1642,  1027,  1028,
    1029,   774,  1091,  1023,  1641,  1407,  2065,   871,   853,    53,
     326,   978,   197,    52,   862,   863,   240,   667,   240,  1953,
    1498,   294,  1500,   294,  1528,   140,   293,   452,  1516,  1517,
    1520,   115,   116,   199,   276,  1763,  1764,   166,  1765,  1564,
    1546,  1545,  1564,  1408,  1593,   585,  1810,  1922,    29,    29,
     585,    98,   149,   551,  1253,    74,   210,   374,   586,   693,
    1108,  1116,  1117,  1280,  1280,   210,  1280,   210,   281,    74,
     124,   210,   586,   693,  1121,  1214,  1280,  1642,   210,    64,
    1031,    52,   281,   374,   755,  1214,  1289,  1642,   210,   155,
     696,   155,   210,   696,  1280,   210,   584,   210,   210,   210,
    1090,   774,  1028,  1263,   771,  1107,   595,  1413,  1413,   197,
     844,   851,   197,   376,   845,  1816,  1625,  1377,  1955,  1321,
     478,   772,   774,   772,   774,   772,   774,   245,  1816,  1677,
     126,   432,  1404,  1625,   576,   309,  1929,  1929,   197,  1654,
     150,   964,   420,  1192,  1192,  1192,   772,   772,  1471,  1800,
    1778,  1472,   772,  1475,  1569,   772,   774,   772,   491,   540,
     605,   772,   772,   772,   772,  1162,   151,  1167,    70,  1167,
    1427,   772,   772,   772,   772,   774,   772,   772,   772,  1196,
     772,   774,   772,    64,   221,   244,  1551,  1552,  1800,  1044,
     676,  1081,   156,   465,  1059,   772,   774,   772,   772,   774,
     779,  1378,  1639,  1640,  1802,  1625,   762,  1866,  1865,  1876,
    1876,  1560,   396,  1790,   889,   772,   774,  1526,   772,   774,
      49,  1732,  1651,   771,   818,  1818,   771,   771,  1236,  1803,
       9,   125,  1118,  1816,   772,   774,    71,   124,   217,   288,
    1120,  1213,  1122,  1087,  1214,  1215,  1215,  1125,   779,  1804,
    1642,    98,  1580,  1587,    98,  1580,    98,  1580,    98,  1580,
    1093,  1583,  1580,  1580,  1810,  1810,  1642,  1580,  1818,   447,
     492,   560,  1101,  1580,  1583,  1583,    98,  1580,  1810,    98,
     379,   381,   418,   448,   580,   614,  1100,  1587,  1580,  1587,
    1025,  1761,  1091,  1089,    98,  1584,  1810,  1816,  2066,   218,
     456,  1980,  2050,  2051,  2052,   865,   867,   868,  2002,   854,
     855,  1936,  2059,   100,   146,   291,   979,   646,  1955,   772,
     864,  1966,  1967,  1810,  1966,    52,  1413,   771,  1413,   771,
     772,  1214,  1214,  1517,    64,    64,   115,    64,  1764,   264,
     276,  1766,  1767,   771,   439,    29,   322,   138,  1087,   138,
    1086,   733,  1086,  1615,  1338,  1615,  1264,  1180,  1615,   156,
    1616,     9,  1615,   733,   217,  1615,  1615,    98,  1816,  1338,
    1558,  1559,  1802,  1030,  1615,  1615,  1804,    98,  1816,  1338,
    1273,  1615,  1338,  1338,  1338,  1264,    45,   109,  1276,  1103,
    1105,   326,   447,  1288,  1529,   660,  1810,   415,  1257,   309,
    1957,  1625,  1324,  1816,    46,   771,  1322,   805,   807,   803,
      14,   779,  1625,  1415,   129,  1926,  1931,  1932,   417,  1678,
     275,   958,   774,  1564,   772,   569,   774,  1413,   540,   438,
    1192,  1583,   772,  1580,  1563,   772,    54,   393,   401,   704,
     707,   717,  1553,  1554,  1782,  1564,  1782,  1041,   771,  1047,
    1060,  1816,  1058,  1797,   762,  1816,   772,   774,  1641,  1876,
    1876,  1571,  1791,   277,  1273,  1731,   412,   772,  1233,  1235,
    1816,   771,   575,  1233,  1233,   771,  1816,  1106,   771,   156,
     156,  1215,  1087,   228,  1207,  1236,  1816,  1087,  1087,   652,
     915,  1126,  1147,  1148,  1816,   772,  1810,   771,  1810,    52,
    1082,  1027,   218,   456,   880,  1809,  1827,  1830,  1831,  1834,
    2036,  2037,  2038,  2044,  2049,  2052,  2005,  2042,  2005,  2040,
     420,  2052,   144,   147,   205,   869,  1980,  2001,   772,   774,
     104,  2024,   197,   838,   853,  2055,  1146,  2055,  1955,  1528,
    1528,   125,  1515,  1515,  1778,  1778,    64,  1778,    64,    64,
    1767,    30,  1253,   402,  1252,  1418,  1338,  1418,  1118,  1803,
    1264,  1803,  1261,  1182,  1803,  1615,  1272,   125,   156,  1803,
    1803,  1264,   774,  1564,  1034,  1816,  1803,  1581,   309,  1124,
    1264,  1269,  1264,   772,  1816,   839,   846,   847,    71,   352,
     499,   772,   774,  1323,   245,   715,  1816,   281,   576,  1932,
    1655,  1625,  1804,  1800,  1569,  1569,   772,   772,   772,   717,
    1554,  1555,  1782,   641,   593,   433,  1556,   593,   771,  1054,
    1050,    98,   298,   299,   393,   468,  1061,   779,  1640,  1653,
    1661,  1795,  2003,   357,   772,   774,  1564,   771,  1233,   771,
     772,   772,  1816,   771,  1413,  1087,  1236,  1816,  1804,   294,
    1225,   715,  1236,  1236,  1128,   779,  1119,  1120,  1127,   779,
    1725,  1026,  1025,  2042,  2040,   778,  2067,  2038,  2049,  2044,
    2039,   778,  2039,   778,  1999,   205,   641,   915,  1146,  2002,
    2026,  2027,  1407,   843,   844,  2056,   851,  1980,  2022,  2022,
     772,   772,   133,   154,   200,  1519,  1518,  1778,  1778,  1778,
     772,   118,  1266,   118,   109,   251,  1124,  1332,  1187,  1803,
    1816,  1287,  1260,  1559,   281,   281,   275,  1288,  1270,  1272,
    1262,   676,   841,  2077,   576,    71,    71,  1816,   217,  1325,
    1326,  1816,    14,  1415,   156,  1504,  1564,   451,    49,   451,
     133,   393,   560,   703,  1052,  1053,  1816,   772,   687,  1055,
    1063,   702,   141,   376,   383,   398,   526,   539,   557,   696,
    1077,  1078,  1079,  1700,   762,  1625,   237,  1879,  1235,    29,
     774,  1234,   834,  1879,  1879,   774,  1816,   772,  1236,  1225,
     715,   771,  1208,  1232,  1109,  1232,  1111,  1112,    17,   217,
     288,   376,   488,   744,  1129,  1130,  1139,  1177,  1178,  1179,
    1206,  1418,  1809,  1148,    72,    98,   195,   197,   337,   458,
     652,  1133,  1135,  1169,  1170,  1178,  1816,   772,  1094,  1095,
    2024,  2047,  2024,  2045,   343,   420,  2035,  1816,  1816,  2022,
     878,    14,   779,  2022,  2069,  1962,   840,  2024,    64,    64,
     771,   771,  1803,   583,   771,  1267,    98,    98,  1288,  1338,
    1816,  1803,  1804,  1271,  1310,  1413,   421,   842,   576,   576,
     772,   774,   715,   291,  1756,  1555,   641,   202,   318,   772,
     774,  1581,   771,  1065,  1067,  1062,   411,  1642,  1642,   411,
    1642,  1642,  1642,  1642,   771,  1072,  1079,   423,   294,   376,
     490,   715,   736,  1219,  1222,  1227,  1228,  1229,  1809,  1564,
     772,  1816,   772,   772,   309,  1220,  1224,  1228,  1231,  1221,
    1223,  1228,  1230,  1816,   774,  1115,  1113,  1232,  1209,  1816,
     176,  1210,   771,  1110,   771,   771,   156,  1810,   693,  1178,
     733,   156,   195,  1641,  1186,   760,   761,   771,  1143,  1144,
    1145,  1388,  1433,  1781,  1809,   291,   330,    98,    52,   381,
    1170,  1176,  2005,   778,  2005,   778,  2089,  2068,  2043,  2041,
     245,  1816,  2028,  1804,   845,  2026,  1525,  1527,  1120,  1581,
    1057,  1145,  1031,   150,  1413,  1326,  1656,  1183,  1051,  1053,
     771,  1066,  1067,  1068,   178,  1064,  1067,  1642,  1810,  1810,
    1642,  1584,  1584,  1581,  1818,   688,  1073,  1074,  1642,  1232,
    1810,  1642,  1232,  1277,  1278,  1279,  1229,  1641,   744,  1879,
     581,  1277,  1231,  1277,  1230,   772,  1816,   771,   771,  1114,
     772,   774,   455,   582,   659,   197,  1211,  1233,   771,  1233,
    1233,   419,  1173,    98,  1584,  1810,  1816,  1783,  1783,  1142,
     192,   729,   641,  1143,  1171,  1169,  2048,  2046,   420,  1999,
    2021,  2020,    14,   779,   343,   125,   415,   772,   772,   772,
     771,  1664,  1665,  1802,  1757,  1055,   772,   774,   178,  1070,
    1071,  1415,  1810,  1810,  1075,   772,   774,  1098,  1580,  1279,
    1278,    98,  1584,  1810,  1816,   577,  1219,  1809,   772,  1233,
    1233,   771,  1816,   100,   291,   772,  1233,   772,   772,   772,
     771,  1410,   420,   677,  1134,  2026,  2026,  2022,   853,   240,
     245,   715,  1816,  2089,  1407,   846,  1057,   774,  1641,   244,
    1768,  1067,   774,  1069,  1076,  1818,  1074,  1277,   772,  1234,
    1233,    66,   237,   251,   560,  1212,  1212,  1219,   772,  1220,
    1221,   772,  1581,  1131,  1132,  1177,  1131,   587,   682,   737,
    1136,  1816,  1980,  2023,  2023,  1966,    14,  2029,  1963,   772,
    1665,  1653,   473,  1762,  1071,   772,  1077,  1207,   772,  1234,
      98,   195,   323,   197,   197,  1219,   772,  1177,  1137,  1138,
    1139,   853,   715,   420,   111,    64,  1765,  1219,   772,   291,
     100,  1139,   641,  1778,   140,  1769,  1219,  1212,  1212,  1964,
      29,   771,  1771,   450,   592,  1958,  1959,   166,   244,  1770,
       3,   772,  1772,  1773,  1802,   251,  1774,  1818,  1965,  1818,
     772,   774,  1775,  1776,  1802,  1625,  2077,  1773,   774,  1641,
    1776,  1407,  1653,  1408
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   780,   781,   782,   781,   781,   783,   783,   784,   784,
     784,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     785,   785,   785,   785,   785,   785,   785,   785,   785,   785,
     786,   787,   787,   789,   788,   790,   791,   792,   790,   793,
     794,   793,   795,   795,   797,   796,   799,   798,   800,   800,
     801,   801,   801,   801,   801,   801,   801,   801,   801,   801,
     801,   801,   801,   801,   801,   801,   801,   801,   801,   801,
     802,   802,   802,   803,   804,   804,   804,   805,   806,   806,
     806,   807,   808,   808,   808,   808,   808,   808,   808,   809,
     809,   810,   812,   813,   811,   814,   811,   815,   816,   811,
     817,   818,   811,   819,   820,   811,   821,   822,   811,   823,
     811,   824,   811,   825,   811,   826,   811,   827,   811,   811,
     811,   811,   811,   828,   811,   811,   829,   829,   830,   830,
     831,   831,   831,   831,   831,   831,   831,   831,   831,   831,
     831,   831,   831,   831,   833,   832,   834,   834,   835,   835,
     835,   835,   835,   835,   835,   837,   836,   839,   838,   838,
     840,   840,   840,   840,   841,   841,   842,   842,   843,   843,
     844,   845,   845,   847,   846,   848,   849,   849,   850,   850,
     850,   850,   851,   851,   852,   852,   853,   853,   854,   854,
     854,   854,   854,   854,   854,   855,   855,   856,   856,   858,
     857,   859,   859,   860,   860,   861,   861,   862,   863,   862,
     864,   864,   865,   866,   866,   866,   867,   867,   868,   868,
     869,   869,   869,   871,   870,   872,   873,   873,   874,   874,
     875,   875,   875,   876,   877,   877,   878,   879,   881,   880,
     880,   880,   883,   882,   884,   884,   885,   887,   886,   888,
     888,   888,   888,   889,   889,   890,   891,   891,   892,   893,
     893,   894,   894,   894,   894,   894,   894,   895,   895,   896,
     897,   897,   898,   898,   899,   899,   900,   900,   901,   901,
     901,   902,   902,   902,   902,   902,   902,   902,   902,   902,
     902,   902,   902,   903,   904,   905,   905,   906,   906,   907,
     907,   908,   909,   909,   910,   910,   910,   911,   912,   912,
     913,   914,   914,   914,   914,   914,   914,   914,   914,   914,
     914,   914,   914,   914,   915,   915,   916,   916,   918,   917,
     920,   919,   921,   921,   922,   922,   923,   923,   923,   923,
     924,   924,   924,   924,   925,   926,   927,   929,   928,   930,
     932,   931,   934,   933,   935,   935,   936,   936,   937,   937,
     937,   938,   939,   939,   939,   940,   940,   941,   942,   942,
     944,   945,   943,   946,   946,   946,   946,   948,   947,   950,
     949,   949,   951,   951,   952,   952,   954,   953,   956,   955,
     957,   957,   958,   958,   959,   959,   960,   961,   961,   961,
     962,   963,   964,   966,   965,   967,   965,   968,   969,   970,
     965,   971,   965,   973,   972,   974,   972,   975,   976,   972,
     977,   972,   978,   978,   979,   979,   979,   980,   981,   982,
     983,   983,   984,   984,   985,   986,   987,   987,   989,   988,
     990,   990,   990,   991,   991,   991,   992,   993,   993,   993,
     994,   994,   994,   994,   994,   994,   994,   994,   995,   996,
     996,   996,   997,   997,   997,   997,   997,   998,   999,   999,
     999,  1000,  1000,  1000,  1000,  1000,  1000,  1000,  1001,  1002,
    1002,  1002,  1003,  1003,  1003,  1004,  1005,  1006,  1007,  1008,
    1009,  1009,  1009,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1019,  1020,  1020,  1021,  1021,  1023,  1022,
    1022,  1022,  1024,  1024,  1025,  1025,  1026,  1026,  1027,  1028,
    1028,  1030,  1029,  1031,  1033,  1032,  1035,  1034,  1036,  1037,
    1036,  1036,  1036,  1038,  1036,  1036,  1039,  1036,  1040,  1040,
    1041,  1041,  1042,  1042,  1043,  1043,  1044,  1045,  1046,  1047,
    1048,  1048,  1049,  1050,  1049,  1051,  1049,  1052,  1052,  1053,
    1054,  1055,  1055,  1056,  1056,  1057,  1057,  1059,  1058,  1060,
    1061,  1062,  1061,  1063,  1061,  1061,  1061,  1061,  1064,  1064,
    1065,  1065,  1066,  1066,  1068,  1069,  1067,  1070,  1070,  1071,
    1071,  1072,  1072,  1073,  1073,  1075,  1074,  1076,  1077,  1077,
    1078,  1078,  1079,  1079,  1079,  1079,  1079,  1079,  1079,  1079,
    1079,  1080,  1080,  1080,  1081,  1081,  1082,  1082,  1083,  1083,
    1084,  1084,  1085,  1085,  1085,  1086,  1086,  1087,  1087,  1088,
    1088,  1089,  1089,  1090,  1090,  1091,  1091,  1091,  1092,  1092,
    1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,
    1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1093,  1092,
    1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,
    1092,  1092,  1092,  1092,  1092,  1092,  1092,  1094,  1094,  1095,
    1096,  1097,  1098,  1099,  1100,  1100,  1100,  1100,  1100,  1100,
    1100,  1101,  1101,  1101,  1102,  1102,  1102,  1102,  1103,  1104,
    1105,  1105,  1106,  1106,  1106,  1106,  1106,  1107,  1107,  1109,
    1108,  1110,  1108,  1111,  1108,  1112,  1108,  1113,  1108,  1114,
    1108,  1115,  1108,  1116,  1117,  1118,  1119,  1119,  1120,  1121,
    1121,  1122,  1122,  1123,  1125,  1124,  1127,  1126,  1128,  1126,
    1129,  1129,  1130,  1130,  1131,  1131,  1132,  1132,  1133,  1133,
    1133,  1133,  1134,  1133,  1133,  1133,  1135,  1135,  1136,  1136,
    1136,  1136,  1137,  1137,  1138,  1138,  1139,  1139,  1139,  1139,
    1141,  1140,  1142,  1142,  1143,  1143,  1144,  1144,  1145,  1145,
    1146,  1147,  1147,  1148,  1148,  1148,  1148,  1148,  1148,  1148,
    1148,  1149,  1149,  1149,  1149,  1149,  1149,  1149,  1149,  1149,
    1149,  1150,  1150,  1150,  1150,  1151,  1151,  1151,  1151,  1151,
    1151,  1151,  1151,  1152,  1152,  1152,  1152,  1152,  1153,  1153,
    1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,  1153,
    1153,  1153,  1153,  1154,  1154,  1155,  1156,  1156,  1157,  1157,
    1158,  1158,  1158,  1158,  1158,  1159,  1159,  1159,  1159,  1159,
    1160,  1160,  1160,  1161,  1161,  1162,  1162,  1162,  1163,  1164,
    1164,  1164,  1164,  1164,  1164,  1165,  1166,  1166,  1166,  1166,
    1167,  1167,  1168,  1168,  1169,  1169,  1170,  1170,  1170,  1170,
    1170,  1170,  1170,  1171,  1171,  1172,  1172,  1173,  1173,  1174,
    1175,  1176,  1177,  1177,  1177,  1178,  1178,  1178,  1178,  1178,
    1178,  1179,  1179,  1180,  1180,  1181,  1181,  1182,  1182,  1183,
    1183,  1184,  1184,  1185,  1185,  1186,  1187,  1187,  1188,  1188,
    1189,  1189,  1190,  1190,  1190,  1191,  1192,  1192,  1193,  1193,
    1193,  1193,  1193,  1193,  1194,  1194,  1196,  1195,  1197,  1197,
    1198,  1199,  1199,  1199,  1199,  1200,  1201,  1202,  1202,  1203,
    1204,  1204,  1205,  1205,  1206,  1206,  1207,  1208,  1208,  1209,
    1209,  1210,  1210,  1210,  1210,  1211,  1211,  1211,  1211,  1211,
    1212,  1212,  1212,  1212,  1212,  1213,  1213,  1214,  1214,  1215,
    1215,  1216,  1216,  1216,  1217,  1218,  1219,  1219,  1220,  1220,
    1221,  1221,  1222,  1222,  1223,  1223,  1224,  1224,  1225,  1225,
    1226,  1226,  1226,  1227,  1227,  1228,  1228,  1228,  1228,  1228,
    1228,  1228,  1229,  1229,  1230,  1231,  1231,  1232,  1232,  1232,
    1233,  1233,  1234,  1234,  1235,  1235,  1236,  1236,  1237,  1237,
    1239,  1240,  1238,  1241,  1238,  1242,  1238,  1238,  1243,  1238,
    1244,  1238,  1245,  1238,  1246,  1238,  1247,  1238,  1238,  1238,
    1238,  1238,  1248,  1238,  1238,  1249,  1250,  1251,  1238,  1252,
    1252,  1253,  1253,  1253,  1253,  1254,  1254,  1254,  1254,  1254,
    1255,  1255,  1255,  1255,  1256,  1256,  1257,  1257,  1258,  1258,
    1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,  1259,
    1260,  1259,  1259,  1261,  1259,  1262,  1259,  1259,  1259,  1259,
    1259,  1263,  1264,  1264,  1266,  1265,  1267,  1267,  1267,  1269,
    1268,  1270,  1271,  1270,  1272,  1272,  1273,  1274,  1274,  1275,
    1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,
    1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,
    1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,  1276,
    1276,  1277,  1277,  1277,  1277,  1277,  1278,  1278,  1279,  1279,
    1280,  1280,  1281,  1281,  1283,  1282,  1284,  1284,  1285,  1285,
    1286,  1286,  1287,  1287,  1287,  1288,  1288,  1288,  1289,  1289,
    1289,  1289,  1291,  1290,  1292,  1290,  1290,  1290,  1293,  1294,
    1294,  1295,  1295,  1296,  1296,  1296,  1298,  1297,  1299,  1299,
    1300,  1300,  1300,  1301,  1301,  1301,  1302,  1302,  1304,  1303,
    1305,  1305,  1305,  1306,  1307,  1306,  1309,  1308,  1310,  1310,
    1311,  1311,  1312,  1312,  1312,  1313,  1313,  1315,  1314,  1316,
    1316,  1317,  1318,  1318,  1319,  1319,  1320,  1321,  1320,  1322,
    1323,  1322,  1324,  1324,  1324,  1325,  1325,  1325,  1326,  1326,
    1327,  1327,  1328,  1329,  1328,  1331,  1330,  1332,  1332,  1333,
    1333,  1334,  1334,  1334,  1334,  1334,  1334,  1335,  1335,  1337,
    1336,  1338,  1338,  1338,  1340,  1339,  1339,  1341,  1341,  1342,
    1342,  1343,  1345,  1344,  1346,  1346,  1347,  1347,  1348,  1349,
    1350,  1350,  1352,  1351,  1353,  1353,  1354,  1354,  1355,  1356,
    1358,  1357,  1360,  1359,  1361,  1361,  1362,  1362,  1364,  1363,
    1365,  1363,  1367,  1366,  1368,  1366,  1369,  1369,  1371,  1370,
    1373,  1374,  1372,  1375,  1376,  1377,  1377,  1378,  1378,  1380,
    1379,  1381,  1379,  1382,  1382,  1383,  1384,  1383,  1383,  1385,
    1385,  1386,  1387,  1388,  1388,  1389,  1389,  1390,  1391,  1391,
    1392,  1392,  1393,  1393,  1393,  1394,  1394,  1394,  1395,  1396,
    1396,  1397,  1397,  1398,  1398,  1398,  1398,  1399,  1399,  1400,
    1400,  1400,  1401,  1401,  1402,  1402,  1403,  1403,  1403,  1404,
    1404,  1404,  1405,  1405,  1406,  1407,  1408,  1409,  1409,  1409,
    1409,  1409,  1410,  1410,  1410,  1411,  1411,  1411,  1412,  1412,
    1413,  1413,  1413,  1413,  1413,  1413,  1413,  1413,  1413,  1413,
    1413,  1413,  1413,  1413,  1413,  1413,  1414,  1414,  1414,  1414,
    1414,  1414,  1414,  1414,  1414,  1414,  1414,  1414,  1414,  1414,
    1414,  1414,  1415,  1415,  1415,  1415,  1415,  1415,  1415,  1415,
    1415,  1415,  1415,  1415,  1415,  1415,  1415,  1415,  1415,  1415,
    1415,  1416,  1416,  1417,  1417,  1418,  1418,  1419,  1419,  1420,
    1420,  1420,  1420,  1420,  1420,  1421,  1421,  1422,  1422,  1423,
    1423,  1423,  1424,  1424,  1424,  1424,  1424,  1424,  1425,  1425,
    1425,  1427,  1426,  1426,  1428,  1429,  1429,  1430,  1430,  1430,
    1430,  1431,  1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,
    1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,
    1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,
    1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,  1434,
    1434,  1434,  1434,  1435,  1435,  1436,  1436,  1436,  1436,  1436,
    1436,  1437,  1437,  1438,  1438,  1439,  1439,  1439,  1439,  1439,
    1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,
    1439,  1439,  1439,  1439,  1439,  1439,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1441,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1441,  1441,  1443,  1442,  1442,  1442,  1442,  1442,
    1444,  1444,  1445,  1445,  1446,  1446,  1447,  1447,  1448,  1448,
    1449,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1451,  1452,
    1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,  1450,
    1450,  1453,  1450,  1454,  1450,  1455,  1450,  1456,  1456,  1457,
    1457,  1457,  1458,  1458,  1458,  1458,  1458,  1458,  1458,  1458,
    1458,  1458,  1458,  1458,  1458,  1459,  1461,  1460,  1460,  1462,
    1462,  1463,  1464,  1466,  1465,  1467,  1467,  1467,  1467,  1468,
    1468,  1469,  1469,  1470,  1470,  1471,  1471,  1472,  1472,  1473,
    1474,  1475,  1475,  1475,  1477,  1476,  1478,  1479,  1478,  1480,
    1478,  1481,  1478,  1478,  1478,  1478,  1478,  1478,  1478,  1482,
    1482,  1482,  1482,  1482,  1482,  1482,  1482,  1483,  1483,  1483,
    1483,  1484,  1484,  1485,  1485,  1486,  1486,  1487,  1487,  1488,
    1488,  1489,  1489,  1490,  1490,  1491,  1491,  1492,  1493,  1493,
    1494,  1494,  1495,  1496,  1495,  1497,  1495,  1495,  1498,  1495,
    1499,  1495,  1495,  1500,  1495,  1501,  1495,  1495,  1502,  1502,
    1502,  1503,  1503,  1504,  1504,  1505,  1506,  1506,  1506,  1506,
    1507,  1507,  1508,  1508,  1509,  1509,  1510,  1510,  1511,  1511,
    1512,  1513,  1514,  1514,  1515,  1515,  1515,  1515,  1516,  1516,
    1518,  1517,  1519,  1517,  1520,  1520,  1521,  1522,  1521,  1524,
    1523,  1525,  1525,  1526,  1526,  1527,  1527,  1528,  1528,  1529,
    1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,
    1529,  1530,  1530,  1530,  1530,  1530,  1530,  1530,  1530,  1530,
    1531,  1531,  1531,  1531,  1532,  1532,  1532,  1533,  1533,  1534,
    1535,  1535,  1536,  1537,  1536,  1538,  1539,  1538,  1540,  1540,
    1541,  1541,  1542,  1542,  1542,  1543,  1543,  1544,  1544,  1545,
    1547,  1546,  1548,  1548,  1549,  1549,  1550,  1550,  1551,  1551,
    1552,  1552,  1553,  1553,  1554,  1554,  1554,  1555,  1555,  1555,
    1556,  1556,  1556,  1556,  1556,  1556,  1557,  1558,  1558,  1559,
    1560,  1560,  1562,  1561,  1563,  1563,  1564,  1564,  1564,  1565,
    1565,  1566,  1566,  1566,  1567,  1568,  1568,  1568,  1569,  1569,
    1569,  1569,  1569,  1569,  1570,  1571,  1571,  1571,  1571,  1572,
    1572,  1572,  1573,  1573,  1574,  1575,  1576,  1576,  1576,  1577,
    1577,  1578,  1578,  1579,  1579,  1580,  1580,  1580,  1580,  1580,
    1580,  1581,  1581,  1581,  1581,  1581,  1582,  1582,  1582,  1582,
    1583,  1583,  1583,  1583,  1583,  1584,  1584,  1584,  1584,  1584,
    1585,  1586,  1586,  1587,  1587,  1588,  1588,  1588,  1590,  1589,
    1591,  1591,  1592,  1592,  1593,  1595,  1594,  1596,  1596,  1597,
    1598,  1598,  1598,  1599,  1601,  1602,  1600,  1600,  1600,  1604,
    1603,  1606,  1605,  1607,  1605,  1605,  1605,  1605,  1608,  1605,
    1605,  1605,  1605,  1605,  1605,  1609,  1605,  1605,  1610,  1610,
    1611,  1612,  1613,  1613,  1614,  1615,  1615,  1616,  1616,  1617,
    1617,  1619,  1620,  1618,  1622,  1623,  1621,  1624,  1625,  1626,
    1626,  1626,  1627,  1627,  1628,  1628,  1629,  1629,  1631,  1630,
    1632,  1632,  1633,  1632,  1634,  1635,  1635,  1636,  1636,  1637,
    1638,  1638,  1639,  1639,  1640,  1641,  1641,  1642,  1642,  1643,
    1643,  1644,  1644,  1646,  1645,  1648,  1647,  1649,  1649,  1650,
    1650,  1651,  1651,  1652,  1652,  1653,  1653,  1653,  1654,  1655,
    1656,  1654,  1657,  1657,  1659,  1660,  1661,  1658,  1662,  1662,
    1663,  1664,  1664,  1665,  1666,  1666,  1668,  1667,  1669,  1669,
    1670,  1670,  1671,  1672,  1673,  1674,  1675,  1673,  1676,  1677,
    1673,  1678,  1679,  1678,  1680,  1680,  1681,  1681,  1682,  1682,
    1683,  1683,  1684,  1684,  1684,  1686,  1687,  1685,  1688,  1688,
    1689,  1689,  1690,  1690,  1691,  1691,  1691,  1691,  1691,  1691,
    1691,  1691,  1691,  1692,  1692,  1694,  1693,  1695,  1695,  1695,
    1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,
    1695,  1696,  1695,  1697,  1695,  1695,  1695,  1695,  1695,  1695,
    1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,
    1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,
    1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,
    1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,  1695,
    1695,  1695,  1695,  1695,  1698,  1698,  1698,  1699,  1699,  1700,
    1700,  1701,  1701,  1702,  1702,  1703,  1703,  1704,  1704,  1705,
    1705,  1706,  1706,  1706,  1708,  1707,  1709,  1707,  1710,  1710,
    1710,  1710,  1710,  1710,  1711,  1711,  1712,  1713,  1713,  1713,
    1713,  1714,  1714,  1715,  1715,  1715,  1717,  1716,  1719,  1718,
    1718,  1720,  1720,  1721,  1722,  1721,  1723,  1723,  1724,  1724,
    1724,  1724,  1724,  1724,  1724,  1724,  1724,  1724,  1724,  1724,
    1724,  1724,  1724,  1724,  1724,  1724,  1725,  1725,  1726,  1727,
    1728,  1727,  1727,  1729,  1729,  1730,  1730,  1730,  1731,  1732,
    1732,  1734,  1733,  1735,  1735,  1737,  1736,  1738,  1736,  1736,
    1739,  1739,  1740,  1740,  1741,  1742,  1741,  1744,  1743,  1745,
    1745,  1745,  1746,  1746,  1746,  1747,  1747,  1748,  1748,  1750,
    1749,  1751,  1751,  1752,  1754,  1755,  1756,  1757,  1753,  1758,
    1758,  1759,  1759,  1760,  1760,  1760,  1761,  1761,  1761,  1762,
    1762,  1763,  1763,  1764,  1764,  1764,  1764,  1765,  1765,  1766,
    1766,  1767,  1767,  1768,  1768,  1769,  1769,  1770,  1770,  1771,
    1771,  1771,  1772,  1772,  1773,  1773,  1774,  1774,  1775,  1775,
    1776,  1777,  1777,  1777,  1777,  1778,  1778,  1779,  1779,  1779,
    1780,  1780,  1780,  1781,  1781,  1782,  1782,  1782,  1782,  1782,
    1782,  1782,  1782,  1782,  1782,  1783,  1783,  1783,  1783,  1783,
    1784,  1784,  1784,  1786,  1785,  1787,  1787,  1788,  1788,  1789,
    1790,  1791,  1790,  1792,  1792,  1793,  1794,  1795,  1795,  1796,
    1797,  1797,  1798,  1798,  1799,  1799,  1800,  1801,  1801,  1801,
    1801,  1801,  1802,  1802,  1802,  1802,  1802,  1803,  1803,  1803,
    1803,  1804,  1804,  1804,  1805,  1805,  1806,  1807,  1807,  1808,
    1808,  1808,  1809,  1810,  1811,  1812,  1813,  1813,  1814,  1814,
    1815,  1815,  1815,  1816,  1816,  1817,  1817,  1818,  1818,  1818,
    1819,  1819,  1819,  1820,  1820,  1821,  1822,  1822,  1822,  1822,
    1822,  1822,  1822,  1822,  1822,  1822,  1822,  1823,  1823,  1823,
    1823,  1823,  1823,  1823,  1823,  1823,  1823,  1823,  1823,  1824,
    1824,  1824,  1824,  1824,  1824,  1824,  1824,  1824,  1824,  1824,
    1825,  1825,  1825,  1825,  1825,  1825,  1825,  1825,  1825,  1825,
    1825,  1826,  1826,  1826,  1826,  1826,  1826,  1826,  1827,  1827,
    1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,
    1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,
    1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,
    1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,
    1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,  1827,
    1827,  1827,  1828,  1828,  1828,  1828,  1828,  1828,  1829,  1829,
    1829,  1829,  1829,  1829,  1829,  1829,  1829,  1829,  1830,  1830,
    1830,  1831,  1831,  1831,  1832,  1832,  1832,  1832,  1832,  1832,
    1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,
    1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,  1832,
    1833,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,  1834,
    1834,  1834,  1834,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,
    1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1835,  1837,
    1836,  1838,  1838,  1839,  1838,  1840,  1838,  1841,  1838,  1842,
    1842,  1843,  1843,  1844,  1843,  1845,  1845,  1847,  1846,  1846,
    1848,  1848,  1848,  1849,  1849,  1849,  1849,  1850,  1850,  1850,
    1850,  1852,  1851,  1853,  1851,  1854,  1851,  1856,  1855,  1857,
    1855,  1858,  1855,  1860,  1859,  1861,  1859,  1862,  1859,  1863,
    1859,  1864,  1859,  1865,  1859,  1866,  1859,  1859,  1859,  1859,
    1859,  1859,  1859,  1867,  1859,  1868,  1859,  1869,  1859,  1870,
    1870,  1870,  1870,  1871,  1872,  1873,  1873,  1874,  1874,  1874,
    1874,  1875,  1875,  1875,  1876,  1876,  1876,  1876,  1876,  1878,
    1877,  1879,  1879,  1879,  1880,  1880,  1881,  1881,  1882,  1883,
    1883,  1883,  1883,  1883,  1885,  1884,  1887,  1886,  1888,  1888,
    1889,  1888,  1890,  1890,  1891,  1891,  1892,  1892,  1892,  1892,
    1893,  1892,  1894,  1894,  1894,  1894,  1894,  1895,  1896,  1896,
    1896,  1896,  1896,  1897,  1897,  1898,  1899,  1899,  1899,  1899,
    1900,  1900,  1901,  1901,  1902,  1902,  1903,  1904,  1904,  1905,
    1905,  1906,  1906,  1907,  1907,  1908,  1908,  1908,  1908,  1909,
    1910,  1910,  1910,  1910,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,  1911,
    1911,  1911,  1911,  1911,  1911,  1911,  1912,  1912,  1913,  1913,
    1914,  1914,  1914,  1915,  1915,  1915,  1915,  1916,  1916,  1917,
    1917,  1918,  1918,  1919,  1919,  1920,  1920,  1921,  1921,  1921,
    1921,  1922,  1922,  1923,  1924,  1924,  1924,  1925,  1925,  1925,
    1925,  1925,  1926,  1926,  1926,  1926,  1926,  1927,  1927,  1928,
    1928,  1929,  1929,  1930,  1930,  1931,  1931,  1932,  1932,  1934,
    1933,  1935,  1936,  1936,  1937,  1937,  1938,  1938,  1938,  1939,
    1939,  1939,  1940,  1941,  1941,  1941,  1942,  1943,  1944,  1944,
    1944,  1945,  1945,  1945,  1946,  1946,  1946,  1946,  1946,  1946,
    1946,  1946,  1946,  1947,  1947,  1948,  1949,  1950,  1950,  1950,
    1951,  1951,  1952,  1952,  1953,  1953,  1954,  1954,  1956,  1955,
    1957,  1957,  1957,  1957,  1958,  1958,  1959,  1959,  1961,  1962,
    1963,  1964,  1965,  1960,  1967,  1966,  1968,  1968,  1968,  1968,
    1968,  1968,  1969,  1969,  1970,  1970,  1970,  1971,  1971,  1971,
    1972,  1972,  1972,  1973,  1973,  1974,  1975,  1974,  1976,  1976,
    1977,  1977,  1978,  1978,  1979,  1980,  1981,  1981,  1982,  1983,
    1982,  1984,  1982,  1985,  1986,  1987,  1988,  1988,  1989,  1989,
    1989,  1989,  1989,  1989,  1989,  1990,  1990,  1990,  1990,  1990,
    1990,  1990,  1991,  1991,  1991,  1992,  1993,  1995,  1994,  1996,
    1997,  1998,  1999,  2000,  2000,  2000,  2001,  2001,  2001,  2002,
    2002,  2002,  2002,  2002,  2002,  2004,  2003,  2005,  2006,  2006,
    2006,  2006,  2006,  2006,  2006,  2006,  2007,  2007,  2008,  2008,
    2010,  2009,  2011,  2009,  2012,  2009,  2013,  2013,  2014,  2015,
    2015,  2016,  2016,  2018,  2017,  2019,  2020,  2020,  2021,  2021,
    2022,  2022,  2023,  2023,  2024,  2024,  2025,  2027,  2028,  2029,
    2026,  2030,  2030,  2031,  2031,  2032,  2032,  2034,  2033,  2035,
    2035,  2036,  2036,  2036,  2037,  2037,  2038,  2038,  2039,  2041,
    2040,  2043,  2042,  2044,  2044,  2044,  2046,  2045,  2048,  2047,
    2049,  2050,  2050,  2051,  2051,  2052,  2052,  2053,  2053,  2054,
    2054,  2054,  2054,  2056,  2055,  2058,  2059,  2057,  2060,  2060,
    2060,  2060,  2060,  2062,  2061,  2063,  2061,  2064,  2061,  2061,
    2065,  2061,  2066,  2067,  2068,  2061,  2069,  2069,  2071,  2070,
    2070,  2072,  2072,  2073,  2073,  2074,  2074,  2075,  2075,  2075,
    2076,  2075,  2077,  2077,  2077,  2077,  2077,  2077,  2078,  2078,
    2078,  2078,  2078,  2078,  2078,  2078,  2078,  2078,  2078,  2079,
    2079,  2079,  2079,  2081,  2080,  2082,  2083,  2080,  2084,  2084,
    2086,  2085,  2087,  2088,  2085,  2090,  2089
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     0,     5,     3,     0,     0,     6,     0,
       0,     3,     1,     3,     0,     3,     0,     6,     1,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     5,     5,     5,     1,
       0,     1,     3,     1,     0,     1,     3,     1,     0,     1,
       3,     1,     3,     3,     3,     3,     3,     3,     3,     0,
       1,     1,     0,     0,     8,     0,     8,     0,     0,    15,
       0,     0,    17,     0,     0,    15,     0,     0,    15,     0,
       6,     0,    10,     0,    11,     0,     5,     0,     5,     8,
       6,     4,     3,     0,     3,     1,     0,     1,     1,     2,
       3,     2,     1,     3,     2,     1,     3,     3,     3,     1,
       1,     1,     1,     3,     0,    12,     1,     3,     2,     2,
       2,     2,     2,     2,     2,     0,    12,     0,     6,     2,
       0,     1,     3,     1,     0,     2,     0,     2,     0,     1,
       4,     0,     2,     0,     2,     0,     0,     1,     1,     1,
       1,     2,     3,     1,     0,     2,     0,     2,     2,     2,
       2,     2,     3,     3,     1,     1,     2,     3,     3,     0,
       4,     0,     3,     0,     1,     3,     1,     0,     0,     2,
       3,     1,     1,     2,     3,     1,     0,     1,     3,     1,
       1,     1,     1,     0,     4,     3,     0,     3,     2,     3,
       1,     3,     5,     2,     1,     3,     3,     1,     0,     4,
       4,     1,     0,     6,     0,     3,     0,     0,     3,     1,
       1,     1,     1,     1,     3,     1,     1,     1,     3,     0,
       1,     1,     1,     1,     2,     1,     1,     2,     3,     3,
       1,     1,     0,     1,     0,     2,     3,     5,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     4,     0,     1,     1,     3,     1,
       3,     3,     1,     2,     1,     1,     1,     1,     1,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     0,     5,
       0,     2,     1,     1,     2,     1,     1,     2,     3,     4,
       1,     2,     3,     4,     2,     2,     2,     0,     2,     0,
       0,     3,     0,     3,     1,     3,     0,     3,     1,     1,
       1,     3,     3,     4,     5,     2,     4,     2,     1,     3,
       0,     0,     6,     0,     2,     2,     2,     0,     6,     0,
       3,     1,     1,     2,     1,     2,     0,     5,     0,     5,
       0,     2,     0,     1,     0,     1,     2,     5,     3,     5,
       3,     5,     1,     0,     5,     0,     5,     0,     0,     0,
       8,     0,     5,     0,     3,     0,     3,     0,     0,     5,
       0,     3,     1,     1,     1,     1,     1,     2,     4,     5,
       0,     4,     4,     4,     3,     3,     2,     2,     0,     2,
       1,     2,     3,     1,     1,     1,     1,     1,     2,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     3,     1,     1,     1,     1,     1,     1,     1,     2,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     3,     1,     1,     1,     2,     2,     2,     1,     1,
       1,     1,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     4,     0,     1,     1,     1,     1,     1,     0,     5,
       3,     1,     2,     4,     0,     4,     1,     4,     1,     0,
       1,     0,     4,     0,     0,     3,     0,     6,     6,     0,
       4,     2,     2,     0,     3,     2,     0,     3,     0,     1,
       0,     3,     0,     1,     1,     3,     1,     4,     3,     3,
       0,     2,     0,     0,     7,     0,    10,     1,     3,     1,
       1,     0,     2,     0,     3,     1,     3,     0,     6,     1,
       0,     0,     4,     0,     3,     1,     1,     1,     1,     1,
       1,     3,     1,     3,     0,     0,     5,     1,     3,     1,
       1,     0,     3,     1,     3,     0,     4,     1,     0,     1,
       2,     1,     3,     4,     3,     3,     3,     3,     4,     4,
       3,     0,     4,     2,     0,     2,     0,     1,     0,     1,
       1,     2,     1,     1,     3,     0,     3,     0,     3,     1,
       3,     0,     1,     1,     2,     1,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     0,     6,
       1,     1,     3,     4,     4,     2,     2,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     1,     0,     1,     2,
       4,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     3,     1,     1,     1,     1,     2,     1,     3,     0,
       9,     0,    10,     0,     9,     0,     9,     0,    11,     0,
      12,     0,    10,     2,     7,     7,     0,     1,     4,     0,
       1,     0,     1,     2,     0,     4,     0,     3,     0,     3,
       0,     1,     2,     1,     0,     1,     2,     1,     0,     1,
       2,     3,     0,     6,     5,     5,     0,     2,     0,     1,
       1,     1,     0,     1,     2,     1,     1,     2,     2,     1,
       0,     3,     1,     3,     3,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     1,     1,     1,     3,     3,
       3,     3,     3,     3,     2,     1,     1,     3,     3,     3,
       3,     0,     1,     2,     2,     3,     3,     2,     3,     3,
       4,     3,     3,     3,     1,     2,     2,     2,     2,     3,
       3,     2,     2,     2,     3,     3,     2,     3,     2,     2,
       2,     2,     2,     5,     5,     1,     1,     2,     2,     1,
       2,     1,     2,     3,     2,     1,     1,     1,     1,     1,
       1,     1,     2,     0,     3,     0,     1,     1,     5,     0,
       1,     1,     1,     2,     2,     1,     3,     3,     3,     3,
       0,     1,     0,     1,     2,     1,     1,     2,     4,     1,
       3,     2,     1,     0,     2,     0,     1,     0,     1,     2,
       2,     2,     3,     2,     1,     1,     3,     3,     3,     3,
       2,     1,     2,     2,     1,     1,     1,     1,     1,     0,
       2,     1,     1,     1,     1,     1,     0,     2,     1,     1,
       0,     1,     2,     1,     1,     2,     0,     1,     1,     2,
       1,     2,     2,     1,     0,     1,     0,     4,     1,     1,
       1,     0,     1,     2,     1,     1,     2,     1,     3,     3,
       1,     1,     0,     2,     0,     1,     5,     0,     3,     3,
       1,     0,     2,     2,     2,     0,     3,     3,     6,     6,
       1,     1,     2,     2,     2,     2,     2,     1,     1,     0,
       1,     1,     1,     1,     1,     1,     0,     1,     0,     1,
       0,     1,     1,     2,     1,     2,     1,     2,     0,     2,
       0,     2,     2,     2,     2,     3,     2,     1,     3,     3,
       3,     3,     1,     1,     1,     1,     3,     1,     1,     1,
       4,     2,     0,     4,     1,     4,     0,     1,     1,     3,
       0,     0,     9,     0,     5,     0,     7,     7,     0,     6,
       0,     6,     0,    11,     0,    10,     0,    11,     3,     4,
       3,     3,     0,     8,     8,     0,     0,     0,     9,     1,
       1,     0,     1,     1,     3,     0,     2,     3,     5,     5,
       0,     3,     1,     4,     0,     3,     0,     2,     0,     1,
       0,     2,     2,     2,     2,     1,     1,     1,     4,     4,
       0,     6,     4,     0,     5,     0,     6,     4,     3,     1,
       7,     2,     1,     1,     0,     6,     0,     3,     2,     0,
       5,     0,     0,     6,     1,     3,     1,     1,     3,     3,
       3,     2,     2,     4,     4,     2,     7,     6,     5,     5,
       4,     5,     4,     4,     2,     2,     7,     6,     3,     6,
       6,     5,     1,     1,     1,     1,     1,     3,     3,     3,
       5,     0,     1,     1,     2,     2,     3,     3,     3,     3,
       0,     1,     0,     1,     0,     2,     0,     1,     2,     1,
       1,     1,     0,     1,     1,     0,     2,     1,     0,     1,
       1,     1,     0,     6,     0,     5,     4,     4,     3,     0,
       1,     1,     3,     3,     2,     2,     0,     2,     1,     3,
       0,     1,     1,     0,     2,     4,     1,     3,     0,     5,
       0,     1,     1,     3,     0,     4,     0,     4,     0,     1,
       1,     2,     1,     1,     1,     0,     2,     0,     5,     1,
       3,     2,     0,     3,     1,     4,     1,     0,     4,     1,
       0,     4,     0,     1,     3,     0,     1,     3,     1,     1,
       2,     6,     3,     0,     4,     0,     3,     0,     1,     1,
       2,     1,     1,     1,     1,     1,     2,     0,     2,     0,
       6,     0,     1,     1,     0,     5,     4,     3,     5,     1,
       3,     4,     0,     6,     1,     1,     1,     3,     2,     3,
       1,     1,     0,     6,     1,     1,     1,     3,     3,     4,
       0,     6,     0,     2,     0,     4,     0,     2,     0,     3,
       0,     4,     0,     3,     0,     4,     1,     1,     0,     3,
       0,     0,     5,     6,     7,     1,     2,     1,     1,     0,
       3,     0,     3,     3,     3,     1,     0,     4,     3,     1,
       1,     1,     1,     1,     4,     0,     1,     2,     1,     1,
       0,     1,     0,     1,     1,     2,     1,     2,     9,     0,
       1,     0,     2,     3,     1,     4,     4,     2,     1,     1,
       1,     1,     3,     5,     0,     1,     0,     2,     1,     3,
       1,     1,     3,     4,     0,     0,     0,     0,     2,     2,
       1,     1,     0,     2,     3,     0,     2,     3,     0,     2,
       3,     3,     3,     2,     3,     4,     3,     4,     3,     4,
       3,     4,     3,     3,     6,     1,     3,     4,     5,     7,
       6,     8,     5,     6,     4,     3,     5,     4,     6,     3,
       4,     1,     3,     3,     3,     3,     3,     3,     3,     5,
       5,     5,     6,     6,     3,     3,     3,     3,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     2,     1,
       1,     1,     1,     2,     1,     1,     1,     2,     1,     2,
       2,     0,     3,     1,     4,     1,     3,     1,     1,     1,
       1,     3,     1,     4,     4,     4,     3,     3,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     6,     4,     4,     7,     6,     3,     4,     6,     6,
       4,     4,     4,     4,     4,     4,     6,     8,    10,     1,
       1,     3,     1,     1,     3,     1,     2,     2,     2,     2,
       2,     1,     3,     4,     6,     4,     6,     2,     2,     4,
       4,     4,    10,     6,     8,     6,     4,     4,     6,     4,
       3,     4,     1,     4,     3,     4,     6,     8,     2,     2,
       8,     8,     6,     8,     6,     6,     6,     6,     2,     6,
       6,     8,     8,     6,     8,     6,     2,     8,     8,     4,
       2,     2,     2,     6,     6,     4,     4,     8,     4,     4,
       4,     4,     3,     8,     6,     8,     4,     6,     4,     6,
       4,     4,     4,     6,     8,     4,     3,     6,     4,     6,
       5,     8,     7,    10,     0,     5,     4,     4,     4,     6,
       2,     3,     0,     4,     0,     3,     0,     1,     1,     3,
       4,     4,     5,     4,     4,     4,     5,     4,     0,     0,
       7,     4,     5,     4,     5,     4,     4,     4,     4,     4,
       5,     0,     9,     0,     8,     0,     7,     3,     3,     1,
       1,     1,     3,     3,     3,     3,     3,     4,     4,     4,
       6,     4,     6,     4,     6,     5,     0,     7,     4,     4,
       4,     4,     1,     0,     3,     3,     1,     3,     5,     0,
       1,     0,     2,     0,     3,     4,     2,     0,     1,     1,
       2,     1,     3,     3,     0,     3,     2,     0,     4,     0,
       4,     0,     4,     2,     1,     1,     1,     1,     1,     1,
       1,     2,     1,     2,     2,     1,     2,     1,     2,     2,
       3,     0,     1,     1,     3,     1,     3,     1,     3,     4,
       5,     1,     3,     3,     3,     1,     1,     1,     1,     4,
       1,     3,     3,     0,     6,     0,     8,     4,     0,     8,
       0,    10,     6,     0,     8,     0,    10,     6,     1,     2,
       1,     1,     2,     0,     1,     5,     1,     1,     1,     1,
       1,     3,     1,     3,     3,     3,     3,     3,     3,     3,
       5,     3,     0,     1,     0,     2,     3,     3,     1,     1,
       0,     7,     0,     7,     1,     2,     0,     0,     2,     0,
       2,     0,     1,     1,     1,     1,     3,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     0,     1,     2,
       0,     1,     0,     0,     3,     0,     0,     3,     0,     4,
       4,     2,     0,     1,     1,     0,     2,     3,     1,     3,
       0,     7,     0,     1,     0,     3,     0,     3,     0,     3,
       1,     1,     1,     4,     2,     2,     2,     1,     2,     2,
       0,     3,     2,     2,     3,     3,     3,     3,     1,     2,
       0,     1,     0,     4,     4,     2,     0,     1,     1,     0,
       1,     2,     5,     4,     1,     1,     3,     3,     1,     3,
       1,     1,     1,     1,     1,     0,     2,     3,     4,     1,
       2,     1,     0,     1,     1,     1,     0,     2,     2,     2,
       1,     0,     1,     2,     2,     2,     1,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     2,     1,     2,     2,
       2,     2,     2,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     6,
       0,     1,     3,     1,     3,     0,     2,     3,     1,     1,
       2,     1,     3,     2,     0,     0,     7,     2,     1,     0,
       3,     0,     8,     0,     8,     4,     5,     5,     0,     6,
       4,     4,     5,     6,     4,     0,     6,     1,     1,     3,
       1,     2,     1,     3,     1,     0,     2,     0,     2,     0,
       1,     0,     0,    12,     0,     0,    10,     0,     0,     0,
       1,     1,     0,     1,     1,     1,     0,     1,     0,     2,
       1,     2,     0,     3,     3,     0,     1,     3,     1,     1,
       3,     1,     3,     1,     3,     1,     1,     0,     1,     1,
       1,     1,     1,     0,     4,     0,     4,     0,     1,     0,
       1,     3,     1,     5,     3,     1,     1,     1,     0,     0,
       0,     7,     5,     1,     0,     0,     0,    13,     3,     1,
       3,     3,     1,     3,     0,     1,     0,     3,     0,     3,
       2,     3,     3,     2,     5,     0,     0,     7,     0,     0,
       8,     0,     0,     3,     1,     3,     2,     4,     0,     2,
       0,     2,     1,     1,     1,     0,     0,     7,     0,     1,
       0,     1,     1,     3,     1,     1,     2,     2,     2,     1,
       1,     1,     1,     0,     3,     0,     3,     2,     4,     4,
       3,     4,     4,     1,     3,     3,     3,     3,     6,     2,
       2,     0,     6,     0,     7,     5,     2,     1,     1,     1,
       5,     5,     2,     2,     1,     4,     3,     2,     3,     2,
       2,     1,     4,     4,     3,     3,     3,     2,     2,     3,
       2,     3,     3,     3,     3,     3,     4,     4,     3,     2,
       3,     3,     3,     3,     3,     4,     4,     3,     3,     4,
       4,     3,     3,     3,     1,     1,     1,     1,     1,     0,
       1,     0,     2,     0,     1,     1,     1,     0,     2,     0,
       2,     0,     3,     3,     0,     4,     0,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     2,     1,
       1,     0,     3,     0,     1,     1,     0,     4,     0,     4,
       1,     0,     1,     4,     0,     3,     3,     1,     2,     2,
       2,     2,     3,     3,     2,     1,     1,     1,     1,     2,
       1,     1,     1,     1,     1,     2,     0,     1,     2,     2,
       0,     3,     1,     0,     5,     0,     1,     3,     1,     0,
       3,     0,     3,     3,     1,     0,     4,     0,     3,     2,
       0,     1,     0,     2,     5,     0,     6,     0,     4,     0,
       1,     1,     2,     2,     3,     0,     1,     1,     2,     0,
       3,     0,     4,     2,     0,     0,     0,     0,    23,     1,
       1,     0,     1,     0,     1,     1,     0,     1,     1,     0,
       2,     2,     1,     3,     4,     3,     3,     0,     2,     2,
       1,     3,     3,     0,     4,     0,     3,     1,     1,     0,
       3,     2,     3,     1,     1,     2,     0,     2,     3,     1,
       5,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     2,     2,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     1,     1,     1,
       2,     2,     2,     0,     4,     0,     1,     1,     3,     7,
       0,     0,     4,     0,     3,     1,     1,     1,     3,     1,
       1,     1,     3,     5,     3,     5,     1,     1,     3,     4,
       5,     4,     1,     3,     4,     4,     5,     1,     5,     3,
       2,     1,     3,     2,     2,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       3,     1,     3,     0,     3,     0,     3,     0,     5,     1,
       3,     1,     3,     0,     3,     1,     3,     0,     3,     1,
       1,     1,     1,     0,     1,     1,     1,     0,     2,     2,
       2,     0,     4,     0,     6,     0,     6,     0,     4,     0,
       6,     0,     6,     0,     4,     0,     6,     0,     6,     0,
       5,     0,     7,     0,     9,     0,     9,     2,     3,     3,
       3,     5,     2,     0,     4,     0,     4,     0,     6,     1,
       1,     3,     3,     1,     3,     2,     2,     2,     2,     2,
       1,     1,     4,     4,     1,     1,     1,     1,     1,     0,
       5,     0,     2,     1,     1,     1,     1,     3,     3,     1,
       1,     2,     2,     2,     0,     3,     0,     3,     3,     2,
       0,     6,     1,     2,     1,     1,     1,     1,     1,     1,
       0,     5,     1,     1,     1,     1,     1,     3,     6,     6,
       7,     5,     3,     4,     1,     3,     8,     8,     6,     4,
       0,     3,     0,     3,     1,     3,     2,     1,     1,     0,
       1,     1,     2,     0,     1,     1,     1,     3,     3,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     3,     2,     2,     2,     2,     2,     2,     2,
       2,     1,     1,     2,     2,     2,     2,     2,     3,     2,
       2,     2,     2,     3,     3,     2,     0,     1,     3,     1,
       2,     2,     2,     1,     3,     3,     1,     1,     3,     1,
       3,     1,     3,     1,     1,     1,     1,     4,     5,     4,
       1,     3,     1,     2,     0,     2,     5,     0,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     1,     0,
       2,     0,     2,     0,     3,     2,     1,     2,     1,     0,
       3,     1,     0,     1,     0,     1,     0,     3,     2,     0,
       1,     2,     4,     4,     5,     4,     2,     3,     2,     2,
       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     3,     3,     3,     3,
       0,     1,     3,     3,     0,     3,     1,     3,     0,     3,
       0,     3,     4,     4,     1,     1,     0,     2,     0,     0,
       0,     0,     0,    19,     0,     2,     4,     4,     3,     4,
       3,     3,     0,     3,     1,     3,     5,     1,     1,     1,
       0,     1,     1,     0,     2,     0,     0,     3,     0,     2,
       6,     3,     4,     4,     1,     0,     1,     1,     1,     0,
       3,     0,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     0,     6,     4,
       1,     1,     0,     1,     2,     2,     1,     1,     2,     3,
       7,     9,     5,     7,     4,     0,     2,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     4,     0,     6,     0,     7,     1,     2,     3,     1,
       2,     1,     2,     0,     5,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     0,     0,     0,
       7,     2,     1,     1,     2,     1,     1,     0,     2,     1,
       3,     1,     1,     2,     1,     2,     1,     2,     0,     0,
       8,     0,     6,     4,     4,     1,     0,     5,     0,     5,
       2,     1,     1,     1,     2,     3,     3,     5,     5,     6,
       8,     4,     6,     0,     4,     0,     0,     8,     6,     4,
       4,     4,     5,     0,     6,     0,    12,     0,    12,    10,
       0,    13,     0,     0,     0,    16,     1,     1,     0,     3,
       1,     2,     3,     2,     3,     1,     1,     1,     4,     2,
       0,     6,     1,     1,     1,     1,     1,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     6,     0,     0,     9,     1,     2,
       0,     5,     0,     0,     7,     0,     4
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (thd, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256



/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)

/* This macro is provided for backward compatibility. */
#ifndef YY_LOCATION_PRINT
# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (thd);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep, thd);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule, THD *thd)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                                              , thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, THD *thd)
{
  YYUSE (yyvaluep);
  YYUSE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yystacksize);

        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 1846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!thd->bootstrap &&
              (!(thd->lex->lex_options & OPTION_LEX_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 26903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3:
#line 1855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 26930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 1880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 26939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 1962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->stmt_deallocate_prepare((yyvsp[0].ident_sys));
          }
#line 26947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 1974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "PREPARE..FROM"; }
#line 26953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 1976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_prepare((yyvsp[-3].ident_sys), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 26963 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 1985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_execute((yyvsp[-1].ident_sys), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 26972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 1990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "EXECUTE IMMEDIATE"; }
#line 26978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 77:
#line 1992 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= NULL; }
#line 26984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 78:
#line 1994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_execute_immediate((yyvsp[-2].item), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 26993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 2001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 26999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "EXECUTE..USING"; }
#line 27005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[0].item_list);
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 27014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 27023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (((yyval.item_list)= (yyvsp[-2].item_list))->push_back((yyvsp[0].item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 27032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 84:
#line 2029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 27041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 27051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 27059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 27065 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 27073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 27081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2067 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 27089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2071 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 27097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 94:
#line 2075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 27105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 27119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 27128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 97:
#line 2094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 27136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2098 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 27144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 27152 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 100:
#line 2106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 27160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 2110 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 27168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 2114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 27177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 103:
#line 2119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 27185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 27193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 27225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 27233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 107:
#line 2160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 27241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 108:
#line 2164 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 27249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 27257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 117:
#line 2192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 27265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 27273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 27281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 27300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 27308 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 125:
#line 2235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 27318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 126:
#line 2241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 27328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 27338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2253 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 27348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2262 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 27357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 27369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
            if (lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-2].num), (yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
               MYSQL_YYABORT;
          }
#line 27385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            if (!lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                    TL_WRITE, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->create_info.default_table_charset= NULL;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
          }
#line 27406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 27416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           LEX *lex= thd->lex;
           if (lex->main_select_push())
             MYSQL_YYABORT;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (!lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                   TL_WRITE, MDL_EXCLUSIVE))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 27450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->check_and_adjust(1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->first_select_lex()->table_list.first->db.str,
                       lex->first_select_lex()->table_list.first->
                         table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(prepare_sequence_fields(thd,
                         &lex->alter_info.create_list)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 27479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 27488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index(Key::MULTIPLE, &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-7].object_ddl_options) | (yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 27499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 27507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 27516 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index(Key::UNIQUE, &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-8].object_ddl_options) | (yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 27527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 27535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 27544 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 27555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2427 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 27563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 27572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2437 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 27583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2445 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 27591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.schema_comment= NULL;
            Lex->create_info.used_fields= 0;
          }
#line 27601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
          }
#line 27613 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                     DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 27625 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 27633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 153:
#line 2477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 27644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 27652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 27662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 27670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 27680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2504 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 27688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-7].object_ddl_options) | (yyvsp[-5].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 27698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2516 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 27708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
#line 27716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
#line 27724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 27730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 27736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 27742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.seq_create_info->min_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 27751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 27761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 27771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if (unlikely(Lex->create_info.seq_create_info->used_fields &
               seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->max_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 27783 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 27793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 27803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            Lex->create_info.seq_create_info->start= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_start;
          }
#line 27815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            Lex->create_info.seq_create_info->increment= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_increment;
          }
#line 27827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 27839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 27851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 1;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 27863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 27875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart;
          }
#line 27891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->restart= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart | seq_field_used_restart_value;
          }
#line 27908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 27918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 27924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
          }
#line 27933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
          }
#line 27942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
          }
#line 27951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
          }
#line 27960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2697 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
          }
#line 27969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
          }
#line 27978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 27986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 28007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 28019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 28028 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 28036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 28042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 2761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 28052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2767 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 28062 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2773 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 28072 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 28083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 2789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 28091 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 28099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 28105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 28116 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 28122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 28131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 28168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* return back to the original memory root ASAP */
            if (Lex->sp_body_finalize_event(thd))
              MYSQL_YYABORT;
          }
#line 28178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->first_select_lex()->db= null_clex_str;
           lex->account_options.reset();
         }
#line 28189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_aggregate_type)= NOT_AGGREGATE; }
#line 28195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_aggregate_type)= GROUP_AGGREGATE; }
#line 28201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_handler)= &sp_handler_function; }
#line 28207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2885 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_handler)= &sp_handler_procedure; }
#line 28213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_handler)= &sp_handler_package_spec; }
#line 28219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 2887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_handler)= &sp_handler_package_body; }
#line 28225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 2893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 28234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 2898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 28243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 2905 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 2906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 2910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 2911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 2917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 28273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 2919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 28279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 2921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 28285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 2923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 28291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 2925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 28297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 2927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 28303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 2929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 28309 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 2934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 28315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 2935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 28321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 2939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_suid)= SP_IS_SUID; }
#line 28327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 2940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_suid)= SP_IS_NOT_SUID; }
#line 28333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 2945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->call_statement_start(thd, (yyvsp[0].spname))))
              MYSQL_YYABORT;
          }
#line 28342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 2949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 2965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 28356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 2969 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 28364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 2977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
            Lex->sphead->m_param_end= Lex->sphead->m_param_begin;
          }
#line 28373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 2982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
          }
#line 28381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 2986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 28389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 2998 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 28398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar), (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 28407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 28416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 28422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 28428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 28434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 28442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 28450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 3052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 28472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 28482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 28492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type), Lex->charset,
                                            COLUMN_DEFINITION_ROUTINE_LOCAL);
          }
#line 28501 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.spvar_definition_list)= Row_definition_list::make(thd->mem_root, (yyvsp[0].spvar_definition))))
              MYSQL_YYABORT;
          }
#line 28510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (((yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list))->append_uniq(thd->mem_root, (yyvsp[0].spvar_definition)))
              MYSQL_YYABORT;
          }
#line 28519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 28525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 28533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type), Lex->charset,
                                            COLUMN_DEFINITION_ROUTINE_LOCAL);
          }
#line 28542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-3].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 28554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3134 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 28564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 28573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 28584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3164 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 28595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 28606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex == (yyvsp[-2].sp_cursor_stmt));
            Lex->pop_select(); //main select
            if (unlikely((yyvsp[-2].sp_cursor_stmt)->stmt_finalize(thd)) ||
                unlikely((yyvsp[-2].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            (yyval.sp_cursor_stmt)= (yyvsp[-2].sp_cursor_stmt);
          }
#line 28619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 28625 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 28631 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 28637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 28643 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 28649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 28655 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3208 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 28671 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 3254 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 28716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 301:
#line 3260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 28724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 28734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 28774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3298 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 28783 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 28792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue)))
              MYSQL_YYABORT;
          }
#line 28801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.spcondvalue)= Lex->stmt_signal_value((yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 28810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 28822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 28836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 28848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 28862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 28890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 28902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 28908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 28914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 28920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3403 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 28926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 28932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 28938 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 28944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 28950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 28956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 28962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 28968 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 28977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 28993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3445 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 29005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 3452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 29015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 29025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 3467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 29036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3474 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 29046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 29056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 29065 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 29075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 29081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 29087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 29093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 29099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 3524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 29110 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 29120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 29130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 29136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 29142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 29148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 29154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 29160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 3559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 29166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 29172 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 29178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 3565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 29184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 3567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 29190 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 3569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 29196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 3571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 29202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 3573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 29208 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 3579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 29217 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 3587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 29233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 3599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 29249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 3614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 29259 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 3620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sphead->do_cont_backpatch(); }
#line 29265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 3624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            /*
              We should not push main select here, it will be done or not
              done by the statement, we just provide only a new LEX for the
              statement here as if it is start of parsing a new statement.
            */
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 29282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 3637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->sp_proc_stmt_statement_finalize(thd, yychar == YYEMPTY) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 29292 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 3652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= (yyvsp[0].expr_lex)->sphead;
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, (yyvsp[0].expr_lex)->spcont,
                                                          (yyvsp[0].expr_lex)->get_item(), (yyvsp[0].expr_lex))))
              MYSQL_YYABORT;
          }
#line 29303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 3659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 29315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 3670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 29324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 3675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), NULL)))
              MYSQL_YYABORT;
          }
#line 29333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 3680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].expr_lex)->sp_exit_statement(thd, (yyvsp[0].expr_lex)->get_item())))
              MYSQL_YYABORT;
          }
#line 29342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 3685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].expr_lex)->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].expr_lex)->get_item())))
              MYSQL_YYABORT;
          }
#line 29351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 3693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd)))
              MYSQL_YYABORT;
          }
#line 29360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 3698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 3703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].expr_lex)->sp_continue_when_statement(thd)))
              MYSQL_YYABORT;
          }
#line 29378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 3708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].expr_lex)->sp_continue_when_statement(thd, &(yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 3717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 3725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 3733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 3741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.expr_lex)= new (thd->mem_root)
                           sp_expr_lex(thd, thd->lex))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd, (yyval.expr_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 29428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 3751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.expr_lex)= (yyvsp[-1].expr_lex);
            (yyval.expr_lex)->sp_lex_in_use= true;
            (yyval.expr_lex)->set_item((yyvsp[0].item));
            Lex->pop_select(); //min select
            if ((yyval.expr_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 29441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 3763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 29452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 3773 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 29463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 3780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), thd->free_list);
            thd->free_list= NULL;
            Lex->pop_select(); //min select
            if ((yyval.assignment_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 29478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 3794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= FOR_LOOP_BOUND;
          }
#line 29489 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 3801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-2].assignment_lex);
            (yyval.assignment_lex)->sp_lex_in_use= true;
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[0].item), NULL);
            Lex->pop_select(); //main select
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= NO_MATTER;
          }
#line 29504 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 3815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 29514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 3821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 29523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 3828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= NULL; }
#line 29529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 3829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 29535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 401:
#line 3840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 29544 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 402:
#line 3848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 403:
#line 3853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29562 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 404:
#line 3858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 29571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 405:
#line 3865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 29577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 406:
#line 3867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if (unlikely(Lex->sp_add_agg_cfetch()))
             MYSQL_YYABORT;
         }
#line 29586 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 407:
#line 3875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 29605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 408:
#line 3893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 29625 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 3909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 29645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 3928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-1].expr_lex)->sp_if_expr(thd)))
              MYSQL_YYABORT;
          }
#line 29654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 3933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-3].expr_lex)->sp_if_after_statements(thd)))
              MYSQL_YYABORT;
          }
#line 29663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 3938 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 29673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 3954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 29727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 29745 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_expr()))
              MYSQL_YYABORT;
          }
#line 29754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 29760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 29766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Simple case: <caseval> = <whenval> */
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_when(true)))
              MYSQL_YYABORT;
          }
#line 29776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 29785 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_when(false)))
              MYSQL_YYABORT;
          }
#line 29794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4067 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 29803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 29818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 4089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 29824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 29830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4095 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 29836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 4096 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= -1; }
#line 29842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 29851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4110 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 29859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 29870 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 29880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 29895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].expr_lex)->sp_repeat_loop_finalize(thd))
              MYSQL_YYABORT;
          }
#line 29904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4152 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 29913 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 29922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 29928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 29937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4172 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 29943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 29952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 29963 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
          }
#line 29972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-4].for_loop))))
              MYSQL_YYABORT;
          }
#line 29981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 4196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 29990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 4201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 29996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 4206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 30005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 4211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 30013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 4215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 30022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 4220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 30030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 4224 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 30041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 30052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 4238 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
          }
#line 30064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 4246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 30073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 4251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 30081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 4258 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 30087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 4260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 30093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 4265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 30099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 4267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 30105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 4269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 30111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 4303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
          }
#line 30126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 4315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
#line 30134 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 4321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
#line 30142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 4344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 4438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[0].lex_str).str;
          }
#line 30157 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 4446 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[0].lex_str).str;
          }
#line 30166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 4454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[0].lex_str).str;
          }
#line 30175 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 4462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 4475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= (new (thd->mem_root)
                                         st_alter_tablespace());
            if (unlikely(lex->alter_tablespace_info == NULL))
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[0].ident_sys).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 4488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
#line 30212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 4493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
#line 30221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 4498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
#line 30230 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 4506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[0].ulonglong_number);
          }
#line 30239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 4514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[0].ulonglong_number);
          }
#line 30248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 4522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[0].ulonglong_number);
          }
#line 30257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 4530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[0].ulonglong_number);
          }
#line 30266 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 4538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 30275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 4546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[0].ulonglong_number);
          }
#line 30284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 4554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP"));
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[0].ulong_num);
          }
#line 30295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 4564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->ts_comment != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT"));
            lex->alter_tablespace_info->ts_comment= (yyvsp[0].lex_str).str;
          }
#line 30306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 4574 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->alter_tablespace_info->storage_engine != NULL))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE, MYF(0),
                                "STORAGE ENGINE"));
            lex->alter_tablespace_info->storage_engine= (yyvsp[0].db_type);
          }
#line 30318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 4590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
#line 30327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 4595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!(lex->alter_tablespace_info->wait_until_completed)))
              my_yyabort_error((ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT"));
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
#line 30338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 4604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 30344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 4606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ident_sys).to_size_number(&(yyval.ulonglong_number)))
              MYSQL_YYABORT;
          }
#line 30353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 4618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.option_list= NULL; }
#line 30359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 4619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 4620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 4622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->first_select_lex()->
              add_table_to_list(thd, (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 30386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 4635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[0].table); }
#line 30392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 4636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table)= (yyvsp[-1].table); }
#line 30398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 4640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 4646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->parsed_insert_select((yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 30413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 4651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *first_select= (yyvsp[-1].select_lex_unit)->first_select();
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to(first_select);
            if (Lex->parsed_insert_select(first_select))
              MYSQL_YYABORT;
          }
#line 30425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 4662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 30439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 4698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30445 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 4704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 30460 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 4719 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 30476 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 4734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 30494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 4748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 30502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 4755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->safe_to_cache_query= 1; }
#line 30508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 4761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 30519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 4768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= HASH_PARTITION; }
#line 30525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 4769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 4771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 30537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 4773 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= RANGE_PARTITION; }
#line 30543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 4775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 30551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 4779 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 30560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 4784 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->part_type= LIST_PARTITION; }
#line 30566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 4786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 30575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 4794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 4796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->linear_hash_ind= TRUE;}
#line 30587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 4801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 30593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 4803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 30611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 4819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 4820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 4824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 4825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 4830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 30650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 4844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 30660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 4854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-1].item), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 30672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 4865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-1].item), TRUE)))
              MYSQL_YYABORT;
          }
#line 30681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 4873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 4875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 30701 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 4887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 4889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 30713 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 4890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30719 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 4893 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 30729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 4898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 4902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 4903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 4908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 30762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 4922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 30775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 4933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 4935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 30794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 4947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 30808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 4957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 30831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 4978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 4979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 4984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 30863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 5003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 5008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= (yyvsp[0].ident_sys).str;
          }
#line 30881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 5019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 30901 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 5035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 30918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 5047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 5049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 30941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 5061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 30947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 5063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
          }
#line 30956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 5068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
          }
#line 30965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 5073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 30986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 5093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 31008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 5110 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 5115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 31045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 5142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 31058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 5153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 5154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 5159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 31084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 5168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 5170 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 31115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 5193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 5194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 5199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 31142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 5210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 31160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 5228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 31178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 5242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 31205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 5267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 5268 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31217 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 5273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 31254 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 5305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 5310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 31270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 5318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 5319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 5323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 5324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 5329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[0].lex_str).str; }
#line 31300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 5331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 31310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 5337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 31320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 5343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 31326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 5345 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 31332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 5347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 31338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 5349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 31344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 5351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 31350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 5353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 31356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 5357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 5359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           partition_info *part_info= Lex->part_info;
           const char *table_name= Lex->create_last_non_select_table->table_name.str;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-2].item), (yyvsp[-1].interval), (yyvsp[0].item), table_name)))
             MYSQL_YYABORT;
         }
#line 31373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 5366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         partition_info *part_info= Lex->part_info;
         if (unlikely(part_info->vers_set_limit((yyvsp[0].ulonglong_number))))
         {
           my_error(ER_PART_WRONG_VALUE, MYF(0),
                    Lex->create_last_non_select_table->table_name.str,
                    "LIMIT");
           MYSQL_YYABORT;
         }
       }
#line 31388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 5381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           (yyval.item)= NULL;
         }
#line 31396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 5385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           (yyval.item)= (yyvsp[0].item);
         }
#line 31404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 5395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 5396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 5400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 5401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 5405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 5406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 5410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31446 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 5411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 31452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 5413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.schema_comment= thd->make_clex_string((yyvsp[0].lex_str));
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 31461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 5421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= FALSE;
          }
#line 31469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 5425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->check_exists= TRUE;
          }
#line 31477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 5432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 31485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 5436 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 31493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 5443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).init();
          }
#line 31501 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 5447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 31509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 5470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 31528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 5485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 31537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 5490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 31546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 5495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 31555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 5500 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 31564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 5505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 31573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 5510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 31582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 5515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 31601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 5530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 31611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 5536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 31630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 5551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 31639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 5556 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 31658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 5571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 31668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 5577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 31690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 5595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 31699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 5600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 31708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 5605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 31717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 5610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 31726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 5615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 31735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 5620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 31744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 5625 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->first_select_lex()->table_list.save_and_clear(&Lex->save_list);
          }
#line 31752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 5629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->first_select_lex()->table_list.first;
            lex->first_select_lex()->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 31778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 5653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 31787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 5658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 31796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 5663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 31805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 5668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.tablespace= (yyvsp[0].ident_sys).str;}
#line 31811 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 5670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_DISK;}
#line 31817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 5672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 31823 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 5674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 31833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 5680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 31842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 5685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 31851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 5690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 5699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 5708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->create_info.option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 31887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 5714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->create_info.option_list,
                                       &Lex->option_list_last);
          }
#line 31897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 5720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
	  }
#line 31906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 5734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (DBUG_EVALUATE_IF("sysvers_force", 0, 1))
              {
                my_error(ER_VERS_NOT_SUPPORTED, MYF(0), "CREATE TEMPORARY TABLE");
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 31926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 5753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_info.add_table_option_default_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 31935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 5761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if (unlikely((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                         cinfo->default_table_charset && (yyvsp[0].charset) &&
                         !((yyvsp[0].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                           (yyvsp[0].charset)))))
              MYSQL_YYABORT;

            Lex->create_info.default_table_charset= (yyvsp[0].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
#line 31951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 5776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 31962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 5786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 31974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 5796 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 31980 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 5797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 31986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 5798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 31992 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 5799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 31998 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 5800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 32004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 5801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 32010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 5802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 32016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 5806 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 32022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 5807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 32028 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 5808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 32034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 5812 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 32040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 5813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 32046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 5814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 32052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 5815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 32058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 5821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 32066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 5828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 32074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 5839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 32080 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 5843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 32086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 5848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.create_field)= (yyvsp[0].create_field); }
#line 32092 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 5850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_column_foreign_key(&((yyvsp[-2].create_field)->field_name), &(yyvsp[-1].lex_str),
                                                     (yyvsp[0].table), DDL_options())))
              MYSQL_YYABORT;
            (yyval.create_field)= (yyvsp[-2].create_field);
          }
#line 32103 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 5860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32113 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 5865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 32119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 5867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 5872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 32135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 5874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32145 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 5879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 32151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 5881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 5886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 32167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 5890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 5895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 32183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 5898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 32193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 5903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 32199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 5905 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 32213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 5915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_table_foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                                    (yyvsp[-9].lex_str).str ? &(yyvsp[-9].lex_str) : &(yyvsp[-5].lex_str), (yyvsp[0].table), (yyvsp[-6].object_ddl_options))))
               MYSQL_YYABORT;
          }
#line 32223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 5924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 32231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 5932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_period((yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys));
          }
#line 32240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 5940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->add_period((yyvsp[-5].ident_sys), (yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys)))
              MYSQL_YYABORT;
          }
#line 32249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 5947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 32255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 5948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 32261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 5953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 32272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 5962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32278 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 5963 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 5967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 32290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 5968 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 32296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 5972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 32302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 5977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str), NULL);
            (yyval.create_field)= f;
            lex->parsing_options.lookup_keywords_after_qualifier= true;
          }
#line 32322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 5993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->parsing_options.lookup_keywords_after_qualifier= false;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 32345 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type), Lex->charset,
                                             COLUMN_DEFINITION_TABLE_FIELD);
          }
#line 32354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->set_handler(&type_handler_ulonglong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
          }
#line 32364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32394 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 32406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6055 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
           Lex->last_field->flags&= ~NOT_NULL_FLAG; // undo automatic NOT NULL for timestamps
         }
#line 32415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
          }
#line 32424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
          }
#line 32433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32445 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 32453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(FALSE);
          }
#line 32461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 32469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6091 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->vcol_info->set_stored_in_db_flag(TRUE);
          }
#line 32477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6098 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32489 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 32495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 32515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 32521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 32529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 32544 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
            Lex->pop_select(); //main select
          }
#line 32556 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 32567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 32579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 6169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item;
            if (!(item= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex))))
              MYSQL_YYABORT;
            Virtual_column_info *v= add_virtual_expression(thd, item);
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 32593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 32602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
        }
#line 32610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 32618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->map_data_type((yyvsp[-2].ident_sys), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 32627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 6216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->set_field_type_udt(&(yyval.Lex_field_type), (yyvsp[-2].ident_sys), (yyvsp[-1].Lex_length_and_dec)))
              MYSQL_YYABORT;
          }
#line 32636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 6221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->set_field_type_udt(&(yyval.Lex_field_type), (yyvsp[-2].kwd), (yyvsp[-1].Lex_length_and_dec)))
              MYSQL_YYABORT;
          }
#line 32645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 6226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->set_field_type_udt(&(yyval.Lex_field_type), (yyvsp[-2].kwd), (yyvsp[-1].Lex_length_and_dec)))
              MYSQL_YYABORT;
          }
#line 32654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 6234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set_handler_length_flags((yyvsp[-2].type_handler), (yyvsp[-1].const_simple_string), (uint32) (yyvsp[0].ulong_num));
          }
#line 32662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 6237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 32668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 6239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).length() && !(yyvsp[-1].Lex_length_and_dec).dec())
            {
              int err;
              ulonglong tmp_length= my_strtoll10((yyvsp[-1].Lex_length_and_dec).length(), NULL, &err);
              if (unlikely(err || tmp_length > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if (tmp_length > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 32688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 6255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].const_simple_string));
          }
#line 32696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 6259 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_stiny, "1");
          }
#line 32704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 6263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_stiny, "1");
          }
#line 32712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 6267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 6269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].Lex_length_and_dec).length() != 0)
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 32729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 6276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 6278 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 32741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 6291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
          }
#line 32749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 6295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 32758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 6300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].const_simple_string));
          }
#line 32767 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 6305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 6309 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32783 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 6313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].const_simple_string));
            bincmp_collation(national_charset_info, (yyvsp[0].num));
          }
#line 32792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 6318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32801 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 6323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].const_simple_string));
          }
#line 32810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 6331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].const_simple_string))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].const_simple_string), NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%lu)", length);
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_NOTE,
                                    ER_WARN_DEPRECATED_SYNTAX,
                                    ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                    buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].const_simple_string));
          }
#line 32832 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 6348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_newdate); }
#line 32838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 6350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].const_simple_string));
          }
#line 32849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 6357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_timestamp2):
                   static_cast<const Type_handler*>(&type_handler_timestamp),
                   (yyvsp[0].const_simple_string));
          }
#line 32860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 6364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_field_type).set(thd->type_handler_for_datetime(), (yyvsp[0].const_simple_string));
          }
#line 32868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 6372 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_tiny_blob);
          }
#line 32877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 6377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 32886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 6382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string));
          }
#line 32895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 6387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 32904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 6392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 32913 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 6397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_long_blob);
          }
#line 32922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 6402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset=&my_charset_bin;
            (yyval.Lex_field_type).set(&type_handler_medium_blob);
          }
#line 32931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 6407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 6409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_tiny_blob); }
#line 32943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 6411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].const_simple_string)); }
#line 32949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 6413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 6415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 32961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 6417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_long_blob); }
#line 32967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 6419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_medium_blob); }
#line 32973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 6421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= &my_charset_utf8mb4_bin;
            (yyval.Lex_field_type).set(&type_handler_json_longtext);
          }
#line 32982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 6429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_enum); }
#line 32988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 6431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_field_type).set(&type_handler_set); }
#line 32994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 6435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 6439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 6440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 6444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 6445 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 6449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 6450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 6451 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 6452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 6453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 6457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_slong; }
#line 33060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 6458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_stiny; }
#line 33066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 6459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_sshort; }
#line 33072 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 6460 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_sint24; }
#line 33078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 6461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_slonglong; }
#line 33084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 6466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 33094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 6471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 33100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 6472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.type_handler)= &type_handler_double; }
#line 33106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 6477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->srid= 0; }
#line 33112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 6480 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->srid=atoi((yyvsp[0].lex_str).str);
          }
#line 33120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 6486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0);  }
#line 33126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 6487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), 0); }
#line 33132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 6488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 33138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 6492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 33144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 6496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33150 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 6497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 6498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= UNSIGNED_FLAG; }
#line 33162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 6499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 33168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 6500 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 33174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 6501 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 33180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 6505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= ((yyval.ulong_num)= (yyvsp[0].ulong_num)); }
#line 33186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 6509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 6510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 6511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 6512 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 33210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 6516 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (char*) 0; /* use default length */ }
#line 33216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 6517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].const_simple_string); }
#line 33222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 6521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec).set(0, 0); }
#line 33228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 6522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 33234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 6527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 6532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags&= ~ NOT_NULL_FLAG; }
#line 33246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 6533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->default_value= (yyvsp[0].virtual_column); }
#line 33252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 6535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
          }
#line 33263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 6541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
#line 33269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 6543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 6549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->charset && !my_charset_same(Lex->charset,(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name,Lex->charset->csname));
            Lex->last_field->charset= (yyvsp[0].charset);
          }
#line 33290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 6559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= NULL; }
#line 33296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 6560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 33302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 6564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33308 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 6565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 33314 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 6569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 6570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 33326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 6575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 33335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 6583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->set_compressed_deprecated(thd, (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 33344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 6591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->last_field->
                set_compressed_deprecated_column_attribute(thd, (yyvsp[-1].kwd).pos(), (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 33354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 6600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 33362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 6604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 33372 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 6615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 33385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 6624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false,
                                       &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 33398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 6633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->last_field->option_list,
                                       &Lex->option_list_last, thd->mem_root);
          }
#line 33408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 6639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->last_field->option_list,
                                       &Lex->option_list_last);
          }
#line 33418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 6645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
            if (Lex->alter_info.flags & ALTER_DROP_SYSTEM_VERSIONING)
            {
              my_yyabort_error((ER_VERS_NOT_VERSIONED, MYF(0),
                       Lex->create_last_non_select_table->table_name.str));
            }
          }
#line 33432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 6658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 33442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 6664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 33452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 6673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.kwd)= (yyvsp[-1].kwd); }
#line 33458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 6674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.kwd)= (yyvsp[0].kwd); }
#line 33464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 6679 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 33473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 6683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 33479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 6687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 33485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 6688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 33491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 6692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= NULL; }
#line 33497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 6693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 33503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 6698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,MYF(0))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 33514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 6704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 33520 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 6708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 33526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 6709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 33532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 6714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str))))
              MYSQL_YYABORT;
          }
#line 33541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 6721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 33547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 6722 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 33553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 6726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset); }
#line 33559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 6727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 33565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 6731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 6732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 6736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= (yyvsp[0].charset); }
#line 33583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 6737 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_latin1; }
#line 33589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 6739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 33598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 6746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->charset= (yyvsp[0].charset);
         }
#line 33606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 6752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, false); }
#line 33612 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 6753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 6757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(&my_charset_bin, false); }
#line 33624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 6758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[-1].charset), (yyvsp[0].num)); }
#line 33630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 6759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation(NULL, true); }
#line 33636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 6760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { bincmp_collation((yyvsp[0].charset), true); }
#line 33642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 6762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!my_charset_same(Lex->charset, (yyvsp[-1].charset)))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                Lex->charset->name, (yyvsp[-1].charset)->csname));
          }
#line 33652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 6767 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 33658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 6771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 33664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 6772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 33670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 6777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 33682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 6785 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 33688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 6789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 6790 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 33700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 6794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 33706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 6797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 6798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 6799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 33724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 6800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 33730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 6805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 33739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 6813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 33747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 6819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 6820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 33759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 6825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 33770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 6834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 6835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 6839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 33788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 6840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 33794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 6854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 33802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 6861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ref_list.empty(); }
#line 33808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 6867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 33819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 6874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 33832 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 6886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 33838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 6888 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 33844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 6890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 33850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 6892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 33856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 6897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 6903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33876 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 6909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 6916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 6923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 33906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 6931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 33912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 6932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 33918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 6933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 33924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 6934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 33930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 6935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 33936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 6939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::PRIMARY; }
#line 33942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 6940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::UNIQUE; }
#line 33948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 6944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 6945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 6949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 6954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 6955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 6956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 33984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 6960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_type)= Key::FULLTEXT;}
#line 33990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 6965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 34003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 6976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 6977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 34015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 6981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 6982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 34027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 6986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 6987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->option_list= Lex->option_list; }
#line 34039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 7006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 34045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 34051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 7012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 34057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 7013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 34063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 34069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 34075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 7021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 34081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 34090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 7031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 34096 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* This is mainly for MySQL 8.0 compatiblity */
          }
#line 34104 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 7037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 34116 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 7045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false, &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 34128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 7053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                  engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), &Lex->option_list,
                                      &Lex->option_list_last, thd->mem_root);
          }
#line 34138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 7059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (void) new (thd->mem_root)
                   engine_option_value((yyvsp[-2].ident_sys), &Lex->option_list,
                                       &Lex->option_list_last);
          }
#line 34148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 7078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 34159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 7087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 34165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 7088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 34171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 7089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 34177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 7094 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 34185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 7098 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 34193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 7104 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 7106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_key->without_overlaps= true;
            Lex->last_key->period= (yyvsp[-2].ident_sys);
          }
#line 34208 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 7114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 34218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 7120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 34231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 7131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 34237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 7132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 34243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 7137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 34249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 7139 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 34255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 7148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR;
            Lex->first_select_lex()->order_list.empty();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 34275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 7164 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
            if (!Lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                   TL_READ_NO_INSERT, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            Lex->first_select_lex()->db=
              (Lex->first_select_lex()->table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->mark_first_table_as_inserting();
          }
#line 34291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 7176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
            Lex->pop_select(); //main select
          }
#line 34306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 7187 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.schema_comment= NULL;
            Lex->create_info.used_fields= 0;
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 34318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 7195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 34332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 7205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
            Lex->create_info.schema_comment= thd->make_clex_string((yyvsp[0].lex_str));
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 34343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 7212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= Lex_ident_sys();
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
          }
#line 34356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 7221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 34368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 7229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_alter_procedure_start((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 34377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 7234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 7236 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_alter_function_start((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 34392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 7241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 7243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 34409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 7249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 7256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 34426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 7262 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 7264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 34455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 7287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();

            Lex->pop_select(); //main select
          }
#line 34475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 7303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
#line 34484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 7308 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
#line 34493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 7313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
#line 34502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 7318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
#line 34511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 7323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 34521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 7327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 34527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 7331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_info.set((yyvsp[-5].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 34536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 7336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->name= null_clex_str;
            lex->table_type= TABLE_TYPE_UNKNOWN;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            lex->no_write_to_binlog= 0;
            DBUG_ASSERT(!lex->m_sql_cmd);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 34552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 7348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!(lex->create_info.seq_create_info= new (thd->mem_root)
                                                     sequence_definition()) ||
                !lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_SEQUENCE,
                                    TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 34566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 7358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 7363 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 7368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.account_locked= ACCOUNTLOCK_LOCKED;
          }
#line 34591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 7372 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.account_locked= ACCOUNTLOCK_UNLOCKED;
          }
#line 34599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 7379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NOW;
          }
#line 34607 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 7383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NEVER;
          }
#line 34615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 7387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_DEFAULT;
          }
#line 34623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 7391 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_INTERVAL;
            if (!(Lex->account_options.num_expiration_days= atoi((yyvsp[-1].lex_str).str)))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "DAY", (yyvsp[-1].lex_str).str));
          }
#line 34633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 7407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 7408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 7409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 7410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34657 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 7414 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 7416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 34676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 7427 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 34682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 7428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 7433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_sys)= Lex_ident_sys(); }
#line 34694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 7440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 7448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 7470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 34728 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 7477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 34738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 7484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 7497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 34768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 7508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 7520 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 7532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 34808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 7539 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 34822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 7551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_alter_table_exchange_partition((yyvsp[-1].table)))
              MYSQL_YYABORT;
          }
#line 34831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 7559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 34839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 7566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 34847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 7575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 34863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 7587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 7593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 34878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 7598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 34886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 7605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 34899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 7618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 34907 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 7622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 34915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 7626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 34924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 7633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 7634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 34936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 7639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 34946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 7661 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 34957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 7668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 7673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 34974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 7678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Table_period_info &period= Lex->create_info.period_info;
            period.create_if_not_exists= Lex->check_exists;
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
          }
#line 34984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 7684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 7691 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 35003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 7695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 35012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 7701 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-2].lex_str);
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 35023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 7709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 35034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 7716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str, (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 35048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 7726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 35063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 7737 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 35077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 7747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 35092 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 7758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 35106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 7768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 35116 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 7774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 35126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 7780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (check_expression((yyvsp[0].virtual_column), &(yyvsp[-3].lex_str), VCOL_DEFAULT))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str), (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 35137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 7787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str), (Virtual_column_info*) 0, (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 35146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 7792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->first_select_lex()->db= (yyvsp[0].table)->db;
            if (lex->first_select_lex()->db.str == NULL &&
                lex->copy_db_to(&lex->first_select_lex()->db))
              MYSQL_YYABORT;
            if (unlikely(check_table_name((yyvsp[0].table)->table.str,(yyvsp[0].table)->table.length,
                                          FALSE)) ||
                ((yyvsp[0].table)->db.str && unlikely(check_db_name((LEX_STRING*) &(yyvsp[0].table)->db))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[0].table)->table.str));
            lex->name= (yyvsp[0].table)->table;
            lex->alter_info.flags|= ALTER_RENAME;
          }
#line 35164 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 7806 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 35173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 7811 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_rename_key *ak= new (thd->mem_root)
                                    Alter_rename_key((yyvsp[-2].lex_str), (yyvsp[0].lex_str), (yyvsp[-3].num));
            if (ak == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_rename_key_list.push_back(ak);
            lex->alter_info.flags|= ALTER_RENAME_INDEX;
          }
#line 35187 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 7821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].charset))
            {
              (yyvsp[-1].charset)= thd->variables.collation_database;
            }
            (yyvsp[0].charset)= (yyvsp[0].charset) ? (yyvsp[0].charset) : (yyvsp[-1].charset);
            if (unlikely(!my_charset_same((yyvsp[-1].charset),(yyvsp[0].charset))))
              my_yyabort_error((ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                                (yyvsp[0].charset)->name, (yyvsp[-1].charset)->csname));
            if (unlikely(Lex->create_info.add_alter_list_item_convert_to_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_CONVERT_TO;
          }
#line 35205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 7835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 35214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 7840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 35222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 7844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 35231 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 7851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 35240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 7856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
            Lex->create_info.options&= ~HA_VERSIONED_TABLE;
          }
#line 35249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 7861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 35257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 7865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Alter_drop *ad= new Alter_drop(Alter_drop::PERIOD, (yyvsp[0].ident_sys).str, (yyvsp[-2].num));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            Lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            Lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 35269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 7884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.set_requested_algorithm(
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT);
          }
#line 35278 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 7889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 35287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 7897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 35296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 7902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 35305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 7909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 7910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 7914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 35323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 7915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 35329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 7919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 0;}
#line 35335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 7933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1;}
#line 35341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 7935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 35350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 7942 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_DEFAULT; }
#line 35356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 7943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_RESTRICT; }
#line 35362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 7944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->drop_mode= DROP_CASCADE; }
#line 35368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 7948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 35374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 7950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 35383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 7955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 35393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 7963 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 7964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 7965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 7966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 7971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 35428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 7978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 7980 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 35445 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 7986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35451 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 7988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 35462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 7995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 35473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 8005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 35490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 8021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 35498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 8025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 8032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 8036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 35522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 8043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 35530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 8047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 35538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 8051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 35546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 8057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt= 0; }
#line 35552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 8059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 8068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 8069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 35570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 8070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->slave_thd_opt|=SLAVE_IO; }
#line 35576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 8074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 8076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 35595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 8085 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
          }
#line 35603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 8097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 8104 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 8108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= 0; }
#line 35626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 8109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_QUICK; }
#line 35632 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 8110 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags= T_EXTEND; }
#line 35638 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 8116 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 35644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 8122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 8132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 8142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 35676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 8143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 8147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 8148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 8152 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 35700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 8153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 35706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 8154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 35712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 8158 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 35718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 8159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 35724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 8164 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 8174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 8194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35756 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 8196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 35764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 8203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 8205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 8209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 8211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 35793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 8219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 35799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 8223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 8225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 35816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 8233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 35822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 8238 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 8240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 35837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 8245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 35846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 8253 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35852 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 8260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 35862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 8267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 35873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 8277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 35884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 8285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 35894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 8295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->table_type= TABLE_TYPE_VIEW; }
#line 35900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 8300 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 35914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 8310 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 35928 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 8322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags = T_MEDIUM; }
#line 35934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 8323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 8327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35946 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 8328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 35952 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 8332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_QUICK; }
#line 35958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 8333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_FAST; }
#line 35964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 8334 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_MEDIUM; }
#line 35970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 8335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_EXTEND; }
#line 35976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 8336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 35982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 8337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 35988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 8341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 35994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 8342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 36000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 8347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 36014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 8357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 8367 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 36032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 8368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 36038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 8369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 36044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 8374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
            Lex->create_info.set((yyvsp[0].object_ddl_options));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 36055 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 8381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 36063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 8385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 36071 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 8392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 36081 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 8398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 36091 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 8412 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 36107 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 8427 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.reset();
          }
#line 36115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 8431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 36125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 8450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 36137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 8461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 36149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 8471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 36155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 8472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str) = default_key_cache_base; }
#line 36161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 8477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
            if (lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 36173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 8485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 36181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 8502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 36193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 8513 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 36205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 8524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 36213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 8531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->first_select_lex()->alloc_index_hints(thd);
            Select->set_index_hint_type(INDEX_HINT_USE,
                                        INDEX_HINT_MASK_ALL);
          }
#line 36223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 8540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 36229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 8546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 36235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 8547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 36241 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 8557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 36252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 8564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause(NULL);
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 36263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 8571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 36274 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 8578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex_unit)->first_select());
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 36286 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 8589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 36295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 8594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 36309 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 8605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 36318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 8610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            unit->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 36334 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 8624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 36340 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 8625 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 36346 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 8630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->parsed_TVC_start())
              MYSQL_YYABORT;
	  }
#line 36355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 8635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex)= Lex->parsed_TVC_end()))
	      MYSQL_YYABORT;
	  }
#line 36364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 8643 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel;
            LEX *lex= Lex;
            if (!(sel= lex->alloc_select(TRUE)) || lex->push_select(sel))
              MYSQL_YYABORT;
            sel->init_select();
            sel->braces= FALSE;
          }
#line 36377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 8652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= SELECT_LIST;
          }
#line 36385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 8656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
          }
#line 36393 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 8668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 36401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 8681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 36409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 8739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].select_lex_unit)->set_with_clause(NULL);
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 36418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 8745 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].select_lex_unit)->set_with_clause((yyvsp[-1].with_clause));
            (yyvsp[-1].with_clause)->attach_to((yyvsp[0].select_lex_unit)->first_select());
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 36428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 8758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 36434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 8759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 36440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 8774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].select_lex_unit)->first_select()->next_select())
            {
              if (Lex->parsed_multi_operand_query_expression_body((yyvsp[0].select_lex_unit)))
                MYSQL_YYABORT;
            }
          }
#line 36452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 8782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[0].order_limit_lock))
              (yyval.select_lex_unit)= (yyvsp[-2].select_lex_unit);
            else
              (yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock));
          }
#line 36463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 8789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->push_select(!(yyvsp[0].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[0].select_lex_unit)->first_select() : (yyvsp[0].select_lex_unit)->fake_select_lex);
          }
#line 36472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 8794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body_ext_parens((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock))))
               MYSQL_YYABORT;
          }
#line 36481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 8802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit); }
#line 36487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 8804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= (yyvsp[-1].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[-1].select_lex_unit)->fake_select_lex : (yyvsp[-1].select_lex_unit)->first_select();
            sel->braces= true;
            (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit);
          }
#line 36498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 8819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->push_select((yyvsp[0].select_lex));
            if (!((yyval.select_lex_unit)= Lex->create_unit((yyvsp[0].select_lex))))
              MYSQL_YYABORT;
          }
#line 36508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 8826 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-1].select_lex_unit)->first_select()->next_select())
            {
              Lex->pop_select();
            }
          }
#line 36519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 8833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body((yyvsp[-3].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-2].unit_operation).unit_type,
                                                                (yyvsp[-2].unit_operation).distinct)))
              MYSQL_YYABORT;
          }
#line 36530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 8842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body_ext_parens(
                                                                (yyvsp[-2].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-1].unit_operation).unit_type,
                                                                (yyvsp[-1].unit_operation).distinct)))
              MYSQL_YYABORT;
          }
#line 36542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 8858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 36548 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 8860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex_unit)->first_select(); }
#line 36554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 8869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_lex)= (yyvsp[0].select_lex);}
#line 36560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 8874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              YYABORT;
          }
#line 36569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 8915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[0].select_lex_unit)->fake_select_lex)
              (yyvsp[0].select_lex_unit)->first_select()->braces= false;
            else
              (yyvsp[0].select_lex_unit)->fake_select_lex->braces= false;
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              YYABORT;
          }
#line 36582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 8924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to((yyvsp[-1].select_lex_unit)->first_select());
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[-1].select_lex_unit))))
              YYABORT;
          }
#line 36593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 8943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 36603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 8958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 36613 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 8967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 36621 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 8971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 36629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 8975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 36637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 8982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item;
            if (!(item= type_handler_datetime.create_literal_item(thd,
                                                     (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                     YYCSCL, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 36650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 8991 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 36658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 8995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 36666 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 9003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(0 == strcasecmp((yyvsp[-4].ident_sys).str, "SYSTEM_TIME")))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-5].simple_string));
              MYSQL_YYABORT;
            }
            Lex->period_conditions.init(SYSTEM_TIME_FROM_TO,
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[-2].item)),
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item)),
                                        (yyvsp[-4].ident_sys));
          }
#line 36682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 9018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= false;
          }
#line 36690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 9022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= true;
          }
#line 36698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 9029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= false;
          }
#line 36706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 9033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= true;
          }
#line 36714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 9040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 36722 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 9044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 36730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 9048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 36738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 9052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 36746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 9065 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_NO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));
            Select->options|= OPTION_NO_QUERY_CACHE;
          }
#line 36759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 9074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_TO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));
            Select->options|= OPTION_TO_QUERY_CACHE;
          }
#line 36772 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 9087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= TRUE;
          }
#line 36782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 9093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= FALSE;
          }
#line 36792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 9103 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).empty();
        }
#line 36800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 9107 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock)= (yyvsp[0].select_lock);
        }
#line 36808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 9115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).empty();
        }
#line 36816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 9119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= (yyvsp[0].ulong_num);
        }
#line 36825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 9124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= 0;
        }
#line 36834 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 9134 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root)
                          Item_field(thd, &thd->lex->current_select->context,
                                     star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
#line 36849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 9148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 36858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 9153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->common_flags&= ~IS_AUTO_GENERATED_NAME;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str));
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 36881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 9174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 36889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 9180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 36897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 9186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 36905 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 9192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=null_clex_str;}
#line 36911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 9193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 36917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 9194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 36923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 9195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 36929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 9196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 36935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 9200 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 36941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 9201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= NOT_FIXED_DEC;  }
#line 36947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 9202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 36953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 9206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 36959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 9207 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;  }
#line 36965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 9208 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 36971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 9212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 36977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 9213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 36983 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 9219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 37038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 9270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 9277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 37096 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 9320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 9326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37116 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 9332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 9338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 9344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 9350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 9356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 9362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 9368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 9374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 9380 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 9386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 9396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-2].item), (yyvsp[0].select_lex));
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 37226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 9402 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-3].item), (yyvsp[0].select_lex));
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 37239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 9411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 9417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 9425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 9431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 37284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 9440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 9446 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 37306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 9454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 9464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-2].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 37330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 9470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= true;
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 37341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 9477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 37352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 9484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->escape_used= true;
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 37364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 9492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 9498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 9511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37397 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 9517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 9523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 9529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37427 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 9535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 9542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 9548 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 9554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 9560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 9567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 9573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 9579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 9585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 9591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 9597 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 9603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37548 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 9609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 9615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37568 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 9644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 37574 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 9645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 37580 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 9646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 37586 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 9647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 37592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 9648 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 37598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 9649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 37604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 9653 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 37610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 9654 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 37616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 9659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
            Lex->charset= NULL;
	  }
#line 37625 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 9663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 37631 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 9667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 37637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 9668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); Lex->charset= NULL; }
#line 37643 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 9669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 37649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 9673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 37655 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 9674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 37661 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 9675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 37667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 9676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 37673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 9677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 37679 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 9678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 37685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 9682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 37691 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 9683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, 0, (yyvsp[0].const_simple_string)); }
#line 37697 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 9684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, 0, (yyvsp[0].const_simple_string)); }
#line 37703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 9689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 37709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 9691 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
          }
#line 37717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 9695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING);
            Lex->charset= national_charset_info;
          }
#line 37726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 9703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
     LEX *lex= Lex;
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= lex->charset;
     if ((yyvsp[0].Lex_dyncol_type).length())
       (yyval.dyncol_def)->len= strtoul((yyvsp[0].Lex_dyncol_type).length(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).dec())
       (yyval.dyncol_def)->frac= strtoul((yyvsp[0].Lex_dyncol_type).dec(), NULL, 10);
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 37750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 9726 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 37761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 9733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 37770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 9741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 37776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 9742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 37782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 9743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 37788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 9744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 37794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 9749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 37803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 9757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 37809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 9758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 37815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 9759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 37821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 9760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 37827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 9761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 37833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 9762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 37839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 9763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 37845 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 9764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 37851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 9802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_param); }
#line 37857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 9805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!Lex->select_stack_top)
            {
              my_error(ER_INVALID_GROUP_FUNC_USE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 37869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 9813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!Lex->select_stack_top)
            {
               my_error(ER_WRONG_PLACEMENT_OF_WINDOW_FUNCTION, MYF(0));
               MYSQL_YYABORT;
            }
          }
#line 37881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 9822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 9829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 9835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 37911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 9840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 37925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 9850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item_or_error(thd, (yyvsp[-3].item),
                                                                Lex->charset))))
              MYSQL_YYABORT;
          }
#line 37935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 9856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 9861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 37954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 9867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item_or_error(thd, (yyvsp[-3].item),
                                                                Lex->charset))))
              MYSQL_YYABORT;
          }
#line 37964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 9873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 37974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 9879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 37989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 9890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 9897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 38009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 9902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 38018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 9907 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 38027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 9912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 38036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 9917 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_number), 0, 1))))
              MYSQL_YYABORT;
          }
#line 38045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 9922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_number), 0, (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 38054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 9927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_number), (yyvsp[-1].ulonglong_number), (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 38063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 9936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 38069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 9938 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->create_item_query_expression(thd, (yyvsp[0].select_lex)->master_unit())))
              MYSQL_YYABORT;
          }
#line 38078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 9947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].charset)))))
              MYSQL_YYABORT;
          }
#line 38087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 9956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 38097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 9962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 38105 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 9966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 9972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 9978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 9988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38145 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 9997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 38199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 38212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 10066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 10072 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38271 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 10087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38286 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 10098 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 10104 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 10110 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 10116 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 10122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 10128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 38348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 10136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 10143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 38367 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 10147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim(thd))))
              MYSQL_YYABORT;
          }
#line 38376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 10152 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 38388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 10160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 10181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 10188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 10194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 10201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 10208 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38451 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 10214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 10220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 10226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_date_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 10232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_decode(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 10238 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_decode_oracle(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 38501 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 10244 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 10250 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 10256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 10263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 10269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 10276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 10282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 10287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 10292 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 10297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 10302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (thd->mem_root) Item_func_sysdate_local(thd, (yyvsp[0].num));
            else
              (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38621 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 10320 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38631 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 10326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 10332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 38650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 10337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38661 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 10344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38672 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 10351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 10359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 10366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 10373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_dyncol_check(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38713 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 10380 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 10387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type).length(), (yyvsp[-1].Lex_cast_type).dec(),
                                        lex->charset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 10404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38746 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 10410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38756 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 10416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_coalesce(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 10422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_collation(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 10428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_database(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 38787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 10435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 10441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 10447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_format(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 10456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38832 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 10467 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 10474 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_microsecond(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 10480 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 10486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  new (thd->mem_root)
              Item_func_password(thd, (yyvsp[-1].item), Item_func_password::OLD);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 10493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 38886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 10501 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_quarter(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 10507 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 10513 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 38915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 10518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_reverse(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 10524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_row_count(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 38937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 10532 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 10538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 10544 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_week(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 10550 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 10556 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 38989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 10564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 10576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 10595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 39039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 10614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            const Type_handler *h;
            Create_func *builder;
            Item *item= NULL;

            if (unlikely(check_routine_name(&(yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Constructors, like POINT(1,1)
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            if ((builder= find_native_function_builder(thd, &(yyvsp[-4].ident_sys))))
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else if ((h= Type_handler::handler_by_name(thd, (yyvsp[-4].ident_sys))) &&
                     (item= h->make_constructor_item(thd, (yyvsp[-1].item_list))))
            {
              // Found a constructor with a proper argument count
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 39098 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 10669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 39108 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 10675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 39118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 10681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 39128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 10687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 39137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 10695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 39143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 10697 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_BOOL; }
#line 39149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 10701 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 39155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 10702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 39161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 10706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 39167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 10707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 39173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 10711 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 39179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 10712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 39185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 10717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 39196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 10724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 39205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 10732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->common_flags&= ~IS_AUTO_GENERATED_NAME;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str));
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 39233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 10759 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39243 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 10765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39253 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 10771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 10777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 10783 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 10789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 10798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 10804 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 39312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 10806 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr--; }
#line 39318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 10808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 10814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 10825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 10831 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39358 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 10837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 10843 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 10849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 10855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 10861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 10867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 10873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 10879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 39434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 10883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->select_limit,
                                        sel->offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->select_limit= NULL;
            sel->offset_limit= NULL;
            sel->explicit_limit= 0;
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 39456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 10901 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 39462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 10904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            List<Item> *args= (yyvsp[-3].item_list);
            sel->in_sum_expr--;
            if (args && args->elements > 1)
            {
              /* JSON_ARRAYAGG supports only one parameter */
              my_error(ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT, MYF(0), "JSON_ARRAYAGG");
              MYSQL_YYABORT;
            }
            String* s= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely(s == NULL))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root)
                  Item_func_json_arrayagg(thd, Lex->current_context(),
                                          (yyvsp[-5].num), args,
                                          sel->gorder_list, s, (yyvsp[-1].num),
                                          sel->select_limit,
                                          sel->offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->select_limit= NULL;
            sel->offset_limit= NULL;
            sel->explicit_limit= 0;
            (yyvsp[-3].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 39495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 10933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->in_sum_expr++; }
#line 39501 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 10935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;

            (yyval.item)= new (thd->mem_root) Item_func_json_objectagg(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 10947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 39526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 10956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 39545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 10976 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            ((Item_sum *) (yyvsp[0].item))->mark_as_window_func_sum_expr();
          }
#line 39553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 10981 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item* item = (Item*)(yyvsp[0].item);
            /* Only UDF aggregate here possible */
            if ((item == NULL) ||
                (item->type() != Item::SUM_FUNC_ITEM)
                || (((Item_sum *)item)->sum_func() != Item_sum::UDF_SUM_FUNC))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            ((Item_sum *) (yyvsp[0].item))->mark_as_window_func_sum_expr();
          }
#line 39571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 10998 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39591 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39611 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39621 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39631 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39661 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11061 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11072 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11090 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 39728 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 39734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 39742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11126 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11158 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 39789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 39799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 39808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 39816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 39830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 39842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 39851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 39860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 39872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11224 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 39882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 39888 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11244 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 39906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 39912 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 39918 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 39924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 39932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11268 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
#line 39943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            sel->offset_limit= (yyvsp[-2].item);
            sel->explicit_limit= 1;
          }
#line 39954 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[-2].item);
            sel->offset_limit= (yyvsp[0].item);
            sel->explicit_limit= 1;
          }
#line 39965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 39978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 39987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string)); Lex->charset= &my_charset_bin; }
#line 39993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 39999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 40005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 40011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 40017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->charset= thd->variables.collation_connection; }
#line 40023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[-2].const_simple_string)); }
#line 40029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->charset= national_charset_info;
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].const_simple_string), 0);
          }
#line 40038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 40044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); Lex->charset= NULL; }
#line 40050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->set_cast_type_udt(&(yyval.Lex_cast_type), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 40059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->set_cast_type_udt(&(yyval.Lex_cast_type), (yyvsp[0].kwd)))
              MYSQL_YYABORT;
          }
#line 40068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->set_cast_type_udt(&(yyval.Lex_cast_type), (yyvsp[0].kwd)))
              MYSQL_YYABORT;
          }
#line 40077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 40083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11350 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 40089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 40095 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 40101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 11353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 40107 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 11354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 40113 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 11355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 40119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 40125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 40131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 11361 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_time2, 0, (yyvsp[0].const_simple_string)); }
#line 40137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 11362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.Lex_cast_type).set(&type_handler_datetime2, 0, (yyvsp[0].const_simple_string)); }
#line 40143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 11364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.Lex_cast_type).set(&type_handler_interval_DDhhmmssff, 0, (yyvsp[0].const_simple_string));
          }
#line 40151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 11370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= NULL; }
#line 40157 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 11371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 40163 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 11376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 40172 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 11381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 40181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 11388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[0].item_list); }
#line 40187 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 11389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 40193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 11394 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 11401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 40213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 11409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 11418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 40237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 11429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 40247 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 11438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;

          }
#line 40260 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 11447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-2].item_list);
            if (unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 11458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 40276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 11460 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 40289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 11471 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 40295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 11482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 40301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 11483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 40307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 11490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)=(yyvsp[0].table_list);
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 40316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 11495 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 40325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 11509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 40335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 11516 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 40349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 11526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 40360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 11534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
          }
#line 40370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 11540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 40380 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 11546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 40392 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 11557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 40406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 11567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 40418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 11575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 40428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 11581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 40438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 11587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 40451 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 11599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 40465 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 11609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 40478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 11618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 40488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 11624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 40499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 11631 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 40513 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 11644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 40519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 11645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 40525 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 11646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 40531 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 11650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = (yyvsp[0].num); }
#line 40537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 11651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 40543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 11659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string_list)= 0;}
#line 40549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 11665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-2].string_list);
            Select->parsing_place= Select->save_parsing_place;
            Select->save_parsing_place= NO_MATTER;
          }
#line 40559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 11673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 40565 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 11674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 40571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 11676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyvsp[0].table_list)->nested_join->nest_type= 0;
            (yyval.table_list)= (yyvsp[0].table_list);
          }
#line 40580 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 11680 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 40586 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 11684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 40592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 11685 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 40598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 11689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 40604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 11690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 40610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 11694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 40616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 11696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.table_list)= Select->end_nested_join(thd)))
              MYSQL_YYABORT;
          }
#line 40625 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 11704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Select->init_nested_join(thd))
              MYSQL_YYABORT;
            Select->add_joined_table((yyvsp[-2].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list)->embedding;
          }
#line 40637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 11712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list);
          }
#line 40646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 11719 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 40652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 11721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(thd)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 40665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 11735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            if ((yyvsp[-2].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 40683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 11753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.table_list)= Lex->parsed_derived_table((yyvsp[-2].select_lex)->master_unit(), (yyvsp[-1].num), (yyvsp[0].lex_str_ptr))))
              MYSQL_YYABORT;
          }
#line 40692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 11760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 11761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 11766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= thd->variables.old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
#line 40712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 11769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 40718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 11770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 40724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 11771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 40730 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 11775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 40736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 11776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 40742 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 11781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 40750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 11786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 40758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 11799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->alloc_index_hints(thd); }
#line 40764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 11803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {  Select->clear_index_hints(); }
#line 40770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 11808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, NULL, 0); }
#line 40776 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 11809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40782 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 11814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 40788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 11816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 40794 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 11826 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 40809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 11837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            String *s= new (thd->mem_root) String((const char *) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 40824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 11850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 40830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 11851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 40836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 11852 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 40842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 11853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 40848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 11854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 40854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 11855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 40860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 11856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 40866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 11857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 40872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 11858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 40878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 11859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 40884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 11860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 40890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 11861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 40896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 11865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 40902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 11866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 40908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 11867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 40914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 11868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 40920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 11869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 40926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 11870 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 40932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 11871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 40938 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 11872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 40944 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 11873 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 40950 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 11877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 40956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 11878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 40962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 11879 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 40968 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 11880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 40974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 11890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)=0; }
#line 40980 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 11891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str_ptr)= (yyvsp[0].lex_str_ptr); }
#line 40986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 11896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 40996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 11909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->where= 0; }
#line 41002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 11911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_WHERE;
          }
#line 41010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 11915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 41022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 11927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= IN_HAVING;
          }
#line 41030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 11931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 41042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 11951 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 41051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 11956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 41060 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 11963 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 11965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 41087 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 11982 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 41106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 41131 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->prepare_add_window_spec(thd); }
#line 41137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 41143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 41159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 41165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 41171 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->order_list= *((yyvsp[0].select_order)); }
#line 41177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41183 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 41198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12072 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 41204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 41210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12078 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 41224 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 41234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 12097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12104 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 41273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 41295 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 41301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 41307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 41313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 41319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 12146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 41325 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 12148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 41331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 12166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 41341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_order)= NULL; }
#line 41347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_order)= (yyvsp[0].select_order); }
#line 41353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 12186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thd->where= "ORDER clause";
          }
#line 41361 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 12190 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_order)= (yyvsp[0].select_order);
          }
#line 41369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 12197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_order)= (yyvsp[-3].select_order);
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item),(bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 41379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 12203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_order)= new (thd->mem_root) SQL_I_List<ORDER>();
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item), (bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 41389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 12211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =  1; }
#line 41395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 12212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =1; }
#line 41401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 12213 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num) =0; }
#line 41407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 12218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_limit).empty(); }
#line 41413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 12220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.select_limit)= (yyvsp[0].select_limit); }
#line 41419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 12225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit)= (yyvsp[0].select_limit);
            if (!(yyval.select_limit).select_limit->basic_const_item() ||
                (yyval.select_limit).select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 41430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 12233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit)= (yyvsp[-3].select_limit);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 41439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 12238 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= 0;
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= 0;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 41450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 12248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->explicit_limit= (yyvsp[0].select_limit).explicit_limit;
            Select->select_limit= (yyvsp[0].select_limit).select_limit;
            Select->offset_limit= (yyvsp[0].select_limit).offset_limit;
          }
#line 41460 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 12257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= 1;
          }
#line 41470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 12263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= (yyvsp[-2].item);
            (yyval.select_limit).explicit_limit= 1;
          }
#line 41480 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 12269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= (yyvsp[0].item);
            (yyval.select_limit).explicit_limit= 1;
          }
#line 41490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 12278 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 41499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 12283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 41508 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 12288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 41516 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 12292 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 12298 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 12304 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 12313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex=Lex;
            lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 41555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 12321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
#line 41564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 12326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
#line 41575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 12332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 41581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 12333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(); MYSQL_YYABORT; }
#line 41587 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 12338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock);
            (yyval.order_limit_lock)->lock.empty();
          }
#line 41596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 12343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= (yyvsp[-1].order_limit_lock);
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 41605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 12348 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit.empty();
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 41618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 12360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select();
            (yyval.order_limit_lock)= NULL;
          }
#line 41627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 12364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock); }
#line 41633 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 12377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock).empty();
          }
#line 41641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 12381 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.select_lock)= (yyvsp[0].select_lock);
          }
#line 41649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 12385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(thd, ER_WARN_DEPRECATED_SYNTAX),
                                "<select expression> INTO <destination>;",
                                "'SELECT <select list> INTO <destination>"
                                " FROM...'");
            (yyval.select_lock)= (yyvsp[0].select_lock);
          }
#line 41663 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 12398 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= (yyvsp[-1].select_order);
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 41675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 12406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_order_limit_lock *op= (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            op->order_list= NULL;
            op->limit= (yyvsp[0].select_limit);
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 41689 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 12424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 12425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41701 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 12429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 12430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= strtoul((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41713 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 12431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41719 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 12432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 12433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 12434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41737 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 12438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 12439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 12440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 12441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 12442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 41767 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 12446 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41773 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 12447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41779 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 12448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41785 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 12449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 12453 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 12454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 12455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 12456 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 12457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 12461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 12462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41833 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 12463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 41839 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 12464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 41845 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 12465 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 41851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 12470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 41857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 12479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 41863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 12480 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 41869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 12484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 41875 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 12485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 1; }
#line 41881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 12486 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 41887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 12491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           (yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so disallow any subqueries further.
              Alow subqueries back once the parameters are reduced.
            */
            Lex->clause_that_disallows_subselect= "PROCEDURE";
            Select->options|= OPTION_PROCEDURE_CLAUSE;
          }
#line 41915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 12515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* Subqueries are allowed from now.*/
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 41924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 12522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 12523 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 12533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 41947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 12542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 41959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 12550 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 12555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 41971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 12559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 41992 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 12579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 42000 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 12583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 42009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 12588 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 42018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 12596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 12601 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
          }
#line 42039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 12612 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 42045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 12615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 42064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 12630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 42072 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 12641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            if (lex->main_select_push(true))
              MYSQL_YYABORT;
            mysql_init_select(lex);
          }
#line 42084 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 12649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->insert_list= (yyvsp[0].item_list);
            Lex->pop_select(); //main select
          }
#line 42093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 12661 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 42104 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 12668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42110 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 12670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 42119 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 12675 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys).str, (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 42141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 12693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 42151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 12699 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 42159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 12703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 42167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 12707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 42178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 12714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 12716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 42193 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 12721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 42203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 12727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
#line 42212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 12732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
#line 42221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 12737 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 42230 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 12743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 42242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 12751 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 12762 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!thd->lex->current_select_or_default()->
                                           add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 42261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 12774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 42275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 12792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 42289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 12805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 42298 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 12810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 42307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 12818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 42315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 12822 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 42323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 12828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 42329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 12829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 42335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 12837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_INSERT;
            Lex->duplicates= DUP_ERROR;
          }
#line 42344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 12842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-3].lock_type), true);
          }
#line 42352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 12847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mark_first_table_as_inserting();
          }
#line 42360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 12854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REPLACE;
            Lex->duplicates= DUP_REPLACE;
          }
#line 42369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 12859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true);
          }
#line 42377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 12864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mark_first_table_as_inserting();
          }
#line 42385 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 12869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
                if (Lex->main_select_push())
                  MYSQL_YYABORT;
                mysql_init_select(Lex);
                Lex->current_select->parsing_place= BEFORE_OPT_LIST;
              }
#line 42396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 12877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
              Lex->pop_select(); //main select
              if (Lex->check_main_unit_semantics())
                MYSQL_YYABORT;
            }
#line 42406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 12886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 42419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 12895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 42425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 12899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 42431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 12904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42437 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 12906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 42447 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 12916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->save_parsing_place= Select->parsing_place;
          }
#line 42455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 12920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            //lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 42466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 12929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 12930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 12932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
            lex->current_select->parsing_place= NO_MATTER;
          }
#line 42491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 12945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->current_select->parsing_place= AFTER_LIST;
          }
#line 42499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 12957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 42505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 12958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 42511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 12964 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 12979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 12988 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 12989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42540 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 12993 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 12994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 12998 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 12999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13004 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 42585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 42605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42628 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 13049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 13054 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 13062 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 42658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 13070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 42670 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 13080 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item);}
#line 42676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 13082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_default_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42686 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2137:
#line 13088 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_ignore_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 13097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates= DUP_UPDATE; }
#line 42702 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 13099 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 42710 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 13103 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    Select->parsing_place= NO_MATTER;
          }
#line 42718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2142:
#line 13111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            (yyval.table_list)->period_conditions= Lex->period_conditions;
          }
#line 42735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 13123 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 13130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 42754 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 13140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            SELECT_LEX *slex= Lex->first_select_lex();
            if (slex->table_list.elements > 1)
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (slex->get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1);
          }
#line 42777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 13159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].select_order))
              Select->order_list= *((yyvsp[-1].select_order));
          }
#line 42786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 13162 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 13172 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))) ||
                unlikely(add_value_to_list(thd, (yyvsp[0].item))))
              MYSQL_YYABORT;
          }
#line 42802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 13186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 13195 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 42819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 13196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 13203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->ignore= 0;
            lex->first_select_lex()->order_list.empty();
          }
#line 42841 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 13215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 42847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 13220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_HISTORY);
          }
#line 42855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 13224 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 42863 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 13230 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42869 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 13232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->last_table()->vers_conditions= Lex->vers_conditions;
            Lex->pop_select(); //main select
          }
#line 42878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 13240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 13255 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].num))
              Lex->last_table()->period_conditions= Lex->period_conditions;
          }
#line 42903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 13267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].select_order))
              Select->order_list= *((yyvsp[-2].select_order));
            Lex->pop_select(); //main select
          }
#line 42913 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 13273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42923 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 13279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 42932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 13282 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42938 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 13284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 42948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 13290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 42957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 13293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 42963 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 13298 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(!Lex->has_returning());
          }
#line 42971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 13302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(!Lex->has_returning());
            if (((yyval.num)= (Select != Lex->returning())))
            {
              SELECT_LEX *sl= Lex->returning();
              sl->set_master_unit(0);
              Select->add_slave(Lex->create_unit(sl));
              sl->include_global((st_select_lex_node**)&Lex->all_selects_list);
              Lex->push_select(sl);
            }
          }
#line 42987 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 13314 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].num))
              Lex->pop_select();
          }
#line 42996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 13327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 43015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 13342 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Table_ident *ti= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely(ti == NULL))
              MYSQL_YYABORT;
            if (unlikely(!Select->
                         add_table_to_list(thd,
                                           ti,
                                           NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 43034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2178:
#line 13359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 13360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 13364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 13365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 43058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 13369 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_QUICK; }
#line 43064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 13370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 43070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 13371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 43076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 13376 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->first_select_lex()->options= 0;
            lex->sql_cache= LEX::SQL_CACHE_UNSPECIFIED;
            lex->first_select_lex()->order_list.empty();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 43091 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 13387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 43103 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 13394 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 43109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 13412 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 43117 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 13416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 43125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 13420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 43133 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 13424 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 43141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 13428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 43149 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 13432 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 43157 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 13436 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 43165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 13440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 43173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 13444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 43181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 13451 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= 0;
    }
#line 43189 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 13455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 43197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 13464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 43212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 13475 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 43221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 13483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 43232 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 13490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
#line 43244 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 13498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
#line 43256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 13506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
#line 43268 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 13514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
#line 43280 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 13522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->first_select_lex()->db= (yyvsp[-1].lex_str);
            if (prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 43292 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 13530 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 43303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 13537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 43314 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 13544 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 43324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 13550 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 43330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 13552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->create_info.db_type= NULL; }
#line 43336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 13554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 43349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 13563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 43357 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 13567 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 43365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 13571 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 43374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2223:
#line 13577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 43383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 13583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 43396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 13592 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 43407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 13599 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 43416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 13604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 43425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 13609 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 43434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 13614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 43443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 13619 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 43452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 13624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 43458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 13626 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 43464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 13628 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 43470 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 13630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 43481 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 13637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 43493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 13645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 43499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 13647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 43511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 13655 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 43522 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 13662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 43533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 13669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 43545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 13677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 43555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 13683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 43564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 13688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 43576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 13696 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 43588 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 13704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 43600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 13712 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOG_STAT;
          }
#line 43608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 13716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOG_STAT;
          }
#line 43616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 13720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(Lex->m_sql_cmd= new (thd->mem_root)
                  Sql_cmd_show_slave_status(true)))
              MYSQL_YYABORT;
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 43627 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 13727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
            if (!(lex->m_sql_cmd= new (thd->mem_root)
                  Sql_cmd_show_slave_status()))
              MYSQL_YYABORT;
            lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 43640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 13736 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!(Lex->m_sql_cmd= new (thd->mem_root)
                  Sql_cmd_show_slave_status()))
              MYSQL_YYABORT;
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 43651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 13743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 43662 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 13750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 43673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 13757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 43683 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 13763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 43693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 13769 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 43703 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 13775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 43713 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 13781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 43723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 13787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 43735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 13795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 43744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 13800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2262:
#line 13807 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2263:
#line 13814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 13821 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 13828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 13835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 43810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 13842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 13847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43828 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2269:
#line 13852 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43837 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2270:
#line 13857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 43846 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2271:
#line 13862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 43855 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 13867 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_EXPLAIN)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 43866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 13874 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 43889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 13896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 43895 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 13898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 43901 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 13900 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 43907 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 13914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 43913 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 13915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 43919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 13919 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->verbose=0; }
#line 43925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 13920 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->verbose=1; }
#line 43931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 13929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 43937 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 13930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 43943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2289:
#line 13934 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 43949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 13935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 43955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 13939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 43961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 13941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 43973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 13949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 43984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 13960 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->first_select_lex()->db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 44001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 13973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 44010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 13978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_NORMAL; }
#line 44016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 13980 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->first_select_lex()->options|= SELECT_DESCRIBE;
          }
#line 44025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 14002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->analyze_stmt= true;
          }
#line 44033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 14008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_EXTENDED; }
#line 44039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 14010 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_EXTENDED | DESCRIBE_EXTENDED2; }
#line 44045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 14011 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 44051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 14012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2311:
#line 14016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 14018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), "EXPLAIN",
                               (yyvsp[0].lex_str).str));
          }
#line 44077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 14030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->wild= (yyvsp[0].string); }
#line 44089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 14033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 44101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 14047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 44112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 14053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 14058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 44132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 14068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2320:
#line 14070 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44144 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2321:
#line 14074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44150 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2322:
#line 14076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Don't try to flush views. */
            tables->required_type= TABLE_TYPE_NORMAL;
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 44166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 14091 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 44172 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 14093 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 44186 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 14101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44192 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2327:
#line 14107 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2328:
#line 14112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 44204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2329:
#line 14114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 44210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2330:
#line 14116 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 44216 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2331:
#line 14118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 44222 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2332:
#line 14120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 44228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2333:
#line 14122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 44240 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2334:
#line 14130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 44246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 14132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 44252 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2336:
#line 14134 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 44258 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 14136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 44267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2338:
#line 14141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 44273 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2339:
#line 14143 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 44285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2340:
#line 14151 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_MASTER; }
#line 44291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2341:
#line 14153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 44297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2342:
#line 14155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 44303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2343:
#line 14157 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SSL;}
#line 44309 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2344:
#line 14159 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_THREADS;}
#line 44315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2345:
#line 14161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 44333 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2346:
#line 14177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44339 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2347:
#line 14178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44345 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2348:
#line 14182 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2349:
#line 14187 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          int type;
          if (unlikely(Lex->sphead))
            my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP STAGE"));
          if ((type= find_type((yyvsp[0].ident_sys).str, &backup_stage_names,
                               FIND_TYPE_NO_PREFIX)) <= 0)
            my_yyabort_error((ER_BACKUP_UNKNOWN_STAGE, MYF(0), (yyvsp[0].ident_sys).str));
          Lex->sql_command= SQLCOM_BACKUP;
          Lex->backup_stage= (backup_stages) (type-1);
          break;
        }
#line 44367 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2350:
#line 14199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP LOCK"));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 44378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2351:
#line 14206 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
	    if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL, 0,
                                                    TL_READ, MDL_SHARED_HIGH_PRIO)))
             MYSQL_YYABORT;
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
            Lex->pop_select(); //main select
          }
#line 44390 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2352:
#line 14214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP UNLOCK"));
	    /* Table list is empty for unlock */
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
          }
#line 44401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2353:
#line 14223 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2354:
#line 14225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2358:
#line 14235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 44430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2359:
#line 14250 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num)= 0;}
#line 44436 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2360:
#line 14251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.num)= REFRESH_CHECKPOINT; }
#line 44442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2361:
#line 14256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 44451 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2362:
#line 14261 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44457 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2365:
#line 14270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 44463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2366:
#line 14272 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 44469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2367:
#line 14274 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 44478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2369:
#line 14279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_QUERY_CACHE;}
#line 44484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2370:
#line 14283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 44490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2371:
#line 14284 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 44496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2372:
#line 14288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2373:
#line 14290 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 44510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2374:
#line 14297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->stmt_purge_to((yyvsp[0].lex_str));
          }
#line 44518 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2375:
#line 14301 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->clause_that_disallows_subselect= "PURGE..BEFORE"; }
#line 44524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2376:
#line 14303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_purge_before((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 44534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2377:
#line 14315 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
          }
#line 44546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2378:
#line 14323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->kill_signal= (killed_state) ((yyvsp[-1].num) | (yyvsp[0].num));
          }
#line 44554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2379:
#line 14329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 44560 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2380:
#line 14330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_HARD_BIT; }
#line 44566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2381:
#line 14331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 44572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2382:
#line 14335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_CONNECTION; }
#line 44578 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2383:
#line 14336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (int) KILL_QUERY; }
#line 44584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2384:
#line 14338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
            Lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
          }
#line 44594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2385:
#line 14346 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 44600 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2386:
#line 14347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 44606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2387:
#line 14352 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 44614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2388:
#line 14356 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 44623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2389:
#line 14363 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 44629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2390:
#line 14364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44635 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2391:
#line 14368 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->is_shutdown_wait_for_slaves= false; }
#line 44641 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2392:
#line 14370 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          Lex->is_shutdown_wait_for_slaves= true;
        }
#line 44649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2393:
#line 14379 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->first_select_lex()->db= (yyvsp[0].ident_sys);
          }
#line 44659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2394:
#line 14390 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
            if (lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_select(lex);
          }
#line 44677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2395:
#line 14404 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 44692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2396:
#line 14415 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 44709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2397:
#line 14428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->cs= (yyvsp[0].charset); }
#line 44715 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2398:
#line 14433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->mark_first_table_as_inserting();
          }
#line 44723 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2399:
#line 14439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 44729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2400:
#line 14440 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 44735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2401:
#line 14444 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=0;}
#line 44741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2402:
#line 14445 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1;}
#line 44747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2403:
#line 14449 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 44753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2404:
#line 14451 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 44765 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2405:
#line 14458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 44771 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2406:
#line 14462 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_ERROR; }
#line 44777 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2407:
#line 14463 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->duplicates=DUP_REPLACE; }
#line 44783 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2408:
#line 14464 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ignore= 1; }
#line 44789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2413:
#line 14479 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 44798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2414:
#line 14484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 44809 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2415:
#line 14491 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 44818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2416:
#line 14496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 44827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2421:
#line 14514 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 44836 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2422:
#line 14519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 44845 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2423:
#line 14526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 44851 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2424:
#line 14528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->exchange->line_term = (yyvsp[0].string); }
#line 44857 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2426:
#line 14534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 44866 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2427:
#line 14541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 44872 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2428:
#line 14542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 44878 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2429:
#line 14546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2430:
#line 14547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2431:
#line 14548 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44896 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2432:
#line 14553 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2433:
#line 14555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44908 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2434:
#line 14559 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {(yyval.item)= (yyvsp[0].item);}
#line 44914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2435:
#line 14561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44924 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2436:
#line 14569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2437:
#line 14570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 44936 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2440:
#line 14580 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 44948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2441:
#line 14593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 44957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2442:
#line 14598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 44966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2443:
#line 14603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 44975 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2444:
#line 14608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 44984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2445:
#line 14616 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.string)= new (thd->mem_root) String((yyvsp[0].lex_str).str,
                                             (yyvsp[0].lex_str).length,
                                             thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 44996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2446:
#line 14623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 45002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2447:
#line 14629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 45014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2448:
#line 14637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 45026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2449:
#line 14645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 45042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2450:
#line 14660 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 45053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2451:
#line 14667 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 45063 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2452:
#line 14673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 45074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2453:
#line 14682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 45080 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2454:
#line 14684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 45089 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2455:
#line 14691 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 45095 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2456:
#line 14692 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 45101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2457:
#line 14693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 45107 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2458:
#line 14695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 45125 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2459:
#line 14709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2460:
#line 14715 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45145 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2461:
#line 14721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2462:
#line 14727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2463:
#line 14733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45175 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2464:
#line 14739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Item_string_with_introducer *item_str;
            LEX_CSTRING tmp;
            (yyvsp[0].string)->get_value(&tmp);
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, null_clex_str,
                                           tmp, (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 45197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2465:
#line 14760 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 45211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2466:
#line 14770 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 45225 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2467:
#line 14780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 45235 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2468:
#line 14786 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 45246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2469:
#line 14793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 45256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2470:
#line 14803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= type_handler_newdate.create_literal_item(thd,
                                                           (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                           YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 45267 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2471:
#line 14810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= type_handler_time2.create_literal_item(thd,
                                                         (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                         YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 45278 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2472:
#line 14817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= type_handler_datetime.create_literal_item(thd,
                                                            (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                            YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 45289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2473:
#line 14827 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             lex->derived_tables|= DERIVED_WITH;
             lex->curr_with_clause= with_clause;
             with_clause->add_to_list(Lex->with_clauses_list_last_next);
             if (lex->current_select &&
                 lex->current_select->parsing_place == BEFORE_OPT_LIST)
               lex->current_select->parsing_place= NO_MATTER;
          }
#line 45307 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2474:
#line 14841 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 45316 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2475:
#line 14849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 45322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2476:
#line 14850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 45328 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2479:
#line 14864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            const char *spec_start= (yyvsp[-3].kwd).pos() + 1;
            With_element *elem= new With_element((yyvsp[-6].lex_str_ptr), *(yyvsp[-5].ident_sys_list), (yyvsp[-2].select_lex_unit));
	    if (elem == NULL || Lex->curr_with_clause->add_with_element(elem))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[-1].kwd).pos(),
                                        spec_start - query_start))
              MYSQL_YYABORT;
            if ((yyvsp[0].ident_sys_list))
            {
              elem->set_cycle_list((yyvsp[0].ident_sys_list));
            }
	  }
#line 45349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2480:
#line 14884 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_sys_list)= NULL; }
#line 45355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2481:
#line 14887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if (!Lex->curr_with_clause->with_recursive)
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].kwd).pos());
           }
         }
#line 45366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2482:
#line 14894 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           (yyval.ident_sys_list)= (yyvsp[-1].ident_sys_list);
         }
#line 45374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2483:
#line 14902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (((yyval.ident_sys_list)= new (thd->mem_root) List<Lex_ident_sys>) == NULL)
              MYSQL_YYABORT;
          }
#line 45383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2484:
#line 14907 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_sys_list)= (yyvsp[-1].ident_sys_list); }
#line 45389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2486:
#line 14916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            void *buf= thd->alloc(sizeof(Lex_ident_sys));
            if (!buf)
              MYSQL_YYABORT;
            (yyval.ident_sys_ptr)= new (buf) Lex_ident_sys(thd, &(yyvsp[0].ident_cli));
          }
#line 45400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2487:
#line 14926 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.ident_sys_list)= new (thd->mem_root) List<Lex_ident_sys>;
            if (unlikely((yyval.ident_sys_list) == NULL || (yyval.ident_sys_list)->push_back((yyvsp[0].ident_sys_ptr))))
              MYSQL_YYABORT;
	  }
#line 45410 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2488:
#line 14932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (((yyval.ident_sys_list)= (yyvsp[-2].ident_sys_list))->push_back((yyvsp[0].ident_sys_ptr)))
              MYSQL_YYABORT;
          }
#line 45419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2489:
#line 14941 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 45429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2490:
#line 14955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 45435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2491:
#line 14956 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 45441 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2492:
#line 14961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2493:
#line 14966 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45459 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2494:
#line 14974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2495:
#line 14979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2496:
#line 14986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 45483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2497:
#line 14992 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45492 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2498:
#line 14997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45501 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2499:
#line 15002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2500:
#line 15008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45520 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2501:
#line 15013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45529 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2502:
#line 15021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45538 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2503:
#line 15026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2504:
#line 15031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45556 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2505:
#line 15036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2506:
#line 15042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 45575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2507:
#line 15049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 45581 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2508:
#line 15051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-4].ident_sys).str,
                                       table->db.str)))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                                       table->table_name.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 45596 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2509:
#line 15062 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                         table->alias.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 45608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2510:
#line 15069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 45614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2511:
#line 15074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45624 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2512:
#line 15080 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2513:
#line 15086 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45645 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2514:
#line 15096 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45655 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2515:
#line 15102 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2516:
#line 15111 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING db={(char*) any_db,3};
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 45676 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2521:
#line 15127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 45682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2522:
#line 15132 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 45691 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2523:
#line 15140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 45700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2524:
#line 15148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 45709 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2525:
#line 15156 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 45718 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2527:
#line 15165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2528:
#line 15172 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_cli)= (yyvsp[0].ident_cli); }
#line 45733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2529:
#line 15173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 45739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2531:
#line 15179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2532:
#line 15184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 45757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2534:
#line 15194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45766 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2536:
#line 15203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 45775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2537:
#line 15210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 45781 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2538:
#line 15211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 45787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2539:
#line 15212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 45793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2540:
#line 15217 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 45808 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2541:
#line 15228 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              /*
                Convert hostname part of username to lowercase.
                It's OK to use in-place lowercase as long as
                the character set is utf8.
              */
              my_casedn_str(system_charset_info, (char*) (yyval.lex_user)->host.str);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 45841 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2542:
#line 15257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->auth= new (thd->mem_root) USER_AUTH();
          }
#line 45852 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 2545:
#line 15268 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 45862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3259:
#line 16109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
          }
#line 45871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3260:
#line 16114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 45880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3263:
#line 16124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= OPT_DEFAULT;
            if (sp_create_assignment_lex(thd, (yyvsp[0].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 45890 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3264:
#line 16130 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3265:
#line 16135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 45907 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3267:
#line 16141 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 45921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3273:
#line 16168 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[0].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 45930 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3274:
#line 16173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 45939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3277:
#line 16188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 45947 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3280:
#line 16196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3281:
#line 16197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45959 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3282:
#line 16198 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45965 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3283:
#line 16202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45971 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3284:
#line 16203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 45977 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3285:
#line 16204 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45983 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3286:
#line 16205 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 45989 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3287:
#line 16209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 45995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3288:
#line 16210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 46001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3289:
#line 16211 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 46007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3290:
#line 16212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 46013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3291:
#line 16221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 46022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3292:
#line 16226 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(Lex->option_type, &tmp, (yyvsp[0].item))))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 46034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3293:
#line 16234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 46043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3294:
#line 16239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(thd, Lex->option_type,
                         &tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 46056 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3295:
#line 16248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 46065 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3296:
#line 16253 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type,
                                                          &(yyvsp[-3].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 46076 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3297:
#line 16265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 46085 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3298:
#line 16270 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(Lex->option_type, &tmp, (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3299:
#line 16278 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 46106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3300:
#line 16283 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(thd, Lex->option_type, &tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3301:
#line 16291 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 46127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3302:
#line 16296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3303:
#line 16306 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 46146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3304:
#line 16311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46158 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3305:
#line 16319 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 46167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3306:
#line 16324 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3307:
#line 16332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 46188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3308:
#line 16337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type, &(yyvsp[-3].ident_sys), (yyvsp[0].item))))
              MYSQL_YYABORT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3309:
#line 16344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-2].lex_str).str))
              MYSQL_YYABORT;
          }
#line 46208 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3310:
#line 16349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-3].lex_str), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46218 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3311:
#line 16355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-4].lex_str).str))
              MYSQL_YYABORT;
          }
#line 46227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3312:
#line 16360 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable((yyvsp[-4].var_type), &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46237 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3313:
#line 16366 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-6].lex_str).str))
              MYSQL_YYABORT;
          }
#line 46246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3314:
#line 16371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-6].var_type), &(yyvsp[-5].ident_sys), &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46256 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3315:
#line 16377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-6].lex_str).str))
              MYSQL_YYABORT;
          }
#line 46265 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3316:
#line 16382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-6].var_type), &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3317:
#line 16388 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3318:
#line 16406 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 46312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3319:
#line 16417 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-2].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            CHARSET_INFO *cs2;
            CHARSET_INFO *cs3;
            cs2= (yyvsp[-1].charset) ? (yyvsp[-1].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[0].charset) ? (yyvsp[0].charset) : cs2;
            if (unlikely(!my_charset_same(cs2, cs3)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new (thd->mem_root) set_var_collation_client(cs3, cs3, cs3);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3320:
#line 16439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-2].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user=(LEX_USER *) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46364 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3321:
#line 16461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-4].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46384 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3322:
#line 16477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_str));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46399 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3323:
#line 16488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 46408 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3324:
#line 16493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].kwd));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3325:
#line 16501 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 46429 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3326:
#line 16506 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_create_set_password_instr(thd, (yyvsp[0].user_auth),
                                                           yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3327:
#line 16512 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 46448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3328:
#line 16517 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_create_set_password_instr(thd, (yyvsp[-2].lex_user), (yyvsp[0].user_auth),
                                                           yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 46458 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3333:
#line 16533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3334:
#line 16552 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "tx_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46497 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3335:
#line 16569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 46503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3336:
#line 16570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 46509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3337:
#line 16574 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 46515 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3338:
#line 16575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 46521 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3339:
#line 16576 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 46527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3340:
#line 16577 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 46533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3341:
#line 16583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 46542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3342:
#line 16588 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
          }
#line 46551 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3343:
#line 16593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
            (yyval.user_auth)->auth_str.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            (yyval.user_auth)->auth_str.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 46563 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3344:
#line 16603 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=(yyvsp[0].item); }
#line 46569 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3345:
#line 16604 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item)=0; }
#line 46575 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3346:
#line 16606 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ON",  2);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 46585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3347:
#line 16612 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "ALL", 3);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 46595 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3348:
#line 16618 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.item)=new (thd->mem_root) Item_string_sys(thd, "binary", 6);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 46605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3349:
#line 16629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 46617 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3350:
#line 16637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3351:
#line 16642 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3352:
#line 16644 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 46639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3353:
#line 16650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 46649 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3354:
#line 16658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 46655 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3355:
#line 16659 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 46661 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3358:
#line 16669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Lex->current_select_or_default()->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 46681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3359:
#line 16687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 46687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3360:
#line 16688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 46693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3361:
#line 16690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 46701 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3362:
#line 16694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 46707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3363:
#line 16695 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 46713 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3364:
#line 16700 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 46725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3365:
#line 16708 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46731 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3366:
#line 16717 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 46740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3367:
#line 16722 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->pop_select(); //main select
          }
#line 46748 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3368:
#line 16729 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
              MYSQL_YYABORT;
          }
#line 46761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3369:
#line 16738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 46774 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3370:
#line 16747 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->clause_that_disallows_subselect= "HANDLER..READ";
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 46795 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3371:
#line 16764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->clause_that_disallows_subselect= NULL;
            if (!lex->current_select->explicit_limit)
            {
              Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
              if (one == NULL)
                MYSQL_YYABORT;
              lex->current_select->select_limit= one;
              lex->current_select->offset_limit= 0;
              lex->limit_rows_examined= 0;
            }
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 46820 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3372:
#line 16787 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ident= null_clex_str; }
#line 46826 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3373:
#line 16788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ident= (yyvsp[-1].ident_sys); }
#line 46832 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3374:
#line 16792 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 46838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3375:
#line 16793 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 46844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3376:
#line 16797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RFIRST; }
#line 46850 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3377:
#line 16798 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RNEXT;  }
#line 46856 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3378:
#line 16799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RPREV;  }
#line 46862 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3379:
#line 16800 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->ha_read_mode = RLAST;  }
#line 46868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3380:
#line 16802 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 46880 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3381:
#line 16810 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3382:
#line 16814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 46892 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3383:
#line 16815 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 46898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3384:
#line 16816 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 46904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3385:
#line 16817 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 46910 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3386:
#line 16818 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 46916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3387:
#line 16825 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3388:
#line 16830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_revoke_table(thd, (yyvsp[-5].lex_grant), *(yyvsp[-2].lex_grant_ident)))
              MYSQL_YYABORT;
          }
#line 46931 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3389:
#line 16835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_revoke_sp(thd, (yyvsp[-5].lex_grant), *(yyvsp[-2].lex_grant_ident), *(yyvsp[-3].sp_handler)))
              MYSQL_YYABORT;
          }
#line 46940 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3390:
#line 16840 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 46948 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3391:
#line 16844 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_revoke_proxy(thd, (yyvsp[-2].lex_user)))
              MYSQL_YYABORT;
          }
#line 46957 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3392:
#line 16849 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3393:
#line 16858 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 46973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3394:
#line 16860 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 46979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3395:
#line 16865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 46985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3396:
#line 16871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_grant_table(thd, (yyvsp[-7].lex_grant), *(yyvsp[-4].lex_grant_ident), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 46994 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3397:
#line 16877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_grant_sp(thd, (yyvsp[-7].lex_grant), *(yyvsp[-4].lex_grant_ident), *(yyvsp[-5].sp_handler), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 47003 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3398:
#line 16882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_grant_proxy(thd, (yyvsp[-3].lex_user), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 47012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3399:
#line 16887 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3400:
#line 16898 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer = 0; }
#line 47030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3401:
#line 16899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->definer = (yyvsp[0].lex_user); }
#line 47036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3402:
#line 16903 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= false; }
#line 47042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3403:
#line 16904 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->with_admin_option= true; }
#line 47048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3404:
#line 16909 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3405:
#line 16914 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47066 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3406:
#line 16922 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
            (yyval.lex_user)->auth= NULL;
          }
#line 47077 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3407:
#line 16932 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            CHARSET_INFO *cs= system_charset_info;
            /* trim end spaces (as they'll be lost in mysql.user anyway) */
            (yyvsp[0].lex_str).length= cs->lengthsp((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
            if (unlikely((yyvsp[0].lex_str).length == 0))
              my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[0].lex_str);
            (yyval.lex_user)->host= empty_clex_str;
            (yyval.lex_user)->auth= NULL;

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  cs, 0)))
              MYSQL_YYABORT;
          }
#line 47100 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3412:
#line 16961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege(GLOBAL_ACLS, true)))
              MYSQL_YYABORT;
          }
#line 47109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3415:
#line 16974 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege((yyvsp[0].privilege))))
              MYSQL_YYABORT;
          }
#line 47118 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3416:
#line 16979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege()) ||
                (yyval.lex_grant)->add_column_list_privilege(thd, (yyvsp[0].column_list_privilege).m_columns[0],
                                                   (yyvsp[0].column_list_privilege).m_privilege))
              MYSQL_YYABORT;
          }
#line 47129 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3417:
#line 16986 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            ((yyval.lex_grant)= (yyvsp[-2].lex_grant))->add_object_privilege((yyvsp[0].privilege));
          }
#line 47137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3418:
#line 16990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (((yyval.lex_grant)= (yyvsp[-2].lex_grant))->add_column_list_privilege(thd, (yyvsp[0].column_list_privilege).m_columns[0],
                                                         (yyvsp[0].column_list_privilege).m_privilege))
              MYSQL_YYABORT;
          }
#line 47147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3419:
#line 16999 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.column_list_privilege)= Lex_column_list_privilege((yyvsp[-1].ident_sys_list), (yyvsp[-3].privilege));
          }
#line 47155 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3420:
#line 17005 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= SELECT_ACL; }
#line 47161 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3421:
#line 17006 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= INSERT_ACL; }
#line 47167 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3422:
#line 17007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= UPDATE_ACL; }
#line 47173 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3423:
#line 17008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= REFERENCES_ACL; }
#line 47179 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3424:
#line 17012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= SELECT_ACL; }
#line 47185 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3425:
#line 17013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= INSERT_ACL; }
#line 47191 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3426:
#line 17014 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= UPDATE_ACL; }
#line 47197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3427:
#line 17015 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= REFERENCES_ACL; }
#line 47203 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3428:
#line 17016 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= DELETE_ACL;}
#line 47209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3429:
#line 17017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= NO_ACL; }
#line 47215 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3430:
#line 17018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= INDEX_ACL;}
#line 47221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3431:
#line 17019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= ALTER_ACL;}
#line 47227 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3432:
#line 17020 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= CREATE_ACL;}
#line 47233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3433:
#line 17021 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= DROP_ACL;}
#line 47239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3434:
#line 17022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= EXECUTE_ACL;}
#line 47245 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3435:
#line 17023 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= RELOAD_ACL;}
#line 47251 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3436:
#line 17024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= SHUTDOWN_ACL;}
#line 47257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3437:
#line 17025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= PROCESS_ACL;}
#line 47263 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3438:
#line 17026 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= FILE_ACL;}
#line 47269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3439:
#line 17027 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= GRANT_ACL;}
#line 47275 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3440:
#line 17028 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= SHOW_DB_ACL;}
#line 47281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3441:
#line 17029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= SUPER_ACL;}
#line 47287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3442:
#line 17030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= CREATE_TMP_ACL;}
#line 47293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3443:
#line 17031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= LOCK_TABLES_ACL; }
#line 47299 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3444:
#line 17032 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= REPL_SLAVE_ACL; }
#line 47305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3445:
#line 17033 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= BINLOG_MONITOR_ACL; /*Compatibility*/ }
#line 47311 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3446:
#line 17034 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= CREATE_VIEW_ACL; }
#line 47317 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3447:
#line 17035 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= SHOW_VIEW_ACL; }
#line 47323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3448:
#line 17036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= CREATE_PROC_ACL; }
#line 47329 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3449:
#line 17037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= ALTER_PROC_ACL; }
#line 47335 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3450:
#line 17038 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= CREATE_USER_ACL; }
#line 47341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3451:
#line 17039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= EVENT_ACL;}
#line 47347 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3452:
#line 17040 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= TRIGGER_ACL; }
#line 47353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3453:
#line 17041 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= CREATE_TABLESPACE_ACL; }
#line 47359 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3454:
#line 17042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= DELETE_HISTORY_ACL; }
#line 47365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3455:
#line 17043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= SET_USER_ACL; }
#line 47371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3456:
#line 17044 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= FEDERATED_ADMIN_ACL; }
#line 47377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3457:
#line 17045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= CONNECTION_ADMIN_ACL; }
#line 47383 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3458:
#line 17046 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= READ_ONLY_ADMIN_ACL; }
#line 47389 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3459:
#line 17047 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= READ_ONLY_ADMIN_ACL; }
#line 47395 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3460:
#line 17048 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= BINLOG_MONITOR_ACL; }
#line 47401 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3461:
#line 17049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= BINLOG_ADMIN_ACL; }
#line 47407 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3462:
#line 17050 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= BINLOG_REPLAY_ACL; }
#line 47413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3463:
#line 17051 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= REPL_MASTER_ADMIN_ACL; }
#line 47419 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3464:
#line 17052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= REPL_SLAVE_ADMIN_ACL; }
#line 47425 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3465:
#line 17053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= SLAVE_MONITOR_ACL; }
#line 47431 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3466:
#line 17057 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47437 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3467:
#line 17058 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3470:
#line 17068 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->account_options.x509_subject.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->account_options.x509_subject= (yyvsp[0].lex_string_with_metadata);
          }
#line 47454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3471:
#line 17075 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->account_options.x509_issuer.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->account_options.x509_issuer= (yyvsp[0].lex_string_with_metadata);
          }
#line 47465 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3472:
#line 17082 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->account_options.ssl_cipher.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->account_options.ssl_cipher= (yyvsp[0].lex_string_with_metadata);
          }
#line 47476 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3473:
#line 17092 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING db;
            if (unlikely(Lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name(db,
                                            Lex_grant_object_name::STAR)))
              MYSQL_YYABORT;
          }
#line 47489 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3474:
#line 17101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name((yyvsp[-2].ident_sys),
                                            Lex_grant_object_name::IDENT_STAR)))
              MYSQL_YYABORT;
          }
#line 47499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3475:
#line 17107 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name(
                                            null_clex_str,
                                            Lex_grant_object_name::STAR_STAR)))
              MYSQL_YYABORT;
          }
#line 47510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3476:
#line 17114 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name((yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 47519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3477:
#line 17122 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3478:
#line 17127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3479:
#line 17135 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47546 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3480:
#line 17140 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3481:
#line 17148 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47564 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3482:
#line 17153 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47573 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3487:
#line 17164 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-3].lex_user)->auth->pwtext= (yyvsp[0].lex_string_with_metadata);
          }
#line 47583 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3488:
#line 17170 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-4].lex_user)->auth->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 47593 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3489:
#line 17176 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= (yyvsp[0].user_auth);
          }
#line 47602 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3490:
#line 17181 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
          }
#line 47610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3491:
#line 17188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.user_auth)= (yyvsp[-2].user_auth);
            DBUG_ASSERT((yyval.user_auth)->next == NULL);
            (yyval.user_auth)->next= (yyvsp[0].user_auth);
          }
#line 47620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3492:
#line 17194 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.user_auth)= (yyvsp[0].user_auth);
          }
#line 47628 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3493:
#line 17201 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          (yyval.user_auth)= (yyvsp[0].user_auth);
          (yyval.user_auth)->plugin= (yyvsp[-1].lex_str);
        }
#line 47637 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3494:
#line 17209 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
        }
#line 47646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3495:
#line 17214 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
          (yyval.user_auth)->auth_str= (yyvsp[0].lex_str);
        }
#line 47656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3496:
#line 17220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
          (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
        }
#line 47666 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3498:
#line 17230 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 47674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3499:
#line 17234 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_ANY;
          }
#line 47682 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3500:
#line 17238 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_X509;
          }
#line 47690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3501:
#line 17242 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.ssl_type= SSL_TYPE_NONE;
          }
#line 47698 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3502:
#line 17249 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.questions=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 47707 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3503:
#line 17254 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.updates=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 47716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3504:
#line 17259 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.conn_per_hour= (yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 47725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3505:
#line 17264 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.user_conn= (yyvsp[0].num);
            Lex->account_options.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 47734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3506:
#line 17269 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->account_options.max_statement_time= (yyvsp[0].item_num)->val_real();
            Lex->account_options.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 47743 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3507:
#line 17276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3508:
#line 17277 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47755 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3509:
#line 17281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47761 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3511:
#line 17287 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= NO_ACL;  }
#line 47767 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3512:
#line 17288 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= (yyvsp[0].privilege); }
#line 47773 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3513:
#line 17292 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= NO_ACL;    }
#line 47779 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3514:
#line 17293 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= GRANT_ACL; }
#line 47785 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3515:
#line 17297 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= (yyvsp[-1].privilege) | (yyvsp[0].privilege); }
#line 47791 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3517:
#line 17302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= GRANT_ACL;}
#line 47797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3518:
#line 17303 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.privilege)= NO_ACL; }
#line 47803 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3519:
#line 17308 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 47813 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3520:
#line 17313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3521:
#line 17318 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_COMPOUND;
            if (Lex->sp_body_finalize_procedure(thd))
              MYSQL_YYABORT;
          }
#line 47829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3522:
#line 17326 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 47835 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3523:
#line 17327 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 47841 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3524:
#line 17331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47847 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3525:
#line 17332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 47853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3526:
#line 17337 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 47859 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3527:
#line 17338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 47865 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3528:
#line 17339 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 47871 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3529:
#line 17344 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 47877 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3530:
#line 17345 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 47883 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3531:
#line 17346 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 47889 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3532:
#line 17351 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 47902 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3533:
#line 17363 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 47915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3534:
#line 17372 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47925 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3535:
#line 17378 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3536:
#line 17387 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3537:
#line 17396 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 47955 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3538:
#line 17409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_operation).unit_type= UNION_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 47961 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3539:
#line 17411 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_operation).unit_type= INTERSECT_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 47967 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3540:
#line 17413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.unit_operation).unit_type= EXCEPT_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 47973 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3541:
#line 17420 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 47979 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3542:
#line 17421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 47985 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3543:
#line 17422 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 47991 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3544:
#line 17426 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 47997 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3545:
#line 17428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 48007 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3546:
#line 17433 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 48013 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3547:
#line 17434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_DISTINCT; }
#line 48019 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3548:
#line 17435 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_SMALL_RESULT; }
#line 48025 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3549:
#line 17436 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_BIG_RESULT; }
#line 48031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3550:
#line 17437 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_BUFFER_RESULT; }
#line 48037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3551:
#line 17438 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= OPTION_FOUND_ROWS; }
#line 48043 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3552:
#line 17439 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Select->options|= SELECT_ALL; }
#line 48049 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3555:
#line 17455 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 48064 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3556:
#line 17469 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->account_options.reset();
          }
#line 48073 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3557:
#line 17482 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 48079 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3558:
#line 17483 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 48085 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3559:
#line 17484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 48091 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3560:
#line 17488 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 48097 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3561:
#line 17489 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 48103 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3562:
#line 17493 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 48109 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3563:
#line 17494 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 48115 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3564:
#line 17499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 48121 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3565:
#line 17500 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 48127 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3566:
#line 17505 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 48137 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3567:
#line 17511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 48147 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3568:
#line 17519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 48157 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3569:
#line 17526 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->parsed_create_view((yyvsp[-1].select_lex_unit), (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 48166 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3570:
#line 17533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 48172 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3571:
#line 17534 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 48178 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3572:
#line 17535 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 48184 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3573:
#line 17536 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 48190 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3574:
#line 17547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 48196 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3575:
#line 17549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 48202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3576:
#line 17554 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name.str= NULL;
              (yyval.trg_execution_order).anchor_trigger_name.length= 0;
            }
#line 48212 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3577:
#line 17561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 48221 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3578:
#line 17570 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 48230 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3579:
#line 17579 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $9 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 48238 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3580:
#line 17585 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $13 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 48246 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3581:
#line 17590 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 48254 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3582:
#line 17594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $18 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-16].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-13].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-13].spname), &sp_handler_trigger,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 48279 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3583:
#line 17615 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { /* $20 */
            LEX *lex= Lex;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            if (lex->sp_body_finalize_trigger(thd))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[-9].table), (LEX_CSTRING*) 0,
                                   TL_OPTION_UPDATING, TL_READ_NO_INSERT,
                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
#line 48302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3584:
#line 17643 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str,
                                 thd->variables.collation_database);
          }
#line 48313 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3585:
#line 17650 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sf_return_fill_definition((yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 48322 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3586:
#line 17661 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 48330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3587:
#line 17665 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 48338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3588:
#line 17669 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 48346 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3589:
#line 17673 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 48354 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3590:
#line 17677 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 48362 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3591:
#line 17681 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 48371 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3592:
#line 17688 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 48377 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3593:
#line 17690 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 48394 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3594:
#line 17706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 48405 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3595:
#line 17713 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 48416 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3596:
#line 17720 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE &&
                                 (yyvsp[0].ulong_num) <= static_cast<ulong>(
                                         std::numeric_limits<int32_t>::max()));
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 48430 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3597:
#line 17732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 48436 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3598:
#line 17733 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 48442 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3599:
#line 17734 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 48448 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3600:
#line 17738 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 48454 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3601:
#line 17739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_JOIN;        }
#line 48460 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3602:
#line 17740 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_RESUME;      }
#line 48466 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3603:
#line 17744 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 48472 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3604:
#line 17745 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_ONE_PHASE;   }
#line 48478 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3605:
#line 17750 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_NONE;        }
#line 48484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3606:
#line 17752 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_SUSPEND;     }
#line 48490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3608:
#line 17757 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 48496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3609:
#line 17758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 48502 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3610:
#line 17763 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_install_plugin((yyvsp[-3].object_ddl_options), (yyvsp[-2].ident_sys), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 48511 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3611:
#line 17768 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->stmt_install_plugin((yyvsp[0].lex_str));
          }
#line 48519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3612:
#line 17775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_uninstall_plugin_by_name((yyvsp[-1].object_ddl_options), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 48528 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3613:
#line 17780 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_uninstall_plugin_by_soname((yyvsp[-1].object_ddl_options), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 48537 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3614:
#line 17789 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            YYERROR;
          }
#line 48545 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3619:
#line 18210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            // Direct procedure call (without the CALL keyword)
            Lex_ident_sys tmp(thd, &(yyvsp[0].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->call_statement_start(thd, &tmp)))
              MYSQL_YYABORT;
          }
#line 48557 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3621:
#line 18219 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys tmp(thd, &(yyvsp[-2].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->call_statement_start(thd, &tmp, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 48568 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3623:
#line 18229 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 48574 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3624:
#line 18233 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 48580 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3646:
#line 18281 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (!((yyval.spvar_definition)= Lex->row_field_name(thd, (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 48589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3647:
#line 18289 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyvsp[-1].expr_lex)->sp_while_loop_expression(thd)))
              MYSQL_YYABORT;
          }
#line 48598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3648:
#line 18294 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 48607 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3649:
#line 18302 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 48613 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3651:
#line 18312 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 48623 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3652:
#line 18321 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (yychar == YYEMPTY)
              (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr_rtrim();
            else
              (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 48634 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3653:
#line 18330 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = NULL; }
#line 48640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3654:
#line 18331 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 48646 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3655:
#line 18332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item); }
#line 48652 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3656:
#line 18336 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 48658 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3658:
#line 18338 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 48664 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3659:
#line 18343 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].spvar)->mode= (yyvsp[-1].spvar_mode);
            if (unlikely(Lex->sp_param_fill_definition((yyvsp[-2].spvar), (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 48674 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3660:
#line 18349 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].spvar)->mode= (yyvsp[-5].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyvsp[-6].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 48684 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3661:
#line 18355 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-8].spvar)->mode= (yyvsp[-7].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyvsp[-8].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 48694 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3662:
#line 18361 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].spvar)->mode= (yyvsp[-3].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyvsp[-4].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 48704 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3663:
#line 18367 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].spvar)->mode= (yyvsp[-5].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyvsp[-6].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 48714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3664:
#line 18373 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].spvar)->mode= (yyvsp[-2].spvar_mode);
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyvsp[-3].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 48724 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3665:
#line 18382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 48732 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3666:
#line 18386 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 48741 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3667:
#line 18394 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.lex)= thd->lex;
          }
#line 48749 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3677:
#line 18413 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 48758 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3679:
#line 18421 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 48764 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3680:
#line 18427 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 48775 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3681:
#line 18434 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY,
                                                    false)))
              MYSQL_YYABORT;
          }
#line 48788 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3682:
#line 18443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->set_stmt_init();
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 48799 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3683:
#line 18450 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->var_list.is_empty());
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(lex->set_variable(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY,
                                                    false)))
              MYSQL_YYABORT;
          }
#line 48814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3684:
#line 18461 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (unlikely(!lex->is_trigger_new_or_old_reference(&(yyvsp[-3].ident_sys))))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-4].kwd).pos());
              MYSQL_YYABORT;
            }
            lex->set_stmt_init();
            if (sp_create_assignment_lex(thd, (yyvsp[-4].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 48830 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3685:
#line 18473 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING tmp= { (yyvsp[-5].ident_sys).str, (yyvsp[-5].ident_sys).length };
            if (unlikely(Lex->set_trigger_field(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY,
                                                    false)))
              MYSQL_YYABORT;
          }
#line 48842 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3686:
#line 18484 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 48848 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3687:
#line 18485 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 48854 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3688:
#line 18490 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_push_goto_label(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[-1].ident_sys);
          }
#line 48864 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3689:
#line 18498 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 48870 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3690:
#line 18499 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[0].num); }
#line 48876 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3691:
#line 18503 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 48882 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3692:
#line 18504 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) + 1; }
#line 48888 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3693:
#line 18509 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_init(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 48897 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3694:
#line 18516 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 48906 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3695:
#line 18524 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->m_param_begin= Lex->sphead->m_param_end=
              YYLIP->get_cpp_tok_start() + 1;
          }
#line 48915 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3700:
#line 18542 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spname)= NULL; }
#line 48921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3701:
#line 18543 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spname)= (yyvsp[0].spname); }
#line 48927 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3702:
#line 18548 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_clex_str; }
#line 48933 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3703:
#line 18549 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 48939 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3706:
#line 18558 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.sp_instr_addr)= Lex->sphead->instructions(); }
#line 48945 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3707:
#line 18562 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 48953 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3708:
#line 18566 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 48962 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3709:
#line 18572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock))))
              MYSQL_YYABORT;
          }
#line 48972 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3711:
#line 18582 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 48978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3712:
#line 18584 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 48984 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3713:
#line 18588 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 48990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3714:
#line 18589 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 48996 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3716:
#line 18594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 49002 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3717:
#line 18598 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.init(); }
#line 49008 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3719:
#line 18605 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_add_empty(thd)))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init(0);
          }
#line 49018 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3720:
#line 18610 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock_handlers)= (yyvsp[-1].spblock_handlers); }
#line 49024 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3723:
#line 18622 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 49030 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3725:
#line 18629 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 49036 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3727:
#line 18636 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 49042 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3728:
#line 18640 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!((yyval.lex)= new (thd->mem_root)
                           sp_lex_local(thd, thd->lex))))
              MYSQL_YYABORT;
            thd->m_parser_state->m_yacc.reset_before_substatement();
          }
#line 49053 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3729:
#line 18651 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_FUNCTION;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_function,
                                                        NOT_AGGREGATE)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
            (void) is_native_function_with_warn(thd, &(yyvsp[0].ident_sys));
          }
#line 49072 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3730:
#line 18668 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-7].lex);
            (yyval.lex)= (yyvsp[-6].lex);
          }
#line 49083 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3731:
#line 18678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            DBUG_ASSERT((yyvsp[-2].lex)->sphead->get_package());
            (yyvsp[-1].lex)->sql_command= SQLCOM_CREATE_PROCEDURE;
            sp_name *spname= (yyvsp[-2].lex)->make_sp_name_package_routine(thd, &(yyvsp[0].ident_sys));
            if (unlikely(!spname))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-1].lex);
            if (unlikely(!(yyvsp[-1].lex)->make_sp_head_no_recursive(thd, spname,
                                                        &sp_handler_package_procedure,
                                                        DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;
            (yyvsp[-2].lex)->sphead->get_package()->m_current_routine= (yyvsp[-1].lex);
          }
#line 49101 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3732:
#line 18693 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-5].lex);
            (yyval.lex)= (yyvsp[-4].lex);
          }
#line 49112 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3733:
#line 18705 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 49124 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3734:
#line 18714 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 49136 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3735:
#line 18721 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).init(); }
#line 49142 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3736:
#line 18727 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 49154 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3737:
#line 18735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->lex->sp_body_finalize_function(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 49165 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3738:
#line 18745 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 49177 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3739:
#line 18753 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(thd->lex->sp_body_finalize_procedure(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 49188 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3745:
#line 18778 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 49199 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3746:
#line 18785 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 49210 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3747:
#line 18797 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 49220 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3748:
#line 18805 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident), (yyvsp[0].item))))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 49230 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3749:
#line 18814 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 49239 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3750:
#line 18819 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 49248 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3751:
#line 18824 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-3].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 49257 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3752:
#line 18829 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 49266 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3753:
#line 18838 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= thd->lex;
            lex->sphead->set_c_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 49276 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3754:
#line 18845 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
          }
#line 49285 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3755:
#line 18853 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[0].spname),
                                                         &sp_handler_procedure,
                                                         DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;
          }
#line 49296 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3756:
#line 18861 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sphead->set_c_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 49305 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3757:
#line 18868 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_body_finalize_procedure_standalone(thd, (yyvsp[0].spname))))
              MYSQL_YYABORT;
          }
#line 49314 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3758:
#line 18876 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_drop_function((yyvsp[-3].object_ddl_options), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 49323 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3759:
#line 18881 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_drop_function((yyvsp[-1].object_ddl_options), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 49332 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3760:
#line 18886 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_drop_procedure((yyvsp[-1].object_ddl_options), (yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 49341 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3761:
#line 18891 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE"));
            lex->spname= (yyvsp[0].spname);
          }
#line 49353 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3762:
#line 18899 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_PACKAGE_BODY, (yyvsp[-1].object_ddl_options));
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "PACKAGE BODY"));
            lex->spname= (yyvsp[0].spname);
          }
#line 49365 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3763:
#line 18911 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_procedure_start((yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 49374 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3764:
#line 18916 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->stmt_create_routine_finalize();
          }
#line 49382 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3765:
#line 18921 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_start((yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-3].sp_aggregate_type), (yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 49391 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3766:
#line 18929 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 49400 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3767:
#line 18935 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_start((yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-3].sp_aggregate_type), (yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 49409 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3768:
#line 18943 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 49418 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3769:
#line 18949 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (Lex->stmt_create_udf_function((yyvsp[-9].object_ddl_options) | (yyvsp[-5].object_ddl_options), (yyvsp[-7].sp_aggregate_type), (yyvsp[-4].ident_sys),
                                              (Item_result) (yyvsp[-2].num), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 49428 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3770:
#line 18958 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE,
                                                &sp_handler_package_spec,
                                                (yyvsp[-3].spname), (yyvsp[-7].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_c_chistics(Lex->sp_chistics);
          }
#line 49443 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3771:
#line 18970 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-8].spname), (yyvsp[0].spname), (yyvsp[-5].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 49452 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3772:
#line 18978 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd,
                                                SQLCOM_CREATE_PACKAGE_BODY,
                                                &sp_handler_package_body,
                                                (yyvsp[-3].spname), (yyvsp[-8].object_ddl_options) | (yyvsp[-4].object_ddl_options)))))
              MYSQL_YYABORT;
            pkg->set_c_chistics(Lex->sp_chistics);
            Lex->sp_block_init(thd);
          }
#line 49468 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3773:
#line 18990 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 49477 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3774:
#line 18995 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 49487 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3775:
#line 19001 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-10].spname), (yyvsp[0].spname), (yyvsp[-7].simple_string), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 49496 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3776:
#line 19009 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).init();
          }
#line 49504 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3777:
#line 19012 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[0].spblock); }
#line 49510 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3778:
#line 19017 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sphead->sp_add_instr_cpush_for_cursors(thd, Lex->spcont)))
              MYSQL_YYABORT;
          }
#line 49519 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3779:
#line 19022 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[0].spblock));
          }
#line 49527 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3781:
#line 19029 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 49533 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3782:
#line 19031 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 49541 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3783:
#line 19037 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 49547 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3784:
#line 19039 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 49555 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3785:
#line 19045 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { (yyval.spblock).init(); }
#line 49561 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3788:
#line 19052 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-3].ident_sys), (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 49572 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3789:
#line 19059 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_condition_value *spcond= new (thd->mem_root)
                                        sp_condition_value_user_defined();
            if (unlikely(!spcond) ||
                unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-1].ident_sys), spcond)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 49586 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3790:
#line 19069 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd);
          }
#line 49594 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3791:
#line 19074 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-4].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, false)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 49608 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3797:
#line 19092 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {}
#line 49614 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3808:
#line 19106 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    { }
#line 49620 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3813:
#line 19120 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 49630 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3814:
#line 19128 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-2].spblock_handlers)), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 49639 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3815:
#line 19134 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 49647 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3816:
#line 19138 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 49656 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3817:
#line 19146 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].spblock).hndlrs+= (yyvsp[-2].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-5].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 49666 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3820:
#line 19160 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 49678 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3821:
#line 19169 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-1].spblock_handlers)))))
              MYSQL_YYABORT;
          }
#line 49687 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3822:
#line 19174 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 49697 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3823:
#line 19180 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 49706 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3824:
#line 19187 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].spblock).hndlrs+= (yyvsp[-1].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-4].spblock))))
              MYSQL_YYABORT;
          }
#line 49716 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3825:
#line 19197 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_executable_section(thd, (yyvsp[-1].sp_instr_addr))))
              MYSQL_YYABORT;
          }
#line 49725 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;

  case 3826:
#line 19202 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.yy" /* yacc.c:1646  */
    {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_exceptions(thd, (yyvsp[-3].sp_instr_addr), (yyvsp[0].num))))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init((yyvsp[0].num));
          }
#line 49735 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
    break;


#line 49739 "/home/buildbot/git/mkdist/sql/sql_yacc_ora.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (thd, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (thd, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
